{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///../node_modules/classnames/index.js","webpack:///../node_modules/lru-cache/index.js","webpack:///../node_modules/semver/classes/comparator.js","webpack:///../node_modules/semver/classes/range.js","webpack:///../node_modules/semver/classes/semver.js","webpack:///../node_modules/semver/functions/clean.js","webpack:///../node_modules/semver/functions/cmp.js","webpack:///../node_modules/semver/functions/coerce.js","webpack:///../node_modules/semver/functions/compare-build.js","webpack:///../node_modules/semver/functions/compare-loose.js","webpack:///../node_modules/semver/functions/compare.js","webpack:///../node_modules/semver/functions/diff.js","webpack:///../node_modules/semver/functions/eq.js","webpack:///../node_modules/semver/functions/gt.js","webpack:///../node_modules/semver/functions/gte.js","webpack:///../node_modules/semver/functions/inc.js","webpack:///../node_modules/semver/functions/lt.js","webpack:///../node_modules/semver/functions/lte.js","webpack:///../node_modules/semver/functions/major.js","webpack:///../node_modules/semver/functions/minor.js","webpack:///../node_modules/semver/functions/neq.js","webpack:///../node_modules/semver/functions/parse.js","webpack:///../node_modules/semver/functions/patch.js","webpack:///../node_modules/semver/functions/prerelease.js","webpack:///../node_modules/semver/functions/rcompare.js","webpack:///../node_modules/semver/functions/rsort.js","webpack:///../node_modules/semver/functions/satisfies.js","webpack:///../node_modules/semver/functions/sort.js","webpack:///../node_modules/semver/functions/valid.js","webpack:///../node_modules/semver/index.js","webpack:///../node_modules/semver/internal/constants.js","webpack:///../node_modules/semver/internal/debug.js","webpack:///../node_modules/semver/internal/identifiers.js","webpack:///../node_modules/semver/internal/parse-options.js","webpack:///../node_modules/semver/internal/re.js","webpack:///../node_modules/semver/ranges/gtr.js","webpack:///../node_modules/semver/ranges/intersects.js","webpack:///../node_modules/semver/ranges/ltr.js","webpack:///../node_modules/semver/ranges/max-satisfying.js","webpack:///../node_modules/semver/ranges/min-satisfying.js","webpack:///../node_modules/semver/ranges/min-version.js","webpack:///../node_modules/semver/ranges/outside.js","webpack:///../node_modules/semver/ranges/simplify.js","webpack:///../node_modules/semver/ranges/subset.js","webpack:///../node_modules/semver/ranges/to-comparators.js","webpack:///../node_modules/semver/ranges/valid.js","webpack:///../node_modules/yallist/iterator.js","webpack:///../node_modules/yallist/yallist.js","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"d3\"","webpack:///external amd \"lodash\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./components/types.ts","webpack:///../node_modules/uuid/dist/esm-browser/rng.js","webpack:///../node_modules/uuid/dist/esm-browser/regex.js","webpack:///../node_modules/uuid/dist/esm-browser/stringify.js","webpack:///../node_modules/uuid/dist/esm-browser/validate.js","webpack:///../node_modules/uuid/dist/esm-browser/v4.js","webpack:///./components/thresholds/types.ts","webpack:///./components/thresholds/ThresholdItem.tsx","webpack:///./components/gradients/color.ts","webpack:///./components/defaults.ts","webpack:///./components/thresholds/ThresholdsEditor.tsx","webpack:///./components/metric_hints.ts","webpack:///./components/overrides/OverrideItem.tsx","webpack:///./components/overrides/OverrideEditor.tsx","webpack:///../node_modules/d3-hexbin/src/hexbin.js","webpack:///../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack:///../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack:///../node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","webpack:///../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack:///../node_modules/react-tooltip/dist/react-tooltip.min.mjs","webpack:///./components/gradients/Gradients.tsx","webpack:///./components/layout/layoutManager.ts","webpack:///./utils.ts","webpack:///./components/styles.ts","webpack:///./components/tooltips/Tooltip.tsx","webpack:///./components/Polystat.tsx","webpack:///./data/deframer.ts","webpack:///./data/threshold_processor.ts","webpack:///./data/clickThroughTransformer.ts","webpack:///./data/types.ts","webpack:///./data/composite_processor.ts","webpack:///./data/stats.ts","webpack:///./data/valueMappingsWrapper/v7/valueMappings.ts","webpack:///./data/valueMappingsWrapper/v8/types/thresholds.ts","webpack:///./data/valueMappingsWrapper/v8/types/fieldColor.ts","webpack:///./data/valueMappingsWrapper/v8/types/valueMappings.ts","webpack:///./data/valueMappingsWrapper/v8/valueMappings.ts","webpack:///./data/valueMappingsWrapper/index.ts","webpack:///./data/override_processor.ts","webpack:///./data/processor.ts","webpack:///./components/PolystatPanel.tsx","webpack:///./components/composites/types.ts","webpack:///./components/composites/CompositeMetricItem.tsx","webpack:///./components/composites/CompositeItem.tsx","webpack:///./components/composites/CompositeEditor.tsx","webpack:///./components/thresholds/GlobalThresholdEditor.tsx","webpack:///./migrations.ts","webpack:///./module.ts","webpack:///./components/suggestions.ts"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3545__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8200__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { SelectableValue } from '@grafana/data';\nimport { CompositeItemType } from 'components/composites/types';\nimport { OverrideItemType } from './overrides/types';\nimport { PolystatThreshold } from './thresholds/types';\n\nexport interface PolystatOptions {\n  autoSizeColumns: boolean;\n  autoSizeRows: boolean;\n  autoSizePolygons: boolean;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  globalAutoScaleFonts: boolean;\n  globalClickthrough: string;\n  globalClickthroughNewTabEnabled: boolean;\n  globalClickthroughSanitizedEnabled: boolean;\n  globalClickthroughCustomTargetEnabled: boolean;\n  globalClickthroughCustomTarget: string;\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalFillColor: string;\n  globalFontSize: number;\n  globalGradientsEnabled: boolean;\n  globalOperator: string;\n  globalPolygonBorderSize: number;\n  globalPolygonBorderColor: string;\n  globalPolygonSize: number;\n  globalRegexPattern: string;\n  globalShape: PolygonShapes;\n  globalShowValueEnabled: boolean;\n  globalShowTooltipColumnHeadersEnabled: boolean;\n  globalTextFontAutoColor: string;\n  globalTextFontAutoColorEnabled: boolean;\n  globalTextFontColor: string;\n  globalTextFontFamily: string;\n  globalThresholdsConfig: PolystatThreshold[];\n  globalTooltipsEnabled: boolean;\n  globalTooltipsShowTimestampEnabled: boolean;\n  globalTooltipsFontFamily: string,\n  globalUnitFormat: string;\n  layoutDisplayLimit: number;\n  layoutNumColumns: number;\n  layoutNumRows: number;\n  processedData?: PolystatModel[] | null;\n  panelHeight: any;\n  panelWidth: any;\n  panelId: number;\n  radius: number | null;\n  renderTime?: Date;\n  sortByField: string;\n  sortByDirection: number;\n  overrideConfig: {\n    overrides: OverrideItemType[];\n  };\n  compositeGlobalAliasingEnabled: boolean;\n  compositeConfig: {\n    animationSpeed: string;\n    composites: CompositeItemType[];\n    enabled: boolean;\n  };\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortByField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortByField: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n}\n\nexport interface PolystatModel {\n  displayMode?: string;\n  thresholdLevel?: number; // 0 = ok, 1 = warn, 2 = crit, 3 = unknown (same as sensu)\n  value: number;\n  valueFormatted: string;\n  valueRounded: number;\n  stats: any;\n  name: string;\n  displayName: string; // Used for composites\n  timestamp: number;\n  prefix: string;\n  suffix: string;\n  color: string;\n  clickThrough: string;\n  operatorName: string;\n  newTabEnabled: boolean;\n  customClickthroughTargetEnabled: boolean;\n  customClickthroughTarget: string;\n  sanitizedURL: string;\n  sanitizeURLEnabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  isComposite: boolean;\n  members: PolystatModel[];\n  triggerCache?: any; // holds animation frame info\n}\n\nexport enum PolygonShapes {\n  HEXAGON_POINTED_TOP = 'hexagon_pointed_top',\n  CIRCLE = 'circle',\n  SQUARE = 'square',\n}\n\nexport const PolygonNamedShapes = [\n  { value: 'hexagon_pointed_top', label: 'Hexagon Pointed Top' },\n  { value: 'circle', label: 'Circle' },\n  { value: 'square', label: 'Square' },\n];\n\nexport interface PolystatDiameters {\n  diameterX: number;\n  diameterY: number;\n}\n\nexport const OperatorOptions: SelectableValue[] = [\n  { value: 'mean', label: 'Mean (avg)' },\n  { value: 'sum', label: 'Sum' },\n  { value: 'min', label: 'Min' },\n  { value: 'max', label: 'Max' },\n  { value: 'last', label: 'Last' },\n  { value: 'lastNotNull', label: 'Last Not Null' },\n  { value: 'first', label: 'First' },\n  { value: 'firstNotNull', label: 'First Not Null' },\n  { value: 'count', label: 'Count' },\n  { value: 'allIsNull', label: 'All Is Null (boolean)' },\n  { value: 'allIsZero', label: 'All Is Zero (boolean)' },\n  { value: 'delta', label: 'Delta' },\n  { value: 'diff', label: 'Difference' },\n  { value: 'diffperc', label: 'Difference (Percent)' },\n  { value: 'last_time', label: 'Time of Last Point' },\n  { value: 'logmin', label: 'Log Min' },\n  { value: 'name', label: 'Name' },\n  { value: 'nonNullCount', label: 'Non Null Count' },\n  { value: 'previousDeltaUp', label: 'Previous Delta Up' },\n  { value: 'range', label: 'Range' },\n  { value: 'step', label: 'Step' },\n];\n\nexport const SortOptions = [\n  { value: 0, label: 'Disabled' },\n  { value: 1, label: 'Alphabetical (asc)' },\n  { value: 2, label: 'Alphabetical (desc)' },\n  { value: 3, label: 'Numerical (asc)' },\n  { value: 4, label: 'Numerical (desc)' },\n  { value: 5, label: 'Alphabetical (case-insensitive, asc)' },\n  { value: 6, label: 'Alphabetical (case-insensitive, desc)' },\n];\n\nexport const SortOptionOperators = ['disabled', 'asc', 'desc', 'asc', 'desc', 'iasc', 'idesc'];\n\nexport const SortByFieldOptions = [\n  { value: 'name', label: 'Name' },\n  { value: 'thresholdLevel', label: 'Threshold Level' },\n  { value: 'value', label: 'Value' },\n];\n\nexport const DisplayModes = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport const AnimationModes = [\n  { value: 'all', text: 'Show All' },\n  { value: 'triggered', text: 'Show Triggered' },\n];\n\nexport enum FontFamilies {\n  ARIAL = 'Arial',\n  HELVETICA = 'Helvetica',\n  HELVETICA_NEUE = 'Helvetica Neue',\n  INTER = 'Inter',\n  ROBOTO = 'Roboto',\n  ROBOTO_MONO = 'Roboto Mono',\n}\n\nexport const FontFamilyOptions = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.INTER, label: 'Inter' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\nexport const FontFamilyOptionsLegacy = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.ROBOTO, label: 'Roboto' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { SelectableValue } from '@grafana/data';\n\nexport interface PolystatThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface ThresholdItemTracker {\n  threshold: PolystatThreshold;\n  order: number;\n  ID: string;\n}\n\nexport const ThresholdStates: SelectableValue[] = [\n  { value: 0, label: 'ok' },\n  { value: 1, label: 'warning' },\n  { value: 2, label: 'critical' },\n  { value: 3, label: 'custom' },\n];\n","import React, { useState } from 'react';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Input, ColorPicker, IconButton, useStyles2, Select } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\nimport { PolystatThreshold, ThresholdStates } from './types';\n\ninterface ThresholdItemProps {\n  threshold: PolystatThreshold;\n  key: string;\n  ID: string;\n  valueSetter: any;\n  colorSetter: any;\n  stateSetter: any;\n  remover: any;\n  index: number;\n  disabled: boolean;\n}\n\nexport const ThresholdItem: React.FC<ThresholdItemProps> = (options: ThresholdItemProps) => {\n  const styles = useStyles2(getThresholdStyles);\n  const getThreshold = (thresholdId: number) => {\n    const keys = ThresholdStates.keys();\n    for (const aKey of keys) {\n      if (ThresholdStates[aKey].value === thresholdId) {\n        return ThresholdStates[aKey];\n      }\n    }\n    // no match, return current by default\n    return ThresholdStates[0];\n  };\n\n  const [threshold, setThreshold] = useState<SelectableValue>(getThreshold(options.threshold.state));\n\n  return (\n    <Input\n      disabled={options.disabled}\n      type=\"number\"\n      step=\"1.0\"\n      key={options.ID}\n      onChange={(e) => options.valueSetter(options.index, Number(e.currentTarget.value))}\n      value={options.threshold.value}\n      prefix={\n        <div className={styles.inputPrefix}>\n          <div className={styles.colorPicker}>\n            <ColorPicker\n              color={options.threshold.color}\n              onChange={(color) => options.colorSetter(options.index, color)}\n              enableNamedColors={true}\n            />\n          </div>\n        </div>\n      }\n      suffix={\n        <>\n          <Select\n            disabled={options.disabled}\n            menuShouldPortal={true}\n            value={threshold}\n            onChange={(v) => {\n              setThreshold(v);\n              options.stateSetter(options.index, v.value);\n            }}\n            options={ThresholdStates}\n          />\n          <IconButton\n            disabled={options.disabled}\n            key=\"deleteThreshold\"\n            variant=\"destructive\"\n            name=\"trash-alt\"\n            tooltip=\"Delete Threshold\"\n            onClick={() => options.remover(options.index)}\n          />\n        </>\n      }\n    />\n  );\n};\n\nconst getThresholdStyles = (theme: GrafanaTheme2) => {\n  return {\n    inputPrefix: css`\n      display: flex;\n      align-items: center;\n    `,\n    colorPicker: css`\n      padding: 0 ${theme.spacing(1)};\n    `,\n  };\n};\n","/*\n  Generic class to provide gradient colors\n\n  Based on https://codepen.io/anon/pen/wWxGkr\n\n*/\nexport class Color {\n  r: number;\n  g: number;\n  b: number;\n\n  constructor(r: number, g: number, b: number) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  asHex() {\n    return '#' + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1);\n  }\n\n  asRGB() {\n    return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n  }\n\n  blendWith(col: Color, a: number) {\n    const r = Math.round(col.r * (1 - a) + this.r * a);\n    const g = Math.round(col.g * (1 - a) + this.g * a);\n    const b = Math.round(col.b * (1 - a) + this.b * a);\n    return new Color(r, g, b);\n  }\n\n  Mul(col: Color, a: number) {\n    const r = Math.round((col.r / 255) * this.r * a);\n    const g = Math.round((col.g / 255) * this.g * a);\n    const b = Math.round((col.b / 255) * this.b * a);\n    return new Color(r, g, b);\n  }\n\n  RGBToHex(rgb: any) {\n    let sep = rgb.indexOf(',') > -1 ? ',' : ' ';\n    rgb = rgb.substr(4).split(')')[0].split(sep);\n    // Convert %s to 0–255\n    for (let R in rgb) {\n      let r = rgb[R];\n      if (r.indexOf('%') > -1) {\n        rgb[R] = Math.round((r.substr(0, r.length - 1) / 100) * 255);\n      }\n    }\n  }\n\n  static RGBAToHex(orig: string) {\n    const rgb = orig.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\n    const alpha = ((rgb && rgb[4]) || '').trim();\n    let hex = rgb\n      ? (parseInt(rgb[1], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[2], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[3], 10) | (1 << 8)).toString(16).slice(1)\n      : orig;\n\n    let a = '1';\n    if (alpha !== '') {\n      const alphaVal = parseFloat(alpha);\n      // multiply before convert to HEX\n      a = ((alphaVal * 255) | (1 << 8)).toString(16).slice(1);\n    }\n    return '#' + hex + a;\n  }\n\n  fromHex(hex: string) {\n    // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    hex = hex.substring(1, 7);\n    const bigint = parseInt(hex, 16);\n    this.r = (bigint >> 16) & 255;\n    this.g = (bigint >> 8) & 255;\n    this.b = bigint & 255;\n  }\n}\n","import { Color } from './gradients/color';\nimport { FontFamilies } from './types';\n\n/**\n * Color to use when rendering without any thresholds/overrides\n */\nexport const GLOBAL_FILL_COLOR_RGBA = 'rgba(10, 85, 161, 1)'; // \"#0a55a1\"\nexport const GLOBAL_FILL_COLOR_HEX = '#0a55a1';\nexport const GLOBAL_FILL_COLOR = new Color(10, 85, 161);\n\nexport const GLOBAL_BORDER_COLOR_RGBA = 'rgba(0, 0, 0, 0)'; // \"#000000\"\n/**\n * Color for threshold OK state\n */\nexport const DEFAULT_OK_COLOR_RGBA = 'rgba(41, 156, 70, 1))'; // #299c46\nexport const DEFAULT_OK_COLOR_HEX = '#299c46';\nexport const DEFAULT_OK_COLOR = new Color(41, 156, 70);\n/**\n * Color for threshold Warning state\n */\nexport const DEFAULT_WARNING_COLOR_RGBA = 'rgba(237, 129, 40, 1)'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR_HEX = '#ed8128'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR = new Color(237, 129, 40);\n/**\n * Color for threshold Critical state\n */\nexport const DEFAULT_CRITICAL_COLOR_RGBA = 'rgba(245, 54, 54, 1)';\nexport const DEFAULT_CRITICAL_COLOR_HEX = '#f53636';\nexport const DEFAULT_CRITICAL_COLOR = new Color(245, 54, 54);\n\nexport const DEFAULT_NO_THRESHOLD_COLOR_RGBA = GLOBAL_FILL_COLOR_RGBA;\nexport const DEFAULT_NO_THRESHOLD_COLOR_HEX = GLOBAL_FILL_COLOR_HEX;\nexport const DEFAULT_NO_THRESHOLD_COLOR = new Color(64, 64, 160);\n\nexport const DEFAULT_NO_DATA_COLOR_HEX = '#808080'; // \"grey\"\n\n/**\n * Unit to apply to all metrics without overrides\n */\nexport const GLOBAL_UNIT_FORMAT = 'short';\n/**\n * Number of decimals to display in polygon\n */\nexport const GLOBAL_DISPLAY_DECIMALS = 2;\n/**\n * Show all metrics\n */\nexport const GLOBAL_DISPLAY_MODE = 'all';\n/**\n * Display OK when global mode is set to triggered and there are no triggers\n */\nexport const GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY = 'OK';\n/**\n * Display average (mean) stat for metric\n */\nexport const GLOBAL_OPERATOR_NAME = 'mean'; // mean\n\nexport const GLOBAL_OVERRIDE_COLORS = [\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n];\n\nexport const GLOBAL_TEXT_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TEXT_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\n","import React, { useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { Button, useTheme, useTheme2 } from '@grafana/ui';\nimport { v4 as UUIdv4 } from 'uuid';\nimport { PolystatThreshold, ThresholdItemTracker } from './types';\nimport { ThresholdItem } from './ThresholdItem';\nimport { DEFAULT_OK_COLOR_HEX, DEFAULT_WARNING_COLOR_HEX, DEFAULT_CRITICAL_COLOR_HEX } from '../defaults';\nimport { getColorForTheme } from '@grafana/data';\ninterface Props {\n  thresholds: PolystatThreshold[];\n  setter: any;\n  disabled?: boolean;\n}\nexport const ThresholdsEditor: React.FC<Props> = (options) => {\n  const [tracker, _setTracker] = useState((): ThresholdItemTracker[] => {\n    if (!options.thresholds) {\n      return [] as ThresholdItemTracker[];\n    }\n    const items: ThresholdItemTracker[] = [];\n    options.thresholds.forEach((value: PolystatThreshold, index: number) => {\n      items[index] = {\n        threshold: value,\n        order: index,\n        ID: UUIdv4(),\n      };\n    });\n    return items;\n  });\n  // v9 compatible\n  const theme2 = useTheme2();\n  const oldTheme = useTheme();\n\n  const setTracker = (v: ThresholdItemTracker[]) => {\n    _setTracker(v);\n    const allThresholds: PolystatThreshold[] = [];\n    v.forEach((element) => {\n      allThresholds.push(element.threshold);\n    });\n    options.setter(allThresholds);\n  };\n\n  const updateThresholdValue = (index: number, value: number) => {\n    tracker[index].threshold.value = Number(value);\n    // reorder\n    const allThresholds = [...tracker];\n    const orderedThresholds = orderBy(allThresholds, ['threshold.value'], ['asc']);\n    setTracker([...orderedThresholds]);\n  };\n\n  const updateThresholdColor = (index: number, color: string) => {\n    let useColor: string;\n    if (typeof theme2.visualization !== 'undefined') {\n      useColor = theme2.visualization.getColorByName(color);\n    } else {\n      useColor = getColorForTheme(color, oldTheme);\n    }\n    tracker[index].threshold.color = useColor;\n    setTracker([...tracker]);\n  };\n\n  const updateThresholdState = (index: number, state: any) => {\n    tracker[index].threshold.state = state;\n    // set the color if it is not a custom state\n    if (state < 3) {\n      tracker[index].threshold.color = colorForThresholdState(state);\n    }\n    setTracker([...tracker]);\n  };\n\n  const colorForThresholdState = (state: number) => {\n    switch (state) {\n      case 0:\n        return DEFAULT_OK_COLOR_HEX;\n      case 1:\n        return DEFAULT_WARNING_COLOR_HEX;\n      case 2:\n        return DEFAULT_CRITICAL_COLOR_HEX;\n      default:\n        return DEFAULT_OK_COLOR_HEX;\n    }\n  };\n\n  const removeThreshold = (index: number) => {\n    const allThresholds = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allThresholds.length; i++) {\n      if (allThresholds[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allThresholds.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allThresholds.length; i++) {\n      allThresholds[i].order = i;\n    }\n    setTracker([...allThresholds]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aThreshold: PolystatThreshold = {\n      color: DEFAULT_OK_COLOR_HEX, // \"rgba(50, 172, 45, 1)\",  // green\n      state: 0,\n      value: 0,\n    };\n    const aTracker: ThresholdItemTracker = {\n      threshold: aThreshold,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n  };\n\n  return (\n    <>\n      <Button disabled={options.disabled} fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Threshold\n      </Button>\n      {tracker &&\n        tracker.map((tracker: ThresholdItemTracker, index: number) => {\n          return (\n            <ThresholdItem\n              disabled={options.disabled || false}\n              key={`threshold-item-index-${tracker.ID}`}\n              ID={tracker.ID}\n              threshold={tracker.threshold}\n              valueSetter={updateThresholdValue}\n              colorSetter={updateThresholdColor}\n              stateSetter={updateThresholdState}\n              remover={removeThreshold}\n              index={index}\n            />\n          );\n        })}\n    </>\n  );\n};\n","import { FieldType } from '@grafana/data';\n\n// builds unique metric names to shorten the list displayed\nexport const getMetricHints = (frames: any) => {\n  let metricHints = new Set<string>();\n  for (let i = 0; i < frames.length; i++) {\n    // start with empty hint\n    let hintValue = '';\n    // the frame may have a name defined, start with it, fields will change it as needed\n    if (frames[i]?.name) {\n      hintValue = frames[i].name;\n    }\n    // iterate over fields, get all number types and provide as hints\n    for (const aField of frames[i].fields) {\n      if (aField.type === FieldType.number) {\n        // update the hint to use the field Name if we didn't get a value from above\n        if ((aField.name) && (hintValue === '')) {\n          hintValue = aField.name;\n        }\n        // check for a label with __name__ and use it instead\n        if (aField?.labels && ('__name__' in aField.labels)) {\n          hintValue = aField.labels['__name__'];\n          // append the rest of the labels\n          const appendLabels: string[] = [];\n          for (const aLabel in aField.labels) {\n            if (aLabel !== '__name__') {\n              appendLabels.push(`${aLabel}=\"${aField.labels[aLabel]}\"`);\n            }\n          }\n          if (appendLabels.length > 0) {\n            // sort them first\n            appendLabels.sort();\n            hintValue += '{' + appendLabels.join('') + '}';\n          }\n        }\n        // update the hint to use the displayNameFromDS value\n        // (the query has a specified a naming convention)\n        if (aField?.config && aField.config?.displayNameFromDS) {\n          hintValue = aField.config?.displayNameFromDS;\n        }\n        metricHints.add(hintValue);\n      }\n    }\n  }\n  return metricHints;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  IconName,\n  Input,\n  Field,\n  FieldSet,\n  Switch,\n  Card,\n  IconButton,\n  UnitPicker,\n  Select,\n  Cascader,\n  CascaderOption,\n} from '@grafana/ui';\nimport { OverrideItemProps, OverrideItemType } from './types';\nimport { ThresholdsEditor } from '../thresholds/ThresholdsEditor';\nimport { PolystatThreshold } from '../thresholds/types';\nimport { OperatorOptions } from '../types';\nimport { SelectableValue } from '@grafana/data';\nimport { getMetricHints } from '../metric_hints';\n\nexport const OverrideItem: React.FC<OverrideItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n  const [override, _setOverride] = useState(props.override);\n\n  const setOverride = (value: OverrideItemType) => {\n    _setOverride(value);\n    props.setter(override.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n\n  const getOperator = (operatorName: string) => {\n    const keys = OperatorOptions.keys();\n    for (const aKey of keys) {\n      if (OperatorOptions[aKey].value === operatorName) {\n        return OperatorOptions[aKey];\n      }\n    }\n    // no match, return last not null by default\n    return OperatorOptions[5];\n  };\n  const [operatorName, setOperatorName] = useState<SelectableValue>(getOperator(props.override.operatorName));\n  const removeItem = () => {\n    props.remover(override.order);\n  };\n\n  const moveUp = () => {\n    props.moveUp(override.order);\n  };\n  const moveDown = () => {\n    props.moveDown(override.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(override.order);\n  };\n\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setOverride({ ...override, thresholds: val });\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <Card heading=\"\" key={`override-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field\n            label=\"Label\"\n            description=\"Sets the name of the override in the configuration editor.\"\n            disabled={!override.enabled}\n          >\n            <Input\n              value={override.label}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, label: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Metric/RegEx\" disabled={!override.enabled}>\n            <Cascader\n              initialValue={override.metricName}\n              allowCustomValue\n              placeholder=\"\"\n              options={metricHints}\n              onSelect={(val: string) => setOverride({ ...override, metricName: val })}\n            />\n          </Field>\n          <Field label=\"Alias\" disabled={!override.enabled} hidden={true}>\n            <Input\n              value={override.alias}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, alias: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Decimals\" disabled={!override.enabled}>\n            <Input\n              value={override.decimals}\n              type=\"number\"\n              step={1}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, decimals: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Stat\" description=\"The statistic to be displayed\" disabled={!override.enabled}>\n            <Select\n              menuShouldPortal={true}\n              value={operatorName}\n              onChange={(v) => {\n                setOperatorName(v);\n                setOverride({ ...override, operatorName: v.value });\n              }}\n              options={OperatorOptions}\n            />\n          </Field>\n          <Field label=\"Unit Format\" disabled={!override.enabled}>\n            {override.enabled ? (\n              <UnitPicker\n                value={override.unitFormat}\n                onChange={(val: any) => setOverride({ ...override, unitFormat: val })}\n              />\n            ) : (\n              <span>{override.unitFormat}</span>\n            )}\n          </Field>\n          <Field label=\"Thresholds\" disabled={!override.enabled}>\n            <ThresholdsEditor disabled={!override.enabled} thresholds={override.thresholds} setter={setThresholds} />\n          </Field>\n          <Field label=\"Prefix\" description=\"Apply text to beginning of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.prefix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, prefix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Suffix\" description=\"Apply text to end of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.suffix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, suffix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!override.enabled}>\n            <Input\n              value={override.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setOverride({ ...override, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              disabled={!override.enabled}\n              value={override.clickThroughSanitize}\n              onChange={() => setOverride({ ...override, clickThroughSanitize: !override.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open URL in New Tab\" description=\"Open link in new tab\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughOpenNewTab}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override, clickThroughOpenNewTab: !override.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field label=\"Enable Custom URL Target\" description=\"Enable custom target\" disabled={!override.enabled} hidden={override.clickThroughOpenNewTab}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughCustomTargetEnabled}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override,\n                clickThroughCustomTargetEnabled: !override.clickThroughCustomTargetEnabled,\n                clickThroughCustomTarget: override.clickThroughCustomTarget || ''\n              })}\n            />\n          </Field>\n          <Field label=\"Custom URL Target\" description=\"Specify a custom target, typical values are: _blank|_self|_parent|_top|framename\" disabled={!override.enabled} hidden={!override.clickThroughCustomTargetEnabled}>\n            <Input\n              value={override.clickThroughCustomTarget}\n              placeholder=\"_self\"\n              disabled={!override.enabled}\n              onChange={(e) => setOverride({ ...override, clickThroughCustomTarget: e.currentTarget.value })}\n            />\n          </Field>\n        </FieldSet>\n      </Card.Meta>\n\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"overrideEnabled\"\n          name={override.enabled ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Override\"\n          onClick={() => setOverride({ ...override, enabled: !override.enabled })}\n        />\n        <IconButton key=\"copyOverride\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteOverride\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Override\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { OverrideItem } from './OverrideItem';\nimport { OverrideItemType, OverrideItemTracker } from './types';\nimport { v4 as UUIdv4 } from 'uuid';\nimport { Button, Collapse } from '@grafana/ui';\nimport { PolystatThreshold } from '../thresholds/types';\nimport { OperatorOptions } from '../types';\nimport {\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n} from '../defaults';\n\nexport interface OverrideEditorSettings {\n  overrides: OverrideItemType[];\n  enabled: boolean;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, OverrideEditorSettings> {}\n\nexport const OverrideEditor: React.FC<Props> = ({ item, context, onChange }) => {\n  const [settings] = useState(context.options.overrideConfig);\n  const [tracker, _setTracker] = useState((): OverrideItemTracker[] => {\n    if (!settings.overrides) {\n      return [] as OverrideItemTracker[];\n    }\n    const items: OverrideItemTracker[] = [];\n    settings.overrides.forEach((value: OverrideItemType, index: number) => {\n      items[index] = {\n        override: value,\n        order: index,\n        ID: UUIdv4(),\n      };\n    });\n    return items;\n  });\n\n  const setTracker = (v: OverrideItemTracker[]) => {\n    _setTracker(v);\n    const allOverrides: OverrideItemType[] = [];\n    v.forEach((element) => {\n      allOverrides.push(element.override);\n    });\n    const overrideConfig = {\n      overrides: allOverrides,\n      enabled: settings.enabled,\n    };\n    onChange(overrideConfig as any);\n  };\n\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      return [] as boolean[];\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  const updateOverride = (index: number, value: OverrideItemType) => {\n    tracker[index].override = value;\n    // works ... setTracker(tracker);\n    setTracker([...tracker]);\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].override;\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `${original.label} Copy`,\n      enabled: original.enabled,\n      metricName: original.metricName,\n      alias: original.alias,\n      thresholds: original.thresholds,\n      prefix: original.prefix,\n      suffix: original.suffix,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      clickThroughCustomTargetEnabled: original.clickThroughCustomTargetEnabled,\n      clickThroughCustomTarget: original.clickThroughCustomTarget,\n      unitFormat: original.unitFormat,\n      scaledDecimals: original.scaledDecimals,\n      decimals: original.decimals,\n      colors: original.colors,\n      operatorName: original.operatorName,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const removeOverride = (index: number) => {\n    const allOverrides = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allOverrides.length; i++) {\n      if (allOverrides[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allOverrides.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allOverrides.length; i++) {\n      allOverrides[i].order = i;\n      allOverrides[i].override.order = i;\n    }\n    setTracker([...allOverrides]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const currentState = [...isOpen];\n    currentState[index] = !currentState[index];\n    setIsOpen([...currentState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `Override-${order}`,\n      enabled: true,\n      metricName: '',\n      alias: '',\n      thresholds: [] as PolystatThreshold[],\n      prefix: '',\n      suffix: '',\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      clickThroughCustomTargetEnabled: false,\n      clickThroughCustomTarget: '',\n      unitFormat: 'short',\n      scaledDecimals: null,\n      decimals: '2',\n      colors: [\n        DEFAULT_OK_COLOR_HEX,\n        DEFAULT_WARNING_COLOR_HEX,\n        DEFAULT_CRITICAL_COLOR_HEX,\n        DEFAULT_NO_THRESHOLD_COLOR_HEX,\n      ],\n      operatorName: OperatorOptions[0].value,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Override\n      </Button>\n      {tracker &&\n        tracker.map((tracker: OverrideItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${tracker.ID}`}\n              label={tracker.override.label}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <OverrideItem\n                key={`override-item-index-${tracker.ID}`}\n                ID={tracker.ID}\n                override={tracker.override}\n                enabled={tracker.override.enabled}\n                setter={updateOverride}\n                remover={removeOverride}\n                moveDown={moveDown}\n                moveUp={moveUp}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","/*\n* React Tooltip\n* {@link https://github.com/ReactTooltip/react-tooltip}\n* @copyright ReactTooltip Team\n* @license MIT\n*/\nimport e,{createContext as t,useState as r,useCallback as o,useMemo as n,useContext as l,useRef as i,useEffect as c,useLayoutEffect as a}from\"react\";import{arrow as s,computePosition as u,offset as d,flip as p,shift as v,autoUpdate as m}from\"@floating-ui/dom\";import y from\"classnames\";const f=\"react-tooltip-core-styles\",h=\"react-tooltip-base-styles\",w={core:!1,base:!1};function b({css:e,id:t=h,type:r=\"base\",ref:o}){var n,l;if(!e||\"undefined\"==typeof document||w[r])return;if(\"core\"===r&&\"undefined\"!=typeof process&&(null===(n=null===process||void 0===process?void 0:process.env)||void 0===n?void 0:n.REACT_TOOLTIP_DISABLE_CORE_STYLES))return;if(\"base\"!==r&&\"undefined\"!=typeof process&&(null===(l=null===process||void 0===process?void 0:process.env)||void 0===l?void 0:l.REACT_TOOLTIP_DISABLE_BASE_STYLES))return;\"core\"===r&&(t=f),o||(o={});const{insertAt:i}=o;if(document.getElementById(t))return void console.warn(`[react-tooltip] Element with id '${t}' already exists. Call \\`removeStyle()\\` first`);const c=document.head||document.getElementsByTagName(\"head\")[0],a=document.createElement(\"style\");a.id=t,a.type=\"text/css\",\"top\"===i&&c.firstChild?c.insertBefore(a,c.firstChild):c.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e)),w[r]=!0}function S({type:e=\"base\",id:t=h}={}){if(!w[e])return;\"core\"===e&&(t=f);const r=document.getElementById(t);\"style\"===(null==r?void 0:r.tagName)?null==r||r.remove():console.warn(`[react-tooltip] Failed to remove 'style' element with id '${t}'. Call \\`injectStyle()\\` first`),w[e]=!1}const E=(e,t,r)=>{let o=null;return function(...n){const l=()=>{o=null,r||e.apply(this,n)};r&&!o&&(e.apply(this,n),o=setTimeout(l,t)),r||(o&&clearTimeout(o),o=setTimeout(l,t))}},_=\"DEFAULT_TOOLTIP_ID\",g={anchorRefs:new Set,activeAnchor:{current:null},attach:()=>{},detach:()=>{},setActiveAnchor:()=>{}},A=t({getTooltipData:()=>g}),T=({children:t})=>{const[l,i]=r({[_]:new Set}),[c,a]=r({[_]:{current:null}}),s=(e,...t)=>{i((r=>{var o;const n=null!==(o=r[e])&&void 0!==o?o:new Set;return t.forEach((e=>n.add(e))),{...r,[e]:new Set(n)}}))},u=(e,...t)=>{i((r=>{const o=r[e];return o?(t.forEach((e=>o.delete(e))),{...r}):r}))},d=o(((e=_)=>{var t,r;return{anchorRefs:null!==(t=l[e])&&void 0!==t?t:new Set,activeAnchor:null!==(r=c[e])&&void 0!==r?r:{current:null},attach:(...t)=>s(e,...t),detach:(...t)=>u(e,...t),setActiveAnchor:t=>((e,t)=>{a((r=>{var o;return(null===(o=r[e])||void 0===o?void 0:o.current)===t.current?r:{...r,[e]:t}}))})(e,t)}}),[l,c,s,u]),p=n((()=>({getTooltipData:d})),[d]);return e.createElement(A.Provider,{value:p},t)};function O(e=_){return l(A).getTooltipData(e)}const L=({tooltipId:t,children:r,className:o,place:n,content:l,html:a,variant:s,offset:u,wrapper:d,events:p,positionStrategy:v,delayShow:m,delayHide:f})=>{const{attach:h,detach:w}=O(t),b=i(null);return c((()=>(h(b),()=>{w(b)})),[]),e.createElement(\"span\",{ref:b,className:y(\"react-tooltip-wrapper\",o),\"data-tooltip-place\":n,\"data-tooltip-content\":l,\"data-tooltip-html\":a,\"data-tooltip-variant\":s,\"data-tooltip-offset\":u,\"data-tooltip-wrapper\":d,\"data-tooltip-events\":p,\"data-tooltip-position-strategy\":v,\"data-tooltip-delay-show\":m,\"data-tooltip-delay-hide\":f},r)},R=\"undefined\"!=typeof window?a:c,N=e=>{if(!(e instanceof HTMLElement||e instanceof SVGElement))return!1;const t=getComputedStyle(e);return[\"overflow\",\"overflow-x\",\"overflow-y\"].some((e=>{const r=t.getPropertyValue(e);return\"auto\"===r||\"scroll\"===r}))},k=e=>{if(!e)return null;let t=e.parentElement;for(;t;){if(N(t))return t;t=t.parentElement}return document.scrollingElement||document.documentElement},x=async({elementReference:e=null,tooltipReference:t=null,tooltipArrowReference:r=null,place:o=\"top\",offset:n=10,strategy:l=\"absolute\",middlewares:i=[d(Number(n)),p(),v({padding:5})],border:c})=>{if(!e)return{tooltipStyles:{},tooltipArrowStyles:{},place:o};if(null===t)return{tooltipStyles:{},tooltipArrowStyles:{},place:o};const a=i;return r?(a.push(s({element:r,padding:5})),u(e,t,{placement:o,strategy:l,middleware:a}).then((({x:e,y:t,placement:r,middlewareData:o})=>{var n,l;const i={left:`${e}px`,top:`${t}px`,border:c},{x:a,y:s}=null!==(n=o.arrow)&&void 0!==n?n:{x:0,y:0},u=null!==(l={top:\"bottom\",right:\"left\",bottom:\"top\",left:\"right\"}[r.split(\"-\")[0]])&&void 0!==l?l:\"bottom\",d=c&&{borderBottom:c,borderRight:c};let p=0;if(c){const e=`${c}`.match(/(\\d+)px/);p=(null==e?void 0:e[1])?Number(e[1]):1}return{tooltipStyles:i,tooltipArrowStyles:{left:null!=a?`${a}px`:\"\",top:null!=s?`${s}px`:\"\",right:\"\",bottom:\"\",...d,[u]:`-${4+p}px`},place:r}}))):u(e,t,{placement:\"bottom\",strategy:l,middleware:a}).then((({x:e,y:t,placement:r})=>({tooltipStyles:{left:`${e}px`,top:`${t}px`},tooltipArrowStyles:{},place:r})))};var C=\"core-styles-module_tooltip__3vRRp\",$=\"core-styles-module_fixed__pcSol\",I=\"core-styles-module_arrow__cvMwQ\",j=\"core-styles-module_noArrow__xock6\",B=\"core-styles-module_clickable__ZuTTB\",D=\"core-styles-module_show__Nt9eE\",H={tooltip:\"styles-module_tooltip__mnnfp\",arrow:\"styles-module_arrow__K0L3T\",dark:\"styles-module_dark__xNqje\",light:\"styles-module_light__Z6W-X\",success:\"styles-module_success__A2AKt\",warning:\"styles-module_warning__SCK0X\",error:\"styles-module_error__JvumD\",info:\"styles-module_info__BWdHW\"};const z=({id:t,className:n,classNameArrow:l,variant:a=\"dark\",anchorId:s,anchorSelect:u,place:d=\"top\",offset:p=10,events:v=[\"hover\"],openOnClick:f=!1,positionStrategy:h=\"absolute\",middlewares:w,wrapper:b,delayShow:S=0,delayHide:_=0,float:g=!1,hidden:A=!1,noArrow:T=!1,clickable:L=!1,closeOnEsc:N=!1,closeOnScroll:z=!1,closeOnResize:q=!1,style:W,position:M,afterShow:P,afterHide:F,content:K,contentWrapperRef:U,isOpen:X,setIsOpen:Y,activeAnchor:V,setActiveAnchor:Z,border:G,opacity:J,arrowColor:Q})=>{const ee=i(null),te=i(null),re=i(null),oe=i(null),[ne,le]=r(d),[ie,ce]=r({}),[ae,se]=r({}),[ue,de]=r(!1),[pe,ve]=r(!1),me=i(!1),ye=i(null),{anchorRefs:fe,setActiveAnchor:he}=O(t),we=i(!1),[be,Se]=r([]),Ee=i(!1),_e=f||v.includes(\"click\");R((()=>(Ee.current=!0,()=>{Ee.current=!1})),[]),c((()=>{if(!ue){const e=setTimeout((()=>{ve(!1)}),150);return()=>{clearTimeout(e)}}return()=>null}),[ue]);const ge=e=>{Ee.current&&(e&&ve(!0),setTimeout((()=>{Ee.current&&(null==Y||Y(e),void 0===X&&de(e))}),10))};c((()=>{if(void 0===X)return()=>null;X&&ve(!0);const e=setTimeout((()=>{de(X)}),10);return()=>{clearTimeout(e)}}),[X]),c((()=>{ue!==me.current&&(me.current=ue,ue?null==P||P():null==F||F())}),[ue]);const Ae=(e=_)=>{oe.current&&clearTimeout(oe.current),oe.current=setTimeout((()=>{we.current||ge(!1)}),e)},Te=e=>{var t;if(!e)return;const r=null!==(t=e.currentTarget)&&void 0!==t?t:e.target;if(!(null==r?void 0:r.isConnected))return Z(null),void he({current:null});S?(re.current&&clearTimeout(re.current),re.current=setTimeout((()=>{ge(!0)}),S)):ge(!0),Z(r),he({current:r}),oe.current&&clearTimeout(oe.current)},Oe=()=>{L?Ae(_||100):_?Ae():ge(!1),re.current&&clearTimeout(re.current)},Le=({x:e,y:t})=>{x({place:d,offset:p,elementReference:{getBoundingClientRect:()=>({x:e,y:t,width:0,height:0,top:t,left:e,right:e,bottom:t})},tooltipReference:ee.current,tooltipArrowReference:te.current,strategy:h,middlewares:w,border:G}).then((e=>{Object.keys(e.tooltipStyles).length&&ce(e.tooltipStyles),Object.keys(e.tooltipArrowStyles).length&&se(e.tooltipArrowStyles),le(e.place)}))},Re=e=>{if(!e)return;const t=e,r={x:t.clientX,y:t.clientY};Le(r),ye.current=r},Ne=e=>{Te(e),_&&Ae()},ke=e=>{var t;[document.querySelector(`[id='${s}']`),...be].some((t=>null==t?void 0:t.contains(e.target)))||(null===(t=ee.current)||void 0===t?void 0:t.contains(e.target))||(ge(!1),re.current&&clearTimeout(re.current))},xe=E(Te,50,!0),Ce=E(Oe,50,!0),$e=o((()=>{M?Le(M):g?ye.current&&Le(ye.current):x({place:d,offset:p,elementReference:V,tooltipReference:ee.current,tooltipArrowReference:te.current,strategy:h,middlewares:w,border:G}).then((e=>{Ee.current&&(Object.keys(e.tooltipStyles).length&&ce(e.tooltipStyles),Object.keys(e.tooltipArrowStyles).length&&se(e.tooltipArrowStyles),le(e.place))}))}),[ue,V,K,W,d,p,h,M,g]);c((()=>{var e,t;const r=new Set(fe);be.forEach((e=>{r.add({current:e})}));const o=document.querySelector(`[id='${s}']`);o&&r.add({current:o});const n=()=>{ge(!1)},l=k(V),i=k(ee.current);z&&(window.addEventListener(\"scroll\",n),null==l||l.addEventListener(\"scroll\",n),null==i||i.addEventListener(\"scroll\",n));let c=null;q?window.addEventListener(\"resize\",n):V&&ee.current&&(c=m(V,ee.current,$e,{ancestorResize:!0,elementResize:!0,layoutShift:!0}));const a=e=>{\"Escape\"===e.key&&ge(!1)};N&&window.addEventListener(\"keydown\",a);const u=[];_e?(window.addEventListener(\"click\",ke),u.push({event:\"click\",listener:Ne})):(u.push({event:\"mouseenter\",listener:xe},{event:\"mouseleave\",listener:Ce},{event:\"focus\",listener:xe},{event:\"blur\",listener:Ce}),g&&u.push({event:\"mousemove\",listener:Re}));const d=()=>{we.current=!0},p=()=>{we.current=!1,Oe()};return L&&!_e&&(null===(e=ee.current)||void 0===e||e.addEventListener(\"mouseenter\",d),null===(t=ee.current)||void 0===t||t.addEventListener(\"mouseleave\",p)),u.forEach((({event:e,listener:t})=>{r.forEach((r=>{var o;null===(o=r.current)||void 0===o||o.addEventListener(e,t)}))})),()=>{var e,t;z&&(window.removeEventListener(\"scroll\",n),null==l||l.removeEventListener(\"scroll\",n),null==i||i.removeEventListener(\"scroll\",n)),q?window.removeEventListener(\"resize\",n):null==c||c(),_e&&window.removeEventListener(\"click\",ke),N&&window.removeEventListener(\"keydown\",a),L&&!_e&&(null===(e=ee.current)||void 0===e||e.removeEventListener(\"mouseenter\",d),null===(t=ee.current)||void 0===t||t.removeEventListener(\"mouseleave\",p)),u.forEach((({event:e,listener:t})=>{r.forEach((r=>{var o;null===(o=r.current)||void 0===o||o.removeEventListener(e,t)}))}))}}),[V,$e,pe,fe,be,N,v]),c((()=>{let e=null!=u?u:\"\";!e&&t&&(e=`[data-tooltip-id='${t}']`);const r=new MutationObserver((r=>{const o=[];r.forEach((r=>{if(\"attributes\"===r.type&&\"data-tooltip-id\"===r.attributeName){r.target.getAttribute(\"data-tooltip-id\")===t&&o.push(r.target)}if(\"childList\"===r.type&&(V&&[...r.removedNodes].some((e=>{var t;return!!(null===(t=null==e?void 0:e.contains)||void 0===t?void 0:t.call(e,V))&&(ve(!1),ge(!1),Z(null),re.current&&clearTimeout(re.current),oe.current&&clearTimeout(oe.current),!0)})),e))try{const t=[...r.addedNodes].filter((e=>1===e.nodeType));o.push(...t.filter((t=>t.matches(e)))),o.push(...t.flatMap((t=>[...t.querySelectorAll(e)])))}catch(e){}})),o.length&&Se((e=>[...e,...o]))}));return r.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:[\"data-tooltip-id\"]}),()=>{r.disconnect()}}),[t,u,V]),c((()=>{$e()}),[$e]),c((()=>{if(!(null==U?void 0:U.current))return()=>null;const e=new ResizeObserver((()=>{$e()}));return e.observe(U.current),()=>{e.disconnect()}}),[K,null==U?void 0:U.current]),c((()=>{var e;const t=document.querySelector(`[id='${s}']`),r=[...be,t];V&&r.includes(V)||Z(null!==(e=be[0])&&void 0!==e?e:t)}),[s,be,V]),c((()=>()=>{re.current&&clearTimeout(re.current),oe.current&&clearTimeout(oe.current)}),[]),c((()=>{let e=u;if(!e&&t&&(e=`[data-tooltip-id='${t}']`),e)try{const t=Array.from(document.querySelectorAll(e));Se(t)}catch(e){Se([])}}),[t,u]);const Ie=!A&&K&&ue&&Object.keys(ie).length>0;return pe?e.createElement(b,{id:t,role:\"tooltip\",className:y(\"react-tooltip\",C,H.tooltip,H[a],n,`react-tooltip__place-${ne}`,{\"react-tooltip__show\":Ie,[D]:Ie,[$]:\"fixed\"===h,[B]:L}),style:{...W,...ie,opacity:void 0!==J&&Ie?J:void 0},ref:ee},K,e.createElement(b,{className:y(\"react-tooltip-arrow\",I,H.arrow,l,{[j]:T}),style:{...ae,background:Q?`linear-gradient(to right bottom, transparent 50%, ${Q} 50%)`:void 0},ref:te})):null},q=({content:t})=>e.createElement(\"span\",{dangerouslySetInnerHTML:{__html:t}}),W=({id:t,anchorId:o,anchorSelect:n,content:l,html:a,render:s,className:u,classNameArrow:d,variant:p=\"dark\",place:v=\"top\",offset:m=10,wrapper:y=\"div\",children:f=null,events:h=[\"hover\"],openOnClick:w=!1,positionStrategy:b=\"absolute\",middlewares:S,delayShow:E=0,delayHide:_=0,float:g=!1,hidden:A=!1,noArrow:T=!1,clickable:L=!1,closeOnEsc:R=!1,closeOnScroll:N=!1,closeOnResize:k=!1,style:x,position:C,isOpen:$,disableStyleInjection:I=!1,border:j,opacity:B,arrowColor:D,setIsOpen:H,afterShow:W,afterHide:M})=>{const[P,F]=r(l),[K,U]=r(a),[X,Y]=r(v),[V,Z]=r(p),[G,J]=r(m),[Q,ee]=r(E),[te,re]=r(_),[oe,ne]=r(g),[le,ie]=r(A),[ce,ae]=r(y),[se,ue]=r(h),[de,pe]=r(b),[ve,me]=r(null),ye=i(I),{anchorRefs:fe,activeAnchor:he}=O(t),we=e=>null==e?void 0:e.getAttributeNames().reduce(((t,r)=>{var o;if(r.startsWith(\"data-tooltip-\")){t[r.replace(/^data-tooltip-/,\"\")]=null!==(o=null==e?void 0:e.getAttribute(r))&&void 0!==o?o:null}return t}),{}),be=e=>{const t={place:e=>{var t;Y(null!==(t=e)&&void 0!==t?t:v)},content:e=>{F(null!=e?e:l)},html:e=>{U(null!=e?e:a)},variant:e=>{var t;Z(null!==(t=e)&&void 0!==t?t:p)},offset:e=>{J(null===e?m:Number(e))},wrapper:e=>{var t;ae(null!==(t=e)&&void 0!==t?t:y)},events:e=>{const t=null==e?void 0:e.split(\" \");ue(null!=t?t:h)},\"position-strategy\":e=>{var t;pe(null!==(t=e)&&void 0!==t?t:b)},\"delay-show\":e=>{ee(null===e?E:Number(e))},\"delay-hide\":e=>{re(null===e?_:Number(e))},float:e=>{ne(null===e?g:\"true\"===e)},hidden:e=>{ie(null===e?A:\"true\"===e)}};Object.values(t).forEach((e=>e(null))),Object.entries(e).forEach((([e,r])=>{var o;null===(o=t[e])||void 0===o||o.call(t,r)}))};c((()=>{F(l)}),[l]),c((()=>{U(a)}),[a]),c((()=>{Y(v)}),[v]),c((()=>{Z(p)}),[p]),c((()=>{J(m)}),[m]),c((()=>{ee(E)}),[E]),c((()=>{re(_)}),[_]),c((()=>{ne(g)}),[g]),c((()=>{ie(A)}),[A]),c((()=>{pe(b)}),[b]),c((()=>{ye.current!==I&&console.warn(\"[react-tooltip] Do not change `disableStyleInjection` dynamically.\")}),[I]),c((()=>{\"undefined\"!=typeof window&&window.dispatchEvent(new CustomEvent(\"react-tooltip-inject-styles\",{detail:{disableCore:\"core\"===I,disableBase:I}}))}),[]),c((()=>{var e;const r=new Set(fe);let l=n;if(!l&&t&&(l=`[data-tooltip-id='${t}']`),l)try{document.querySelectorAll(l).forEach((e=>{r.add({current:e})}))}catch(e){console.warn(`[react-tooltip] \"${l}\" is not a valid CSS selector`)}const i=document.querySelector(`[id='${o}']`);if(i&&r.add({current:i}),!r.size)return()=>null;const c=null!==(e=null!=ve?ve:i)&&void 0!==e?e:he.current,a=new MutationObserver((e=>{e.forEach((e=>{var t;if(!c||\"attributes\"!==e.type||!(null===(t=e.attributeName)||void 0===t?void 0:t.startsWith(\"data-tooltip-\")))return;const r=we(c);be(r)}))})),s={attributes:!0,childList:!1,subtree:!1};if(c){const e=we(c);be(e),a.observe(c,s)}return()=>{a.disconnect()}}),[fe,he,ve,o,n]),c((()=>{(null==x?void 0:x.border)&&console.warn(\"[react-tooltip] Do not set `style.border`. Use `border` prop instead.\"),j&&!CSS.supports(\"border\",`${j}`)&&console.warn(`[react-tooltip] \"${j}\" is not a valid \\`border\\`.`),(null==x?void 0:x.opacity)&&console.warn(\"[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.\"),B&&!CSS.supports(\"opacity\",`${B}`)&&console.warn(`[react-tooltip] \"${B}\" is not a valid \\`opacity\\`.`)}),[]);let Se=f;const Ee=i(null);if(s){const t=s({content:null!=P?P:null,activeAnchor:ve});Se=t?e.createElement(\"div\",{ref:Ee,className:\"react-tooltip-content-wrapper\"},t):null}else P&&(Se=P);K&&(Se=e.createElement(q,{content:K}));const _e={id:t,anchorId:o,anchorSelect:n,className:u,classNameArrow:d,content:Se,contentWrapperRef:Ee,place:X,variant:V,offset:G,wrapper:ce,events:se,openOnClick:w,positionStrategy:de,middlewares:S,delayShow:Q,delayHide:te,float:oe,hidden:le,noArrow:T,clickable:L,closeOnEsc:R,closeOnScroll:N,closeOnResize:k,style:x,position:C,isOpen:$,border:j,opacity:B,arrowColor:D,setIsOpen:H,afterShow:W,afterHide:M,activeAnchor:ve,setActiveAnchor:e=>me(e)};return e.createElement(z,{..._e})};\"undefined\"!=typeof window&&window.addEventListener(\"react-tooltip-inject-styles\",(e=>{e.detail.disableCore||b({css:`:root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9}.core-styles-module_tooltip__3vRRp{visibility:hidden;position:absolute;top:0;left:0;pointer-events:none;opacity:0;transition:opacity 0.3s ease-out;will-change:opacity,visibility}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{visibility:visible;opacity:var(--rt-opacity)}`,type:\"core\"}),e.detail.disableBase||b({css:`\n.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px}[class*='react-tooltip__place-top']>.styles-module_arrow__K0L3T{transform:rotate(45deg)}[class*='react-tooltip__place-right']>.styles-module_arrow__K0L3T{transform:rotate(135deg)}[class*='react-tooltip__place-bottom']>.styles-module_arrow__K0L3T{transform:rotate(225deg)}[class*='react-tooltip__place-left']>.styles-module_arrow__K0L3T{transform:rotate(315deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}`,type:\"base\"})}));export{W as Tooltip,T as TooltipProvider,L as TooltipWrapper,S as removeStyle};\n","import { DEFAULT_CRITICAL_COLOR, DEFAULT_OK_COLOR, DEFAULT_WARNING_COLOR } from '../defaults';\nimport React from 'react';\n\nimport { Color } from './color';\n\nexport interface GradientProps {\n  data: any;\n  gradientId: string;\n}\nexport const Gradients: React.FC<GradientProps> = (options) => {\n  const pureLight = new Color(255, 255, 255);\n\n  const createGradients = (data: any): any => {\n    const gradients = [];\n    const pureLight = new Color(255, 255, 255);\n    for (let i = 0; i < data.length; i++) {\n      const aColorStart = new Color(0, 0, 0);\n      // color can be in hex or in rgb\n      let useColor: string = data[i].color;\n      if (useColor.startsWith('rgba')) {\n        useColor = Color.RGBAToHex(useColor);\n      }\n      aColorStart.fromHex(useColor);\n      const aColorEnd = aColorStart.Mul(pureLight, 0.7);\n      gradients.push({ start: aColorStart.asHex(), end: aColorEnd.asHex() });\n    }\n    return gradients;\n  };\n  const colorGradients = createGradients(options.data);\n  const okColorStart = DEFAULT_OK_COLOR; // '#299c46', // \"rgba(50, 172, 45, 1)\", // green\n  const okColorEnd = okColorStart.Mul(pureLight, 0.7);\n  const warningColorStart = DEFAULT_WARNING_COLOR; // #FFC837 // '#e5ac0e', // \"rgba(237, 129, 40, 1)\", // yellow\n  const warningColorEnd = warningColorStart.Mul(pureLight, 0.7);\n  const criticalColorStart = DEFAULT_CRITICAL_COLOR; // #e52d27 // '#bf1b00', // \"rgba(245, 54, 54, 1)\", // red\n  const criticalColorEnd = criticalColorStart.Mul(pureLight, 0.7);\n\n  const gradientId = options.gradientId;\n  return (\n    <>\n      <defs>\n        {colorGradients.map((aGradient: any, index: number) => {\n          return (\n            <linearGradient\n              key={index}\n              id={gradientId + '_linear_gradient_state_data_' + index}\n              x1={'30%'}\n              y1={'30%'}\n              x2={'70%'}\n              y2={'70%'}\n            >\n              <stop offset={'0%'} stopColor={aGradient.start} />\n              <stop offset={'100%'} stopColor={aGradient.end} />\n            </linearGradient>\n          );\n        })}\n        <linearGradient id={gradientId + '_linear_gradient_state_ok'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={okColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={okColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_warning'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={warningColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={warningColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient-state_critical'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={criticalColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={criticalColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_unknown'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={'#73808A'} />\n          <stop offset={'100%'} stopColor={'#73808A'} />\n        </linearGradient>\n      </defs>\n    </>\n  );\n};\n","import * as d3 from 'd3';\nimport { PolygonShapes, PolystatDiameters } from '../types';\nimport { LayoutPoint } from './types';\n/**\n * LayoutManager creates layouts for supported polygon shapes\n */\nexport class LayoutManager {\n  width: number;\n  height: number;\n  numColumns: number;\n  numRows: number;\n  radius: number;\n  autoSize: boolean;\n  maxRowsUsed: number;\n  maxColumnsUsed: number;\n  displayLimit: number;\n  shape: PolygonShapes;\n  readonly SQRT3 = 1.7320508075688772;\n\n  constructor(\n    width: number,\n    height: number,\n    numColumns: number,\n    numRows: number,\n    displayLimit: number,\n    autoSize: boolean,\n    shape: PolygonShapes\n  ) {\n    this.width = width;\n    this.height = height;\n    // check for less than 1 or NaN, force to 8\n    if (numColumns < 1 || isNaN(numColumns)) {\n      this.numColumns = 8;\n    } else {\n      this.numColumns = numColumns;\n    }\n    // check for less than 1 or NaN, force to 8\n    if (numRows < 1 || isNaN(numRows)) {\n      this.numRows = 8;\n    } else {\n      this.numRows = numRows;\n    }\n\n    this.maxColumnsUsed = 0;\n    this.maxRowsUsed = 0;\n\n    // negative or NaN limit gets set to 100, 0 is allowed for unlimited\n    if (displayLimit < 0 || isNaN(displayLimit)) {\n      this.displayLimit = 100;\n    } else {\n      this.displayLimit = displayLimit;\n    }\n    this.shape = shape;\n    this.radius = 0;\n    this.autoSize = autoSize;\n  }\n\n  /**\n   * Sets the radius to be used in all layout calculations\n   *\n   * @param radius user defined value\n   */\n  setRadius(radius: number) {\n    this.radius = radius;\n  }\n  setHeight(height: number) {\n    this.height = height;\n  }\n  setWidth(width: number) {\n    this.width = width;\n  }\n  /**\n   * returns a layout for hexagons with pointed tops\n   */\n  generateHexagonPointedTopLayout(): any {\n    const layout = {};\n    this.radius = this.getHexFlatTopRadius();\n    return layout;\n  }\n\n  /**\n   * returns a layout for square-shapes\n   */\n  generateUniformLayout(): any {\n    const layout = {};\n    this.radius = this.getUniformRadius();\n    return layout;\n  }\n\n  /**\n   * The maximum radius the hexagons can have to still fit the screen\n   * With (long) radius being R:\n   *  - Total width (rows > 1) = 1 small radius (sqrt(3) * R / 2) + columns * small diameter (sqrt(3) * R)\n   *  - Total height = 1 pointy top (1/2 * R) + rows * size of the rest (3/2 * R)\n   */\n  getHexFlatTopRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    if (hexRadius !== undefined) {\n      hexRadius = hexRadius - polygonBorderSize;\n      return this.truncateFloat(hexRadius);\n    }\n    // default to a reasonable value (should not happen though)\n    return 40;\n  }\n\n  /**\n   * Helper method to return rendered width and height of hexagon shape\n   */\n  getHexFlatTopDiameters(): PolystatDiameters {\n    const hexRadius = this.getHexFlatTopRadius();\n    const diameterX = this.truncateFloat(hexRadius * this.SQRT3);\n    const diameterY = this.truncateFloat(hexRadius * 2);\n    return { diameterX, diameterY };\n  }\n\n  /**\n   * Helper method to return rendered width and height of a circle/square shapes\n   */\n  getUniformDiameters(): PolystatDiameters {\n    const radius = this.getUniformRadius();\n    const diameterX = radius * 2;\n    const diameterY = radius * 2;\n    return { diameterX, diameterY };\n  }\n  /**\n   * Given the number of columns and rows, calculate the maximum size of a uniform shaped polygon that can be used\n   *   uniformed shapes are: square/circle\n   * width divided by the number of columns determines the max horizontal of the square\n   * height divided by the number of rows determines the max vertical size of the square\n   * the smaller of the two is used since that is the \"best fit\" for a square\n   */\n  getUniformRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    // width divided by the number of columns determines the max horizontal of the square\n    // height divided by the number of rows determines the max vertical size of the square\n    // the smaller of the two is used since that is the \"best fit\"\n    const horizontalMax = (this.width / this.maxColumnsUsed) * 0.5;\n    const verticalMax = (this.height / this.maxRowsUsed) * 0.5;\n    let uniformRadius = horizontalMax;\n    if (uniformRadius > verticalMax) {\n      // vertically limited\n      uniformRadius = verticalMax;\n    }\n    // internal border\n    uniformRadius = uniformRadius - polygonBorderSize;\n    return this.truncateFloat(uniformRadius);\n  }\n\n  generatePossibleColumnAndRowsSizes(columnAutoSize: boolean, rowAutoSize: boolean, dataSize: number) {\n    if (rowAutoSize && columnAutoSize) {\n      // sqrt of # data items\n      const squared = Math.sqrt(dataSize);\n      // favor columns when width is greater than height\n      // favor rows when width is less than height\n      if (this.width > this.height) {\n        this.numColumns = Math.ceil((this.width / this.height) * squared * 0.75);\n        // always at least 1 column and max. data.length columns\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        } else if (this.numColumns > dataSize) {\n          this.numColumns = dataSize;\n        }\n\n        // Align rows count to computed columns count\n        this.numRows = Math.ceil(dataSize / this.numColumns);\n        // always at least 1 row\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        }\n      } else {\n        this.numRows = Math.ceil((this.height / this.width) * squared * 0.75);\n        // always at least 1 row and max. data.length rows\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        } else if (this.numRows > dataSize) {\n          this.numRows = dataSize;\n        }\n        // Align columns count to computed rows count\n        this.numColumns = Math.ceil(dataSize / this.numRows);\n        // always at least 1 column\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        }\n      }\n    } else if (rowAutoSize) {\n      // Align rows count to fixed columns count\n      this.numRows = Math.ceil(dataSize / this.numColumns);\n      // always at least 1 row\n      if (this.numRows < 1) {\n        this.numRows = 1;\n      }\n    } else if (columnAutoSize) {\n      // Align columns count to fixed rows count\n      this.numColumns = Math.ceil(dataSize / this.numRows);\n      // always at least 1 column\n      if (this.numColumns < 1) {\n        this.numColumns = 1;\n      }\n    }\n  }\n\n  /**\n   * This determines how many rows and columns are going to be rendered, which can then\n   * be used to calculate the radius size (which is needed before generating points)\n   * @param data metrics\n   * @param displayLimit max number of polygons to show\n   */\n  generateActualColumnAndRowUsage(data: any, displayLimit: number) {\n    let polygonsUsed = 0;\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            polygonsUsed++;\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n  }\n\n  shapeToCoordinates(shape: PolygonShapes, radius: number, column: number, row: number) {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        let x = radius * column * this.SQRT3;\n        //Offset each uneven row by half of a \"hex-width\" to the right\n        if (row % 2 === 1) {\n          x += (radius * this.SQRT3) / 2;\n        }\n        const y = radius * row * 1.5;\n        return [x, y];\n      case PolygonShapes.CIRCLE:\n        return [radius * column * 2, radius * row * 2];\n      case PolygonShapes.SQUARE:\n        return [radius * column * 2, radius * row * 2];\n      default:\n        return [radius * column * 1.75, radius * row * 1.5];\n    }\n  }\n\n  // Builds the placeholder polygons needed to represent each metric\n  generatePoints(data: any, displayLimit: number, shape: PolygonShapes): LayoutPoint[] {\n    const points: LayoutPoint[] = [];\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            let coords = this.shapeToCoordinates(shape, this.radius, j, i);\n            const aPoint: LayoutPoint = {\n              x: coords[0],\n              y: coords[1],\n            }\n            points.push(aPoint);\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateUniformPoints(data: any, displayLimit: number): any {\n    const points = [] as any;\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    let xPos = 1;\n    let yPos = 1;\n\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            points.push({\n              x: xPos,\n              y: yPos,\n              width: this.radius * 2,\n              height: this.radius * 2,\n            });\n            xPos += this.radius * 2;\n          }\n        }\n        xPos = 1;\n        yPos += this.radius * 2;\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateRadius(shape: PolygonShapes): number {\n    if (!this.autoSize) {\n      return this.radius;\n    }\n    let radius = 0;\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        radius = this.getHexFlatTopRadius();\n        break;\n      case PolygonShapes.CIRCLE:\n        radius = this.getUniformRadius();\n        break;\n      case PolygonShapes.SQUARE:\n        radius = this.getUniformRadius();\n        break;\n      default:\n        radius = this.getHexFlatTopRadius();\n        break;\n    }\n    this.radius = radius;\n    return radius;\n  }\n\n  truncateFloat(value: number): number {\n    if (value === Infinity || isNaN(value)) {\n      return 0;\n    }\n    const matches = value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/);\n    if (matches !== null && matches.length > 0) {\n      return Number(matches[0]);\n    }\n    return 0;\n  }\n\n  getOffsets(shape: PolygonShapes, dataSize: number): any {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getOffsetsHexagonPointedTop(dataSize);\n      case PolygonShapes.SQUARE:\n        return this.getOffsetsSquare(dataSize);\n      case PolygonShapes.CIRCLE:\n        return this.getOffsetsUniform(dataSize);\n      default:\n        return this.getOffsetsUniform(dataSize);\n    }\n  }\n\n  getOffsetsHexagonPointedTop(dataSize: number): any {\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    hexRadius = this.truncateFloat(hexRadius as number);\n    const shapeWidth = this.truncateFloat(hexRadius * this.SQRT3);\n    const shapeHeight = this.truncateFloat(hexRadius * 2);\n\n    const offsetToViewY = shapeHeight * 0.5;\n    // even rows are half-sized\n    const { oddCount, evenCount } = this.getOddEvenCountForRange(1, this.maxRowsUsed);\n    // odd-numbered hexagons are full height, evens are half height\n    const actualHeightUsed = oddCount * shapeHeight + evenCount * shapeHeight * 0.5;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n\n    const offsetToViewX = shapeWidth * 0.5;\n    // columns have a half-width offset if there are more than 1 rows\n    let widthOffset = 0;\n    if (this.numRows > 1) {\n      // if the dataSize is equal to or larger than the 2*Columns, there is an additional offset needed\n      if (dataSize >= this.maxColumnsUsed * 2) {\n        widthOffset = 0.5;\n      }\n    }\n    const actualWidthUsed = (this.numColumns + widthOffset) * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsUniform(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsSquare(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = 0; // shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = 0; //shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOddEvenCountForRange(L: number, R: number): any {\n    let oddCount = (R - L) / 2;\n    // if either R or L is odd\n    if (R % 2 !== 0 || L % 2 !== 0) {\n      oddCount++;\n    }\n    const evenCount = R - L + 1 - oddCount;\n    return { oddCount, evenCount };\n  }\n\n  /**\n   * Returns diameterX and diameterY for given shape\n   */\n  getDiameters(): PolystatDiameters {\n    switch (this.shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getHexFlatTopDiameters();\n      case PolygonShapes.SQUARE:\n        return this.getUniformDiameters();\n      case PolygonShapes.CIRCLE:\n        return this.getUniformDiameters();\n      default:\n        return this.getUniformDiameters();\n    }\n  }\n}\n","import { sortBy as lodashSortBy, toLower as lodashToLower, isNumber as lodashIsNumber } from 'lodash';\n\nfunction GetDecimalsForValue(value: any, panelDecimals: any): { decimals: number; scaledDecimals: any } {\n  if (lodashIsNumber(panelDecimals)) {\n    return { decimals: panelDecimals, scaledDecimals: null };\n  }\n\n  const delta = value / 2;\n  let dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n  const magn = Math.pow(10, -dec);\n  const norm = delta / magn; // norm is between 1.0 and 10.0\n  let size;\n\n  if (norm < 1.5) {\n    size = 1;\n  } else if (norm < 3) {\n    size = 2;\n    // special case for 2.5, requires an extra decimal\n    if (norm > 2.25) {\n      size = 2.5;\n      ++dec;\n    }\n  } else if (norm < 7.5) {\n    size = 5;\n  } else {\n    size = 10;\n  }\n\n  size *= magn;\n\n  // reduce starting decimals if not needed\n  if (Math.floor(value) === value) {\n    dec = 0;\n  }\n\n  const result = {\n    decimals: 0,\n    scaledDecimals: 0,\n  };\n  result.decimals = Math.max(0, dec);\n  result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n  return result;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {number} width width in pixels the string must fit in\n * @param {number} minFontPx the smallest acceptable font size in pixels\n * @param {number} maxFontPx the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidth(text: string, font: any, width: number, minFontPx: number, maxFontPx: number) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  if (w <= width) {\n    return maxFontPx;\n  }\n  // pad width by 10px\n  width = width - 20;\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    if (w < width) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {number} width the width in pixels the string must fit in\n * @param {number} height the height in pixels\n * @param {number} minFontPx the smallest acceptable font size in pixels\n * @param {number} maxFontPx the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidthAndHeight(\n  text: string,\n  font: any,\n  width: number,\n  height: number,\n  minFontPx: number,\n  maxFontPx: number\n) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  // need to pad the width: use 80% of the space (leave 10% padding on each side)\n  width = width * 0.95;\n  if (w <= width && maxFontPx <= height) {\n    return maxFontPx;\n  }\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    // has to fit within the width of the text area, and not exceed the height\n    if (w < width && fontSize <= height) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nfunction getTextWidth(text: string, font: string) {\n  // re-use canvas object for better performance\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (context) {\n    context.font = font;\n    const metrics = context.measureText(text);\n    return metrics.width;\n  }\n  return 40; // unknown due to context failure\n}\n\nfunction RGBToHex(text: string) {\n  // check if in rgb notation\n  if (!text.startsWith('rgb')) {\n    return text;\n  }\n  let hex = '#FFFFFF';\n  try {\n    const a = text.split('(')[1].split(')')[0];\n    const b = a.split(',');\n    const c = b.map((x) => {\n      // For each array element\n      x = parseInt(x, 10).toString(16); // Convert to a base16 string\n      return x.length === 1 ? '0' + x : x; // Add zero if we get only one character\n    });\n    hex = '#' + c.join('');\n  } catch (e) {\n    return hex;\n  }\n  return hex;\n}\n\nfunction getTextOrValue(o: any) {\n  if (isNaN(o)) {\n    return o;\n  } else {\n    return Number(o);\n  }\n}\n\nfunction SortVariableValuesByField(options: any, sortField: string, sortOrder: number) {\n  if (sortOrder === 0) {\n    return options;\n  }\n  const sortType = Math.ceil(sortOrder / 2);\n  const reverseSort = sortOrder % 2 === 0;\n\n  switch (sortType) {\n    case 1: // Alphabetical Case Sensitive\n      options = lodashSortBy(options, sortField);\n      break;\n    case 2: // Numerical with sub-match\n      options = lodashSortBy(options, (item) => {\n        // if the content of the field to sort by is textual, check if there is a numerical area to sort by\n        if (isNaN(item[sortField])) {\n          const matchField = item[sortField];\n          const matches = matchField.match(/.*?(\\d+).*/);\n          if (!matches || matches.length < 2) {\n            return -1;\n          } else {\n            return parseInt(matches[1], 10);\n          }\n        } else {\n          return getTextOrValue(item[sortField]);\n        }\n      });\n      break;\n    case 3: // Alphabetical Case Insensitive\n      options = lodashSortBy(options, (item) => {\n        const itemContent = item[sortField];\n        if (isNaN(itemContent)) {\n          return lodashToLower(item[sortField]);\n        } else {\n          return itemContent;\n        }\n      });\n      break;\n  }\n\n  if (reverseSort) {\n    options = options.reverse();\n  }\n\n  return options;\n}\n\nconst roundValue = (num: number, decimals: number): number | null => {\n  if (num === null) {\n    return null;\n  }\n  const n = Math.pow(10, decimals);\n  const formatted = (n * num).toFixed(decimals);\n  return Math.round(parseFloat(formatted)) / n;\n};\n\nexport {\n  GetDecimalsForValue,\n  getTextSizeForWidth,\n  getTextSizeForWidthAndHeight,\n  getTextWidth,\n  RGBToHex,\n  SortVariableValuesByField,\n  getTextOrValue,\n  roundValue\n};\n","import { GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\n\nexport const getErrorMessageStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.error.shade};\n`;\n\nexport const getNoTriggerTextStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.success.shade};\n`;\n\nexport const getWrapperStyles = (theme: GrafanaTheme2) => css`\n  fill: transparent;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const getSVGStyles = (theme: GrafanaTheme2) => css`\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  fill: transparent;\n`;\n\nexport const getSVGPathStyles = (theme: GrafanaTheme2) => css`\n  outline: none !important;\n`;\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2, dateTimeFormatWithAbbrevation } from '@grafana/data';\nimport { PolystatModel, SortOptions } from '../types';\n\nexport interface TooltipProps {\n  data: PolystatModel | undefined;\n  valueEnabled: boolean;\n  tooltipColumnHeadersEnabled: boolean;\n  renderTime: Date;\n  showTime: boolean;\n  primarySortByField: string;\n  primarySortDirection: number;\n  secondarySortByField: string;\n  secondarySortDirection: number;\n  displayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipFontFamily: string;\n}\n\nexport const Tooltip = ({\n  data,\n  renderTime,\n  showTime,\n  valueEnabled,\n  tooltipColumnHeadersEnabled,\n  primarySortByField,\n  primarySortDirection,\n  secondarySortByField,\n  secondarySortDirection,\n  displayMode,\n  tooltipDisplayTextTriggeredEmpty,\n  tooltipFontFamily,\n}: TooltipProps) => {\n  const styles = useStyles2(getTooltipStyles);\n\n  /* the name of the composite is shown at the top */\n  const getCompositeHeader = (data: PolystatModel | null) => {\n    if (data && data.members && data.members.length === 0) {\n      return '';\n    }\n    return (\n      <tr>\n        <th className={styles.tooltipCompositeHeading} colSpan={2}>\n          {data?.displayName}\n        </th>\n      </tr>\n    );\n  };\n\n  const multiSort = (\n    data: PolystatModel,\n    primarySortDirection: number,\n    primarySortByField: string,\n    secondarySortDirection: number,\n    secondarySortByField: string\n  ) => {\n    let sortSettings = getSortDirection(SortOptions[primarySortDirection].value);\n    const pUseLowercase = sortSettings.lowerCase;\n    const pDirection = sortSettings.direction as any;\n    sortSettings = getSortDirection(SortOptions[secondarySortDirection].value);\n    const sDirection = sortSettings.direction as any;\n    const sUseLowercase = sortSettings.lowerCase;\n\n    let pSortFunction = primarySortByField as any;\n    if (pUseLowercase) {\n      pSortFunction = (item: any) => {\n        let val = item[primarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    let sSortFunction = secondarySortByField as any;\n    if (sUseLowercase) {\n      sSortFunction = (item: any) => {\n        let val = item[secondarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    return lodashOrderBy(data.members, [pSortFunction, sSortFunction], [pDirection, sDirection]);\n  };\n\n  const getTriggeredCount = (data: PolystatModel) => {\n    let triggered = 0;\n    if (data.thresholdLevel !== 0) {\n      triggered++;\n    }\n    for (let j = 0; j < data.members.length; j++) {\n      if (data.members[j].thresholdLevel !== 0) {\n        triggered++;\n      }\n    }\n    return triggered;\n  };\n  const filterTriggered = (items: PolystatModel) => {\n    const triggerCount = getTriggeredCount(items);\n    if (triggerCount > 0) {\n      for (let i = 0; i < items.members.length; i++) {\n        if (items.members[i].thresholdLevel === 0) {\n          items.members.splice(i, 1);\n        }\n      }\n      return items;\n    } else {\n      return null;\n    }\n  };\n  const getCompositeMetrics = (data: PolystatModel | null) => {\n    let dataToSort = data;\n    if (dataToSort && data && displayMode === 'triggered') {\n      dataToSort = filterTriggered(data);\n    }\n    if (dataToSort === null) {\n      return <>{tooltipDisplayTextTriggeredEmpty}</>;\n    }\n    const sortedMembers = multiSort(\n      dataToSort,\n      primarySortDirection,\n      primarySortByField,\n      secondarySortDirection,\n      secondarySortByField\n    );\n    return sortedMembers.map((item: PolystatModel, index: number) => {\n      return (\n        <tr key={index} style={{ color: item.color }}>\n          <td className={styles.tooltipName}>{item.displayName}</td>\n          {valueEnabled && <td className={styles.tooltipValue}>{item.valueFormatted}</td>}\n        </tr>\n      );\n    });\n  };\n\n  const generateContent = () => {\n    return (\n      <table style={{ fontFamily: tooltipFontFamily }} className={styles.tooltipTable}>\n        <thead>\n          {data && data.isComposite && getCompositeHeader(data)}\n          <tr>\n            {tooltipColumnHeadersEnabled && <th className={styles.tooltipNameHeading}>Name</th>}\n            {tooltipColumnHeadersEnabled && valueEnabled && <th className={styles.tooltipValueHeading}>Value</th>}\n          </tr>\n        </thead>\n        <tfoot>\n          {showTime && (\n            <tr>\n              <td className={styles.tooltipTime} colSpan={2}>\n                {dateTimeFormatWithAbbrevation(renderTime)}\n              </td>\n            </tr>\n          )}\n        </tfoot>\n        <tbody>\n          {data && data.isComposite ? (\n            getCompositeMetrics(data)\n          ) : (\n            <tr style={{ color: data?.color }}>\n              <td className={styles.tooltipName}>{data?.displayName}</td>\n              {valueEnabled && <td className={styles.tooltipValue}>{data?.valueFormatted}</td>}\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  };\n\n  // Generate content\n  return generateContent();\n};\n\nconst getTooltipStyles = (theme: GrafanaTheme2) => {\n  return {\n    root: css`\n      border-radius: ${theme.shape.borderRadius(1)};\n      background-color: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z2};\n      padding: ${theme.spacing(1)};\n    `,\n    tooltipTable: css`\n      width: 100%;\n      color: ${theme.colors.text.primary};\n      height: auto;\n      padding: 10px;\n    `,\n    tooltipTime: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipNameHeading: css`\n      text-align: left;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipValueHeading: css`\n      text-align: right;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipCompositeHeading: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipName: css`\n      text-align: left;\n    `,\n    tooltipValue: css`\n      text-align: right;\n      padding-left: 15px;\n    `,\n  };\n};\n\nconst getSortDirection = (val: number) => {\n  switch (val) {\n    case 0:\n      return { direction: null, lowerCase: false };\n    case 1:\n      return { direction: 'asc', lowerCase: false };\n    case 2:\n      return { direction: 'desc', lowerCase: false };\n    case 3:\n      return { direction: 'asc', lowerCase: false };\n    case 4:\n      return { direction: 'desc', lowerCase: false };\n    case 5:\n      return { direction: 'asc', lowerCase: true };\n    case 6:\n      return { direction: 'desc', lowerCase: true };\n    default:\n      return { direction: 'asc', lowerCase: false };\n  }\n};\n","import React, { useEffect, createRef, useCallback } from 'react';\nimport { textUtil } from '@grafana/data';\nimport { useStyles2, Portal, useTheme2 } from '@grafana/ui';\nimport { symbol as d3symbol, symbolCircle, symbolSquare } from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { Tooltip as ReactTooltip } from 'react-tooltip';\n\nimport { Gradients } from './gradients/Gradients';\nimport { LayoutManager } from './layout/layoutManager';\nimport { PolystatOptions, PolygonShapes, PolystatModel, DisplayModes } from './types';\nimport { getTextSizeForWidthAndHeight } from '../utils';\n\nimport { getErrorMessageStyles, getNoTriggerTextStyles, getSVGPathStyles, getSVGStyles, getWrapperStyles } from './styles';\nimport { Tooltip } from './tooltips/Tooltip';\n\nexport const Polystat: React.FC<PolystatOptions> = (options) => {\n  const divStyles = useStyles2(getWrapperStyles);\n  const svgStyles = useStyles2(getSVGStyles);\n  const svgPathStyles = useStyles2(getSVGPathStyles);\n  const noTriggerTextStyles = useStyles2(getNoTriggerTextStyles);\n  const errorMessageStyles = useStyles2(getErrorMessageStyles);\n  const tooltipTheme = useTheme2().isDark ? 'dark' : 'light';\n  // used to change/animate text in polygon\n  const [animationRefs, setAnimationRefs] = React.useState([] as any);\n  // tracks which metric to display during animation of a composite\n  const [animationMetricIndexes, setAnimationMetricIndexes] = React.useState([] as any);\n  const [animatedItems, setAnimatedItems] = React.useState<number[]>([]);\n\n  const updateAnimation = (data: PolystatModel[]) => {\n    if (data.length > 0) {\n      const newAnimationRefs = [];\n      const newAnimationMetricIndexes = [];\n      for (let i = 0; i < data!.length; i++) {\n        newAnimationRefs.push(createRef());\n        newAnimationMetricIndexes.push(0);\n      }\n      if (newAnimationRefs.length > 0) {\n        if (animationRefs.length !== newAnimationRefs.length) {\n          setAnimationRefs(newAnimationRefs);\n          setAnimationMetricIndexes(newAnimationMetricIndexes);\n        }\n      }\n    }\n  };\n\n  /*\n    This is the animation method that will cycle through the metrics for a composite\n   */\n  const animateComposite = useCallback(() => {\n    for (let i = 0; i < animatedItems.length; i++) {\n      let index = animatedItems[i];\n      let metricIndex = animationMetricIndexes[index];\n      if (animationRefs.length > 0 && animationRefs[index].current) {\n        if (options.processedData) {\n          const item = options.processedData[index];\n          const val = formatCompositeValue(metricIndex, item, options.globalDisplayTextTriggeredEmpty);\n          if (animationRefs[index].current.innerHTML !== null) {\n            animationRefs[index].current.innerHTML = val;\n          }\n        }\n      }\n      metricIndex++;\n      if (options.processedData && options.processedData[index] && options.processedData[index].members.length) {\n        metricIndex %= options.processedData[index].members.length;\n      }\n      animationMetricIndexes[index] = metricIndex;\n      setAnimationMetricIndexes(animationMetricIndexes);\n    }\n  }, [\n    animationMetricIndexes,\n    animationRefs,\n    animatedItems,\n    options.processedData,\n    options.globalDisplayTextTriggeredEmpty,\n  ]);\n\n  /*\n    Determine which items should be animated\n  */\n\n  useEffect(() => {\n    let shouldAnimate = false;\n    const animate: number[] = [];\n    options.processedData!.map((item, index) => {\n      if (item.isComposite && item.showValue) {\n        shouldAnimate = true;\n        animate.push(index);\n      }\n    });\n    // check array content equality\n    if (JSON.stringify(animatedItems) !== JSON.stringify(animate)) {\n      if (options.processedData) {\n        updateAnimation(options.processedData);\n        setAnimatedItems(animate);\n      }\n    }\n    let tick: NodeJS.Timeout;\n    if (shouldAnimate) {\n      let speed = parseInt(options.compositeConfig.animationSpeed, 10);\n      if (speed < 200 || isNaN(speed)) {\n        console.log(`WARNING: speed in configuration is too fast, setting to 200ms`);\n        speed = 200;\n      }\n      tick = setInterval(animateComposite, speed);\n    }\n    return () => {\n      clearInterval(tick);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options.compositeConfig.animationSpeed, options.processedData, animationRefs]);\n\n  if (options.processedData && options.processedData.length === 0) {\n    return <div className={noTriggerTextStyles}>{options.globalDisplayTextTriggeredEmpty}</div>;\n  }\n  if (!options.autoSizeColumns && !options.autoSizeRows) {\n    const limit = options.layoutNumColumns * options.layoutNumRows;\n    if (limit < options.processedData!.length) {\n      return (\n        <div className={errorMessageStyles}>\n          Not enough rows and columns for data. There are {options.processedData!.length} items to display, and only{' '}\n          {limit} places allocated.{' '} See the Display Limit setting in category Layout{' '}\n        </div>\n      );\n    }\n  }\n\n  const lm = new LayoutManager(\n    options.panelWidth,\n    options.panelHeight,\n    options.layoutNumColumns,\n    options.layoutNumRows,\n    options.layoutDisplayLimit,\n    options.autoSizePolygons,\n    options.globalShape\n  );\n  const margin = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  // determine how many rows and columns are going to be generated\n  lm.generatePossibleColumnAndRowsSizes(options.autoSizeColumns, options.autoSizeRows, options.processedData!.length);\n  // to determine the radius, the actual number of rows and columns that will be used needs to be calculated\n  lm.generateActualColumnAndRowUsage(options.processedData, options.layoutDisplayLimit);\n  // next the radius can be determined from actual rows and columns being used\n  let radius = 0;\n  if (!options.autoSizePolygons && options.globalPolygonSize) {\n    if (options.globalPolygonSize < 0 || isNaN(options.globalPolygonSize)) {\n      // force min size if below zero or NaN\n      options.globalPolygonSize = 50;\n      console.log(`WARNING: polygon size is manually set to an invalid value, forcing to 50px`);\n    } else {\n      lm.setRadius(options.globalPolygonSize);\n    }\n    radius = options.globalPolygonSize;\n  } else {\n    radius = lm.generateRadius(options.globalShape);\n  }\n\n  // using the known number of columns and rows that can be used in addition to the radius,\n  // generate the points to be filled\n  const calculatedPoints = lm.generatePoints(options.processedData, options.layoutDisplayLimit, options.globalShape);\n  const aHexbin = hexbin()\n    .radius(radius)\n    .extent([\n      [0, 0],\n      [options.panelWidth, options.panelHeight],\n    ]);\n  const { diameterX, diameterY } = lm.getDiameters();\n  const { xoffset, yoffset } = lm.getOffsets(options.globalShape, options.processedData!.length);\n\n  // compute text area size (used to calculate the fontsize)\n  const textAreaWidth = diameterX;\n  const textAreaHeight = diameterY / 2; // Top and bottom of hexagon are not used\n  // symbols use the area for their size\n  let innerArea = diameterX * diameterY;\n  // use the smallest of diameterX or Y\n  if (diameterX < diameterY) {\n    innerArea = diameterX * diameterX;\n  }\n  if (diameterY < diameterX) {\n    innerArea = diameterY * diameterY;\n  }\n  // square and circle do not use this\n  const symbol = d3symbol().size(innerArea);\n\n  let customShape: any;\n  switch (options.globalShape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      customShape = aHexbin.hexagon(radius);\n      break;\n    case PolygonShapes.CIRCLE:\n      customShape = symbol.type(symbolCircle);\n      break;\n    case PolygonShapes.SQUARE:\n      customShape = symbol.type(symbolSquare);\n      break;\n    default:\n      customShape = aHexbin.hexagon(radius);\n      break;\n  }\n\n  const resolveClickThroughTarget = (d: PolystatModel): string => {\n    let clickThroughTarget = '_self';\n    if (d.newTabEnabled) {\n      clickThroughTarget = '_blank';\n    }\n    // when a custom clickthrough is enabled, override the default _self\n    if (d.customClickthroughTargetEnabled) {\n      clickThroughTarget = d.customClickthroughTarget;\n    }\n    return clickThroughTarget;\n  };\n\n  const getCoords = (i: number) => {\n    const xValue = calculatedPoints[i].x;\n    const yValue = calculatedPoints[i].y;\n    return { x: xValue, y: yValue };\n  };\n\n  // calculate the fontsize based on the shape and the text\n  let activeLabelFontSize = options.globalFontSize;\n  // font sizes are independent for label and values\n  let activeValueFontSize = options.globalFontSize;\n  let showEllipses = false;\n  let numOfChars = options.ellipseCharacters;\n\n  if (options.globalAutoScaleFonts) {\n    const result = autoFontScalar(\n      options.globalTextFontFamily,\n      textAreaWidth,\n      textAreaHeight,\n      options.globalShowValueEnabled,\n      options.processedData!\n    );\n    activeLabelFontSize = result.activeLabelFontSize;\n    activeValueFontSize = result.activeValueFontSize;\n    showEllipses = result.showEllipses;\n    numOfChars = result.numOfChars;\n  }\n  const alignments = getAlignments(\n    options.globalShape,\n    diameterX,\n    diameterY,\n    textAreaHeight,\n    activeValueFontSize,\n    activeLabelFontSize\n  );\n\n  // this MUST be unique for gradients to work properly\n  const gradientId = `polystat_${options.panelId}_` + Math.floor(Math.random() * 10000).toString();\n\n  const drawShape = (index: number, shape: PolygonShapes) => {\n    let fillColor = options.processedData![index].color;\n    if (options.globalGradientsEnabled) {\n      // TODO: safari needs the location.href\n      fillColor = `url(#${gradientId}_linear_gradient_state_data_${index})`;\n    }\n    const useRadius = lm.generateRadius(options.globalShape);\n    const coords = getCoords(index);\n\n    switch (shape as any) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return (\n          <path\n            data-tooltip-id={`polystat-tooltip-${options.panelId}`}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key={`polystat-tooltip-${options.panelId}`}\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n      case PolygonShapes.CIRCLE:\n        return (\n          <circle\n            data-tooltip-id={`polystat-tooltip-${options.panelId}`}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key={`polystat-tooltip-${options.panelId}`}\n            className={svgPathStyles}\n            cx={coords.x}\n            cy={coords.y}\n            r={useRadius}\n            fill={fillColor}\n          />\n        );\n      case PolygonShapes.SQUARE:\n        return (\n          <rect\n            data-tooltip-id={`polystat-tooltip-${options.panelId}`}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key={`polystat-tooltip-${options.panelId}`}\n            className={svgPathStyles}\n            x={coords.x}\n            y={coords.y}\n            height={useRadius * 2}\n            width={useRadius * 2}\n            fill={fillColor}\n          />\n        );\n      default:\n        return (\n          <path\n            data-tooltip-id={`polystat-tooltip-${options.panelId}`}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key={`polystat-tooltip-${options.panelId}`}\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n    }\n  };\n\n  // allows the polygon to fill the horizontal space if the manually specified number of columns has not been used\n  let marginLeft = margin.left;\n  if ((!options.autoSizeColumns) && (radius) && (lm.maxColumnsUsed < options.layoutNumColumns)) {\n    let difference = options.layoutNumColumns - lm.maxColumnsUsed;\n    marginLeft += radius * difference;\n  }\n  // allows the polygon to fill the vertical space if the manually specified number of rows has not been used\n  let marginTop = margin.top;\n  if ((!options.autoSizeRows) && (radius) && (lm.maxRowsUsed < options.layoutNumRows)) {\n    let difference = options.layoutNumRows - lm.maxRowsUsed;\n    // always starts at zero, skip offset for first row used\n    marginTop += radius * (difference - 1);\n  }\n\n  return (\n    <div className={divStyles}>\n      <svg\n        className={svgStyles}\n        width={options.panelWidth}\n        height={options.panelHeight}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`${xoffset},${yoffset},${options.panelWidth},${options.panelHeight}`}\n      >\n\n        <g transform={`translate(${marginLeft},${marginTop})`}>\n          <Gradients gradientId={gradientId} data={options.processedData} />\n\n          {options.processedData!.map((item, index) => {\n            const coords = getCoords(index);\n            const useUrl = item.sanitizeURLEnabled ? item.sanitizedURL : item.clickThrough;\n            // determine if a target is required\n            const resolvedClickthroughTarget = resolveClickThroughTarget(item);\n            let clickableUrl: JSX.Element;\n            // only add target attribute when there is one specified\n            if ((resolvedClickthroughTarget.length > 0) && (useUrl.length > 0)) {\n              clickableUrl = <a target={resolvedClickthroughTarget} href={useUrl}>\n                {drawShape(index, options.globalShape)}\n              </a>;\n            } else {\n              clickableUrl = <a href={useUrl}>\n                {drawShape(index, options.globalShape)}\n              </a>;\n            }\n\n            return (\n              <>\n                {useUrl.length > 0 && clickableUrl ? (\n                  clickableUrl\n                ) : (\n                  drawShape(index, options.globalShape)\n                )}\n                <text\n                  className=\"toplabel\"\n                  x={coords.x + alignments.labelTextAlignmentX}\n                  y={coords.y + alignments.labelWithValueTextAlignment}\n                  textAnchor=\"middle\"\n                  fontFamily={options.globalTextFontFamily}\n                  fontSize={activeLabelFontSize + 'px'}\n                  style={{\n                    fill: options.globalTextFontAutoColorEnabled\n                      ? options.globalTextFontAutoColor\n                      : options.globalTextFontColor,\n                    pointerEvents: 'none',\n                  }}\n                >\n                  {item.showName &&\n                    getTextToDisplay(\n                      options.globalAutoScaleFonts,\n                      options.ellipseEnabled,\n                      options.ellipseCharacters,\n                      showEllipses,\n                      numOfChars,\n                      item.name,\n                      item.displayName\n                    )}\n                </text>\n\n                <text\n                  ref={animationRefs[index]}\n                  className={`valueLabel${index}`}\n                  x={coords.x + alignments.labelValueAlignmentX}\n                  y={coords.y + alignments.valueWithLabelTextAlignment}\n                  textAnchor=\"middle\"\n                  fontFamily={options.globalTextFontFamily}\n                  fontSize={activeValueFontSize + 'px'}\n                  style={{\n                    fill: options.globalTextFontAutoColorEnabled\n                      ? options.globalTextFontAutoColor\n                      : options.globalTextFontColor,\n                    pointerEvents: 'none',\n                  }}\n                >\n                  {item.showValue &&\n                    (item.isComposite\n                      ? formatCompositeValue(0, item, options.globalDisplayTextTriggeredEmpty)\n                      : item.valueFormatted)}\n                </text>\n\n              </>\n            );\n          })}\n        </g>\n      </svg>\n      {options.globalTooltipsEnabled && (\n        <Portal>\n          <ReactTooltip\n            style={{\n              boxShadow: 'rgba(1, 4, 9, 0.75) 0px 4px 8px 0px',\n            }}\n            id={`polystat-tooltip-${options.panelId}`}\n            place={'bottom'} // TODO: make this configurable\n            float={true}\n            variant={tooltipTheme} // TODO: this could be made configurable (auto, or specified)\n            opacity={1} // TODO: make this configurable\n            clickable={false} // TODO: make this configurable, extend with per-line clickthrough\n            render={({ content}) => {\n              // generate tooltip for item\n              if (content) {\n                const contentIndex = parseInt(content, 10);\n                return (\n                  <Tooltip\n                    data={options.processedData![contentIndex]}\n                    renderTime={options.renderTime!}\n                    showTime={options.globalTooltipsShowTimestampEnabled}\n                    valueEnabled={options.globalShowValueEnabled}\n                    tooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n                    primarySortByField={options.tooltipPrimarySortByField}\n                    primarySortDirection={options.tooltipPrimarySortDirection}\n                    secondarySortByField={options.tooltipSecondarySortByField}\n                    secondarySortDirection={options.tooltipSecondarySortDirection}\n                    displayMode={options.tooltipDisplayMode}\n                    tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n                    tooltipFontFamily={options.globalTooltipsFontFamily}\n                  />\n                )\n              }\n              return (<></>)\n            }} />\n        </Portal>\n\n      )}\n    </div>\n  );\n};\n\nexport const getTextToDisplay = (\n  autoSizeFonts: boolean,\n  ellipseEnabled: boolean,\n  ellipseCharacters: number,\n  showEllipses: boolean,\n  numOfChars: number,\n  text: string,\n  displayName: string\n) => {\n  if (displayName !== '') {\n    text = displayName;\n  }\n  if (showEllipses) {\n    if (text.length > numOfChars) {\n      return text.substring(0, numOfChars) + '...';\n    }\n  }\n  if (!autoSizeFonts && ellipseEnabled && text.length > ellipseCharacters) {\n    return text.substring(0, ellipseCharacters) + '...';\n  }\n  return text;\n};\n\n/*\n              The element #{content} is currently not active.\n              <br />\n              Relevant attribute: {activeAnchor?.getAttribute('data-some-relevant-attr') || 'not set'}\n            </span>\n*/\n\nconst buildTriggerCache = (item: any) => {\n  let triggerCache = [];\n  for (let i = 0; i < item.members.length; i++) {\n    const aMember = item.members[i];\n    if (aMember.thresholdLevel > 0) {\n      // add to list\n      const cachedMemberState = {\n        index: i,\n        name: aMember.name,\n        value: aMember.value,\n        thresholdLevel: aMember.thresholdLevel,\n      };\n      triggerCache.push(cachedMemberState);\n    }\n  }\n  // sort it\n  triggerCache = lodashOrderBy(triggerCache, ['thresholdLevel', 'value', 'name'], ['desc', 'desc', 'asc']);\n  return triggerCache;\n};\n\nconst formatCompositeValue = (frames: number, item: PolystatModel, globalDisplayTextTriggeredEmpty: string) => {\n  // TODO: if just one value, could speed this up\n  let content = item.valueFormatted;\n  const len = item.members.length;\n  if (len > 0) {\n    let triggeredIndex = -1;\n    if (item.displayMode === DisplayModes[0].value) {\n      triggeredIndex = frames % len;\n    } else {\n      if (typeof item.triggerCache === 'undefined') {\n        item.triggerCache = buildTriggerCache(item);\n      }\n      if (item.triggerCache.length > 0) {\n        const z = frames % item.triggerCache.length;\n        triggeredIndex = item.triggerCache[z].index;\n      } else {\n        // nothing triggered        //triggeredIndex = frames % len;\n        return globalDisplayTextTriggeredEmpty;\n      }\n    }\n    const aMember = Object.assign({}, item.members[triggeredIndex]);\n    content = aMember.name + ': ' + aMember.valueFormatted;\n  }\n  return textUtil.sanitize(content);\n};\n\nconst getAlignments = (\n  shape: PolygonShapes,\n  diameterX: number,\n  diameterY: number,\n  textAreaHeight: number,\n  activeValueFontSize: number,\n  activeLabelFontSize: number\n) => {\n  let valueWithLabelTextAlignment = textAreaHeight / 2 / 2 + activeValueFontSize / 2;\n  let valueOnlyTextAlignment = activeValueFontSize / 2;\n  let labelWithValueTextAlignment = -(textAreaHeight / 2 / 2) + activeLabelFontSize / 2;\n  let labelOnlyTextAlignment = activeLabelFontSize / 2;\n  let labelTextAlignmentX = 0;\n  let labelValueAlignmentX = 0;\n\n  switch (shape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      break;\n    case PolygonShapes.CIRCLE:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      break;\n    case PolygonShapes.SQUARE:\n      // square is \"centered\" at top left, not the center\n\n      // compute alignment for each text element, base coordinate is in the top left corner (text is anchored at its bottom):\n      // - Value text (bottom text) will be aligned (positively i.e. lower) in the middle of the bottom half of the text area\n      // - Label text (top text) will be aligned in the middle of the top half of the text area\n      valueWithLabelTextAlignment = diameterY / 1.5 + activeValueFontSize / 2;\n      valueOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      labelWithValueTextAlignment = diameterY / 4 + activeLabelFontSize / 2;\n      // alignment is equal to the half of height plus a fraction of the fontSize\n      labelOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      //\n      labelTextAlignmentX = diameterX / 2;\n      labelValueAlignmentX = diameterX / 2;\n      break;\n  }\n  return {\n    valueWithLabelTextAlignment,\n    valueOnlyTextAlignment,\n    labelWithValueTextAlignment,\n    labelOnlyTextAlignment,\n    labelTextAlignmentX,\n    labelValueAlignmentX,\n  };\n};\n\nconst autoFontScalar = (\n  fontFamily: string,\n  textAreaWidth: number,\n  textAreaHeight: number,\n  valueEnabled: boolean,\n  data: PolystatModel[]\n) => {\n  // TODO: 6 is VERY small, perhaps 10 as a min?\n  // A hint from the config could be used (max characters)\n  const minFont = 6;\n  const maxFont = 240;\n  // this ensures we have space between label and value\n  const maxLinesToDisplay = 2;\n  let showEllipses = false;\n  //number of characters to show on polygon\n  let numOfChars = 0;\n  // find the most text that will be displayed over all items\n  // displayName will have the \"processed\" name with Global Regex applied\n  let maxLabel = '';\n  for (let i = 0; i < data.length; i++) {\n    let nameToCheck = data[i].name;\n    // use the displayName since it has been formatted\n    if (data[i].displayName !== '') {\n      nameToCheck = data[i].displayName;\n    }\n    if (nameToCheck.length > maxLabel.length) {\n      maxLabel = nameToCheck;\n    }\n  }\n  // same for the value, also check for sub metrics size in case of composite\n  let maxValue = '';\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].valueFormatted.length > maxValue.length) {\n      maxValue = data[i].valueFormatted;\n    }\n    const subMetricCount = data[i].members.length;\n    if (subMetricCount > 0) {\n      let counter = 0;\n      while (counter < subMetricCount) {\n        const checkContent = data[i].members[counter].displayName + ': ' + data[i].members[counter].valueFormatted;\n        if (checkContent && checkContent.length > maxValue.length) {\n          maxValue = checkContent;\n        }\n        counter++;\n      }\n    }\n  }\n  // estimate how big of a font can be used\n  // Two lines of text must fit with vertical spacing included\n  // if it is too small, hide everything\n  let activeLabelFontSize = computeTextFontSize(\n    maxLabel,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n  let activeValueFontSize = computeTextFontSize(\n    maxValue,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n\n  if (activeLabelFontSize < minFont) {\n    showEllipses = true;\n    numOfChars = 18;\n    maxLabel = maxLabel.substring(0, numOfChars + 2);\n    activeLabelFontSize = computeTextFontSize(\n      maxLabel,\n      fontFamily,\n      minFont,\n      maxFont,\n      maxLinesToDisplay,\n      textAreaWidth,\n      textAreaHeight\n    );\n    if (activeLabelFontSize < minFont) {\n      numOfChars = 10;\n      maxLabel = maxLabel.substring(0, numOfChars + 2);\n      activeLabelFontSize = computeTextFontSize(\n        maxLabel,\n        fontFamily,\n        minFont,\n        maxFont,\n        maxLinesToDisplay,\n        textAreaWidth,\n        textAreaHeight\n      );\n      if (activeLabelFontSize < minFont) {\n        numOfChars = 6;\n        maxLabel = maxLabel.substring(0, numOfChars + 2);\n        activeLabelFontSize = computeTextFontSize(\n          maxLabel,\n          fontFamily,\n          minFont,\n          maxFont,\n          maxLinesToDisplay,\n          textAreaWidth,\n          textAreaHeight\n        );\n      }\n    }\n  }\n  // NOTE: allow different sizes, the value could be displayed larger than the label\n  // value should never be larger than the label\n  //if (activeValueFontSize > activeLabelFontSize) {\n  //  activeValueFontSize = activeLabelFontSize;\n  //}\n  if (!valueEnabled) {\n    activeValueFontSize = 0;\n  }\n  return { activeLabelFontSize, activeValueFontSize, showEllipses, numOfChars };\n};\n\nconst computeTextFontSize = (\n  text: string,\n  font: string,\n  minFont: number,\n  maxFont: number,\n  linesToDisplay: number,\n  textAreaWidth: number,\n  textAreaHeight: number\n): number => {\n  return getTextSizeForWidthAndHeight(\n    text,\n    `?px ${font}`,\n    textAreaWidth,\n    textAreaHeight / linesToDisplay, // multiple lines of text\n    minFont,\n    maxFont\n  );\n};\n","import { DataFrame, Field, FieldType, FieldConfig, ArrayVector, Labels } from '@grafana/data';\n\n// Inserts a \"Time\" field into each dataframe if it is missing\n// the value of the timestamp is \"now\"\n// any field without a numeric type is considered a label\nexport function InsertTime(data: DataFrame[]): DataFrame[] {\n  // TODO: time to insert can be taken from the first row if there are timeseries already\n  // for now, just insert now\n  const timeToInsert = Date.now();\n  const newData: DataFrame[] = [];\n  for (const frame of data) {\n    const newFrame: DataFrame = {\n      ...frame,\n      meta: {...frame.meta},\n      fields: [], // clear the fields\n    };\n    const hasTimestamp = frameHasTimestamp(frame);\n    // rebuild a new frame with labels on the numerical fields\n    for (const aField of frame.fields) {\n      if (aField.type === FieldType.number) {\n        if (!hasTimestamp) {\n          const copiedField = Object.assign({}, aField);\n          // need to get the number of rows of data for this frame\n          const aFieldValues = copiedField.values.toArray();\n          const rowsOfField = aFieldValues.length;\n          for (let rowNum = 0; rowNum < rowsOfField; rowNum++) {\n            // only create a new field when the rowValue is not null\n            if (aFieldValues[rowNum] !== null) {\n              if (aField.state) {\n                copiedField.state = Object.assign({}, aField.state);\n              }\n              newFrame.fields.push({\n                ...copiedField,\n                labels: flattenLabels(frame, rowNum),\n                values: new ArrayVector([getValueOfField(copiedField, rowNum)]),\n              });\n            }\n          }\n        } else {\n          // copy the object\n          const copiedField = Object.assign({}, aField);\n          if (aField.state) {\n            copiedField.state = Object.assign({}, aField.state);\n          }\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    if (!hasTimestamp) {\n      const z = new ArrayVector();\n      z.add(timeToInsert);\n      const fc: FieldConfig = {};\n      const timeField: Field = {\n        name: 'Time',\n        type: FieldType.time,\n        values: z,\n        config: fc,\n      };\n      // insert it\n      newFrame.fields.push(timeField);\n    } else {\n      // time field already exists\n      // copy all non-number fields from original frame\n      for (const aField of frame.fields) {\n        if (aField.type !== FieldType.number) {\n          const copiedField = Object.assign({}, aField);\n          if (aField.state) {\n            copiedField.state = Object.assign({}, aField.state);\n          }\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    newData.push(newFrame);\n  }\n\n  return newData;\n}\n\nfunction frameHasTimestamp(frame: DataFrame): boolean {\n  for (let j = 0; j < frame.fields.length; j++) {\n    const aField = frame.fields[j];\n    if (aField.type === FieldType.time) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction flattenLabels(frame: DataFrame, rowNum: number) {\n  let labelIndexes = [];\n  const numFields = frame.fields.length;\n\n  // first get the fields of type string\n  for (let j = 0; j < numFields; j++) {\n    if (frame.fields[j].type === FieldType.string) {\n      labelIndexes.push(j);\n    }\n  }\n  let labelWithValues = getLabelValues(frame, labelIndexes, rowNum);\n  return labelWithValues;\n}\n\nfunction getValueOfField(field: Field, index: number) {\n  const bufferValue = field.values.toArray()[index];\n  return bufferValue;\n}\n\nfunction getLabelValues(frame: DataFrame, indexes: any[], rowNum: number) {\n  let labelAndValue = {};\n  for (let index = 0; index < indexes.length; index++) {\n    let indexValue = indexes[index];\n    let aField = frame.fields[indexValue];\n    if (aField.type !== FieldType.number) {\n      let value = getValueOfField(aField, rowNum);\n      // TODO: fix this...\n      // @ts-ignore\n      labelAndValue[aField.name] = value;\n    }\n  }\n  return labelAndValue;\n}\n","import { DEFAULT_NO_DATA_COLOR_HEX } from '../components/defaults';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { PolystatModel } from '../components/types';\n/*\n\nThis supports ranged states\n\nThresholds are expected to be sorted by ascending value, where\n  T0 = lowest decimal value, any state\n  TN = highest decimal value, any state\n\nInitial state is set to \"ok\"\n\nA comparison is made using \"greater than or equal to\" against the value\n  If value >= thresholdValue state = X\n\nComparisons are made in reverse order, using the range between the Nth (inclusive) threshold and N+1 (exclusive)\n  InclusiveValue = T(n).value\n  ExclusiveValue = T(n+1).value\n\nWhen there is no n+1 threshold, the highest value threshold T(n), a simple inclusive >= comparison is made\n\n  Example 1: (typical linear)\n    T0 - 5, ok\n    T1 - 10, warning\n    T2 - 20, critical\n\n  Value >= 20 (Value >= T2)\n  10 <= Value < 20  (T1 <= Value < T2)\n  5 <= Value < 10   (T0 <= Value < T1)\n\n  Example 2: (reverse linear)\n    T0 - 50, critical\n    T1 - 90, warning\n    T2 - 100, ok\n\n  Value >= 100\n  90 <= value < 100\n  50 <= value < 90\n\n  Example 3: (bounded)\n    T0 - 50, critical\n    T1 - 60, warning\n    T2 - 70, ok\n    T3 - 80, warning\n    T4 - 90, critical\n\n    Value >= 90\n    80 <= Value < 90\n    70 <= Value < 80\n    60 <= Value < 70\n    50 <= Value < 60\n\nThe \"worst\" state is returned after checking every threshold range\n\n*/\nfunction getWorstSeries(series1: PolystatModel, series2: PolystatModel): any {\n  let worstSeries = series1;\n  const series1ThresholdLevel = series1.thresholdLevel;\n  const series2ThresholdLevel = series2.thresholdLevel;\n\n  if (series1ThresholdLevel === undefined || series2ThresholdLevel === undefined) {\n    return worstSeries;\n  }\n\n  // State 3 is Unknown and is not be worse than CRITICAL (state 2)\n  if (series2ThresholdLevel > series1ThresholdLevel) {\n    // series2 has higher threshold violation\n    worstSeries = series2;\n  }\n  if (series1ThresholdLevel === 3) {\n    // series1 is in state unknown, check if series2 is in state 1 or 2\n    switch (series2ThresholdLevel) {\n      case 1:\n        worstSeries = series2;\n        break;\n      case 2:\n        worstSeries = series2;\n        break;\n    }\n  }\n  return worstSeries;\n}\n\nfunction getThresholdLevelForValue(\n  thresholds: PolystatThreshold[] | undefined,\n  value: number | null,\n  defaultColor: string\n): { thresholdLevel: number; color: string } {\n  let currentColor = defaultColor;\n  if (value === null) {\n    return { thresholdLevel: 3, color: DEFAULT_NO_DATA_COLOR_HEX }; // No Data\n  }\n  // assume UNKNOWN state\n  let currentState = -1;\n  // skip evaluation when there are no thresholds\n  if (typeof thresholds === 'undefined') {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  // test \"Nth\" threshold\n  const thresholdCount = thresholds.length;\n  if (thresholdCount === 0) {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  const aThreshold = thresholds[thresholdCount - 1];\n  if (value >= aThreshold.value) {\n    currentState = aThreshold.state;\n    currentColor = aThreshold.color;\n  }\n  // if there's one threshold, just return the result\n  if (thresholds.length === 1) {\n    return { thresholdLevel: currentState, color: currentColor };\n  }\n  // now test in reverse\n  for (let i = thresholdCount - 1; i > 0; i--) {\n    const upperThreshold = thresholds[i];\n    const lowerThreshold = thresholds[i - 1];\n    if (lowerThreshold.value <= value && value < upperThreshold.value) {\n      if (currentState < lowerThreshold.state) {\n        currentState = lowerThreshold.state;\n        currentColor = lowerThreshold.color;\n      }\n    }\n  }\n  // last check, if currentState is not set, and there is a lower threshold, use that value (inclusive range up to T1)\n  if (currentState === -1) {\n    currentState = thresholds[0].state;\n    currentColor = thresholds[0].color;\n  }\n  return { thresholdLevel: currentState, color: currentColor };\n}\n\nexport { getWorstSeries, getThresholdLevelForValue };\n","/**\n * Convert model data to url params\n */\nimport { stringToJsRegex } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nclass ClickThroughTransformer {\n  static cellName = /\\${__cell_name}/;\n  static cellValue = /\\${__cell}/;\n  static cellRawValue = /\\${__cell:raw}/;\n\n  static nthCellName = /\\${__cell_name_(\\d+)}/;\n  static nthCellValue = /\\${__cell_(\\d+)}/;\n  static nthCellRawValue = /\\${__cell_(\\d+):raw}/;\n\n  static compositeName = /\\${__composite_name}/;\n\n  static transformSingleMetric(index: number, url: string, data: PolystatModel[]): string {\n    if (isNaN(index)) {\n      return url;\n    }\n    const item = data[index];\n    // check if url contains any dereferencing\n    while (url.match(this.cellName)) {\n      // replace with series name\n      url = url.replace(this.cellName, item.name);\n    }\n    while (url.match(this.cellValue)) {\n      // replace with formatted value, and encoded\n      url = url.replace(this.cellValue, encodeURIComponent(item.valueFormatted));\n    }\n    while (url.match(this.cellRawValue)) {\n      // replace with value\n      url = url.replace(this.cellRawValue, item.value.toString());\n    }\n    return url;\n  }\n\n  static transformNthMetric(url: string, data: PolystatModel[]) {\n    while (url.match(this.nthCellName)) {\n      const matched = url.match(this.nthCellName);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthName = data[captureIndex].name;\n        // replace with series name\n        url = url.replace(this.nthCellName, nthName);\n      }\n    }\n    while (url.match(this.nthCellValue)) {\n      const matched = url.match(this.nthCellValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].valueFormatted;\n        // replace with formatted value encoded\n        url = url.replace(this.nthCellValue, encodeURIComponent(nthValue));\n      }\n    }\n    while (url.match(this.nthCellRawValue)) {\n      const matched = url.match(this.nthCellRawValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].value;\n        // replace with raw value\n        url = url.replace(this.nthCellRawValue, nthValue.toString());\n      }\n    }\n    return url;\n  }\n\n  static transformComposite(name: string, url: string) {\n    // check if url contains any dereferencing\n    while (url.match(this.compositeName)) {\n      // replace with series name\n      url = url.replace(this.compositeName, name);\n    }\n    return url;\n  }\n\n  static transformByRegex(pattern: string, item: PolystatModel, url: string) {\n    // detect regex capture groups from override.metricName and replace any occurrences in the click-through\n    const regex = stringToJsRegex(pattern);\n    const matches = item.name.match(regex);\n    if (matches && matches.length > 0) {\n      matches.forEach((aMatch, index) => {\n        const value = matches[index];\n        // console.log(`a match ${aMatch} index ${index} value ${value}`);\n        const matchType1 = `\\$\\{${index}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${index}`;\n        url = url.replace(matchType2, value);\n      });\n    }\n    if (matches && matches.groups) {\n      for (const key in matches.groups) {\n        const value = matches.groups[key];\n        // console.log(`key = ${key} value = ${value}`);\n        // support $CAPTURE and ${CAPTURE}\n        const matchType1 = `\\$\\{${key}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${key}`;\n        url = url.replace(matchType2, value);\n      }\n    }\n    return url;\n  }\n}\n\nexport { ClickThroughTransformer };\n","export const CUSTOM_SPLIT_DELIMITER = '#️⃣🔠🆗🆗🔠#️⃣';\n","import { includes as lodashIncludes } from 'lodash';\nimport { PolystatModel } from '../components/types';\nimport { getWorstSeries } from './threshold_processor';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { stringToJsRegex, escapeStringForRegex, ScopedVars, InterpolateFunction, textUtil } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { CompositeItemType, CompositeMetric } from '../components/composites/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { ApplyGlobalRegexPattern } from './processor';\n\nexport const resolveCompositeTemplates = (\n  metricComposites: CompositeItemType[],\n  replaceVariables: InterpolateFunction\n): CompositeItemType[] => {\n  const ret: CompositeItemType[] = [];\n  metricComposites.forEach((item: CompositeItemType) => {\n    const resolved = replaceVariables(item.name, undefined, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n    // if the composite name has template syntax, mark it as isTemplated true\n    const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n    const matchResult = item.name.match(variableRegex);\n    if (matchResult && matchResult.length > 0) {\n      item.isTemplated = true;\n    }\n    resolved.forEach((newName: string) => {\n      ret.push({\n        ...item,\n        name: newName,\n        isTemplated: item.isTemplated,\n      });\n    });\n  });\n\n  return ret;\n};\n\nexport const customFormatter = (value: any) => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nexport const resolveMemberTemplates = (\n  compositeName: string,\n  members: CompositeMetric[],\n  replaceVariables: InterpolateFunction\n): CompositeMetric[] => {\n  const ret: CompositeMetric[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  members.forEach((member) => {\n    // Resolve templates in series names\n    if (member.seriesMatch) {\n      const matchResult = member.seriesMatch.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((aMatch) => {\n          // expand the templatedName (append compositeName to the variables first)\n          const templateVars: ScopedVars = {\n            compositeName: { text: 'compositeName', value: compositeName },\n          };\n          // template variables can be multi-select, or \"all\", iterate over each match\n          const resolvedSeriesNames = replaceVariables(aMatch, templateVars, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n          // iterate over the array of names\n          if (resolvedSeriesNames && resolvedSeriesNames.length) {\n            resolvedSeriesNames.forEach((aName) => {\n              if (aName.includes(compositeName)) {\n                const newName = member.seriesMatch.replace(aMatch, aName);\n                const escapedName = escapeStringForRegex(aName);\n                const newNameEscaped = member.seriesMatch.replace(aMatch, escapedName);\n                ret.push({\n                  ...member,\n                  seriesName: newName,\n                  seriesNameEscaped: newNameEscaped,\n                });\n              }\n            });\n          }\n        });\n      } else {\n        ret.push(member);\n      }\n    }\n  });\n\n  return ret;\n};\n\nconst resolveMemberAliasTemplates = (name: string, matches: any): string => {\n  const templateVars: ScopedVars = {};\n  matches.forEach((name: string, i: number) => {\n    templateVars[i] = { text: i, value: name };\n  });\n  if (matches.groups) {\n    Object.keys(matches.groups).forEach((key) => {\n      templateVars[key.replace(/\\s+/g, '_')] = { text: key, value: matches.groups[key] };\n    });\n  }\n  return getTemplateSrv().replace(name, templateVars);\n};\n\n/**\n * Copies values, leaves members empty\n */\nconst shallowClone = (item: PolystatModel): PolystatModel => {\n  const clone: PolystatModel = {\n    value: item.value,\n    valueFormatted: item.valueFormatted,\n    valueRounded: item.valueRounded,\n    stats: item.stats,\n    name: item.name,\n    displayName: item.displayName,\n    timestamp: item.timestamp,\n    prefix: item.prefix,\n    suffix: item.suffix,\n    color: item.color,\n    clickThrough: item.clickThrough,\n    operatorName: item.operatorName,\n    newTabEnabled: item.newTabEnabled,\n    sanitizedURL: item.sanitizedURL,\n    sanitizeURLEnabled: item.sanitizeURLEnabled,\n    customClickthroughTargetEnabled: false,\n    customClickthroughTarget: '',\n    showName: item.showName,\n    showValue: item.showValue,\n    isComposite: item.isComposite,\n    members: []\n  };\n  return clone;\n};\n\nexport const ApplyComposites = (\n  composites: CompositeItemType[],\n  data: PolystatModel[],\n  replaceVariables: InterpolateFunction,\n  compositesGlobalAliasingEnabled: boolean,\n  globalRegexPattern?: string,\n): PolystatModel[] => {\n  if (!composites) {\n    return data;\n  }\n  const filteredMetrics: number[] = [];\n  const keepMetrics: number[] = [];\n  const clonedComposites: PolystatModel[] = [];\n  // the composite Name can be a template variable\n  // the composite should only match specific metrics or expanded templated metrics that use the composite name\n  const resolvedComposites = resolveCompositeTemplates(composites, replaceVariables);\n  for (let i = 0; i < resolvedComposites.length; i++) {\n    const matchedMetrics: number[] = [];\n    const aComposite = resolvedComposites[i];\n    if (!aComposite.showComposite) {\n      continue;\n    }\n    let currentWorstSeries = null;\n    // this should filter the members that are matches for the composite name\n    const templatedMembers = resolveMemberTemplates(aComposite.name, aComposite.metrics, replaceVariables);\n    for (let j = 0; j < templatedMembers.length; j++) {\n      const aMetric = templatedMembers[j];\n      // look for the matches to the pattern in the data\n      for (let index = 0; index < data.length; index++) {\n        // match regex\n        // seriesName may not be defined yet, skip\n        if (typeof aMetric.seriesMatch === 'undefined') {\n          continue;\n        }\n        // name may not be escaped, check both\n        let metricName = aMetric.seriesMatch;\n        if (aMetric.seriesNameEscaped !== undefined) {\n          metricName = aMetric.seriesNameEscaped;\n        }\n        const regex = stringToJsRegex(metricName);\n        const matches = regex.exec(data[index].name);\n        if (matches && matches.length > 0) {\n          const seriesItem = data[index];\n          // Template out the name of the metric using the alias\n          if (aMetric.alias && aMetric.alias.length > 0) {\n            seriesItem.displayName = resolveMemberAliasTemplates(aMetric.alias, matches);\n          }\n\n          // keep index of the matched metric\n          matchedMetrics.push(index);\n          // only hide if requested\n          if (!aComposite.showMembers) {\n            filteredMetrics.push(index);\n          } else {\n            keepMetrics.push(index);\n          }\n          if (aComposite.clickThrough && aComposite.clickThrough.length > 0) {\n            // process template variables\n            let url = replaceVariables(aComposite.clickThrough);\n            // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n            url = ClickThroughTransformer.transformComposite(aComposite.name, url);\n            url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n            url = ClickThroughTransformer.transformNthMetric(url, data);\n            seriesItem.clickThrough = url;\n            seriesItem.sanitizedURL = textUtil.sanitizeUrl(url);\n            seriesItem.customClickthroughTarget = aComposite.clickThroughCustomTarget;\n            seriesItem.customClickthroughTargetEnabled = aComposite.clickThroughCustomTargetEnabled;\n          }\n        }\n      }\n    }\n    if (matchedMetrics.length === 0) {\n      continue;\n    }\n    // now determine the most triggered threshold\n\n    for (let k = 0; k < matchedMetrics.length; k++) {\n      const itemIndex = matchedMetrics[k];\n      const seriesItem = data[itemIndex];\n      // check thresholds\n      if (currentWorstSeries === null) {\n        currentWorstSeries = seriesItem;\n      } else {\n        currentWorstSeries = getWorstSeries(currentWorstSeries, seriesItem);\n      }\n    }\n    // Prefix the valueFormatted with the actual metric name\n    if (currentWorstSeries !== null) {\n      const clone = shallowClone(currentWorstSeries);\n      clone.name = aComposite.name;\n      clone.displayName = aComposite.name;\n      // tooltip/legend uses this to expand what values are inside the composite\n      for (let index = 0; index < matchedMetrics.length; index++) {\n        const itemIndex = matchedMetrics[index];\n        clone.members.push({\n          ...data[itemIndex],\n          name: data[itemIndex].displayName || data[itemIndex].name,\n        });\n      }\n      clone.thresholdLevel = currentWorstSeries.thresholdLevel;\n      // currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n      // now push the composite into data\n      // add the composite setting for showing the name/value to the new cloned model\n      clone.showName = aComposite.showName;\n      clone.showValue = aComposite.showValue;\n      clone.displayMode = aComposite.displayMode;\n      clone.newTabEnabled = aComposite.clickThroughOpenNewTab;\n      clone.sanitizeURLEnabled = aComposite.clickThroughSanitize;\n      clone.customClickthroughTarget = aComposite.clickThroughCustomTarget;\n      clone.customClickthroughTargetEnabled = aComposite.clickThroughCustomTargetEnabled;\n      // mark this series as a composite\n      clone.isComposite = true;\n      clonedComposites.push(clone);\n    }\n  }\n  // now merge the clonedComposites into data\n  if(compositesGlobalAliasingEnabled && globalRegexPattern) {\n    Array.prototype.push.apply(data, ApplyGlobalRegexPattern(clonedComposites, globalRegexPattern))\n  } else {\n    Array.prototype.push.apply(data, clonedComposites);\n  }\n  // remove the keepMetrics from the filteredMetrics list\n  // these have been marked by at least one composite to be displayed\n  for (let i = 0; i < keepMetrics.length; i++) {\n    const keptMetric = keepMetrics[i];\n    const location = filteredMetrics.indexOf(keptMetric);\n    if (location >= 0) {\n      filteredMetrics.splice(location, 1);\n    }\n  }\n  // sort by value descending\n  filteredMetrics.sort((a, b) => {\n    return b - a;\n  });\n  // now remove the filtered metrics from final list\n  // remove filtered metrics, use splice in reverse order\n  for (let i = data.length; i >= 0; i--) {\n    if (lodashIncludes(filteredMetrics, i)) {\n      data.splice(i, 1);\n    }\n  }\n  return data;\n};\n","import { FieldCalcs } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nexport function GetValueByOperator(\n  metricName: string,\n  data: PolystatModel | null,\n  operatorName: string,\n  calcs: FieldCalcs\n) {\n  switch (operatorName) {\n    case 'name':\n      return metricName;\n    case 'last_time':\n      if (data) {\n        return data.timestamp;\n      } else {\n        return Date.now();\n      }\n    default:\n      let aValue = calcs[operatorName];\n      return aValue;\n  }\n}\n","export enum MappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\ninterface BaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  type: MappingType;\n}\n\nexport type ValueMapping = ValueMap | RangeMap;\n\nexport interface ValueMap extends BaseMap {\n  value: string;\n}\n\nexport interface RangeMap extends BaseMap {\n  from: string;\n  to: string;\n}\ntype TimeSeriesValue = string | number | null;\n\nconst addValueToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  valueToTextMapping: ValueMap,\n  value: TimeSeriesValue\n) => {\n  if (valueToTextMapping.value === undefined) {\n    return allValueMappings;\n  }\n\n  if (value === null && isNullValueMap(valueToTextMapping)) {\n    return allValueMappings.concat(valueToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const valueToTextMappingAsNumber = parseFloat(valueToTextMapping.value as string);\n\n  if (isNaN(valueAsNumber) || isNaN(valueToTextMappingAsNumber)) {\n    if (value === valueToTextMapping.value) {\n      return allValueMappings.concat(valueToTextMapping);\n    }\n  }\n\n  if (valueAsNumber !== valueToTextMappingAsNumber) {\n    return allValueMappings;\n  }\n\n  return allValueMappings.concat(valueToTextMapping);\n};\n\nconst addRangeToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  rangeToTextMapping: RangeMap,\n  value: TimeSeriesValue\n) => {\n  if (rangeToTextMapping.from === undefined || rangeToTextMapping.to === undefined || value === undefined) {\n    return allValueMappings;\n  }\n\n  if (\n    value === null &&\n    rangeToTextMapping.from &&\n    rangeToTextMapping.to &&\n    rangeToTextMapping.from.toLowerCase() === 'null' &&\n    rangeToTextMapping.to.toLowerCase() === 'null'\n  ) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const fromAsNumber = parseFloat(rangeToTextMapping.from as string);\n  const toAsNumber = parseFloat(rangeToTextMapping.to as string);\n\n  if (isNaN(valueAsNumber) || isNaN(fromAsNumber) || isNaN(toAsNumber)) {\n    return allValueMappings;\n  }\n\n  if (valueAsNumber >= fromAsNumber && valueAsNumber <= toAsNumber) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  return allValueMappings;\n};\n\nconst getAllFormattedValueMappings = (valueMappings: ValueMapping[], value: TimeSeriesValue) => {\n  const allFormattedValueMappings = valueMappings.reduce((allValueMappings, valueMapping) => {\n    if (valueMapping.type === MappingType.ValueToText) {\n      allValueMappings = addValueToTextMappingText(allValueMappings, valueMapping as ValueMap, value);\n    } else if (valueMapping.type === MappingType.RangeToText) {\n      allValueMappings = addRangeToTextMappingText(allValueMappings, valueMapping as RangeMap, value);\n    }\n\n    return allValueMappings;\n  }, [] as ValueMapping[]);\n\n  allFormattedValueMappings.sort((t1, t2) => {\n    return t1.id - t2.id;\n  });\n\n  return allFormattedValueMappings;\n};\n\nexport const getMappedValue = (valueMappings: ValueMapping[], value: TimeSeriesValue): ValueMapping => {\n  return getAllFormattedValueMappings(valueMappings, value)[0];\n};\n\nconst isNullValueMap = (mapping: ValueMap): boolean => {\n  if (!mapping || !mapping.value) {\n    return false;\n  }\n  return mapping.value.toLowerCase() === 'null';\n};\n","export interface Threshold {\n  value: number;\n  color: string;\n  /**\n   *  Warning, Error, LowLow, Low, OK, High, HighHigh etc\n   */\n  state?: string;\n}\n\n/**\n *  Display mode\n */\nexport enum ThresholdsMode {\n  Absolute = 'absolute',\n  /**\n   *  between 0 and 1 (based on min/max)\n   */\n  Percentage = 'percentage',\n}\n\n/**\n *  Config that is passed to the ThresholdsEditor\n */\nexport interface ThresholdsConfig {\n  mode: ThresholdsMode;\n\n  /**\n   *  Must be sorted by 'value', first value is always -Infinity\n   */\n  steps: Threshold[];\n}\n","/**\n * @public\n */\nexport enum FieldColorModeId {\n  Thresholds = 'thresholds',\n  PaletteClassic = 'palette-classic',\n  PaletteSaturated = 'palette-saturated',\n  ContinuousGrYlRd = 'continuous-GrYlRd',\n  Fixed = 'fixed',\n}\n\n/**\n * @public\n */\nexport interface FieldColor {\n  /** The main color scheme mode */\n  mode: FieldColorModeId | string;\n  /** Stores the fixed color value if mode is fixed */\n  fixedColor?: string;\n  /** Some visualizations need to know how to assign a series color from by value color schemes */\n  seriesBy?: FieldColorSeriesByMode;\n}\n\n/**\n * @beta\n */\nexport type FieldColorSeriesByMode = 'min' | 'max' | 'last';\n\nexport const FALLBACK_COLOR = 'gray';\n","/**\n * @alpha\n */\nexport enum MappingType {\n  ValueToText = 'value', // was 1\n  RangeToText = 'range', // was 2\n  RegexToText = 'regex',\n  SpecialValue = 'special',\n}\n\n/**\n * @alpha\n */\nexport interface ValueMappingResult {\n  text?: string;\n  color?: string;\n  icon?: string;\n  index?: number;\n}\n\n/**\n * @alpha\n */\ninterface BaseValueMap<T> {\n  type: MappingType;\n  options: T;\n}\n\n/**\n * @alpha\n */\nexport interface ValueMap extends BaseValueMap<Record<string, ValueMappingResult>> {\n  type: MappingType.ValueToText;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMapOptions {\n  from: number | null; // changed from string\n  to: number | null;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMap extends BaseValueMap<RangeMapOptions> {\n  type: MappingType.RangeToText;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMapOptions {\n  pattern: string;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMap extends BaseValueMap<RegexMapOptions> {\n  type: MappingType.RegexToText;\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueOptions {\n  match: SpecialValueMatch;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport enum SpecialValueMatch {\n  True = 'true',\n  False = 'false',\n  Null = 'null',\n  NaN = 'nan',\n  NullAndNaN = 'null+nan',\n  Empty = 'empty',\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueMap extends BaseValueMap<SpecialValueOptions> {\n  type: MappingType.SpecialValue;\n}\n\n/**\n * @alpha\n */\nexport type ValueMapping = ValueMap | RangeMap | RegexMap | SpecialValueMap;\n","import { getActiveThreshold } from './thresholds';\nimport { stringToJsRegex } from '@grafana/data';\nimport {\n  MappingType,\n  SpecialValueMatch,\n  ValueMap,\n  ValueMapping,\n  ValueMappingResult,\n  SpecialValueOptions,\n} from './types/valueMappings';\nimport { ThresholdsConfig } from './types/thresholds';\n\nexport function getValueMappingResult(valueMappings: ValueMapping[], value: any): ValueMappingResult | null {\n  for (const vm of valueMappings) {\n    switch (vm.type) {\n      case MappingType.ValueToText:\n        if (value == null) {\n          continue;\n        }\n\n        const result = vm.options[value];\n        if (result) {\n          return result;\n        }\n\n        break;\n\n      case MappingType.RangeToText:\n        if (value == null) {\n          continue;\n        }\n\n        const valueAsNumber = parseFloat(value as string);\n        if (isNaN(valueAsNumber)) {\n          continue;\n        }\n\n        const isNumFrom = !isNaN(vm.options.from!);\n        if (isNumFrom && valueAsNumber < vm.options.from!) {\n          continue;\n        }\n\n        const isNumTo = !isNaN(vm.options.to!);\n        if (isNumTo && valueAsNumber > vm.options.to!) {\n          continue;\n        }\n\n        return vm.options.result;\n\n      case MappingType.RegexToText:\n        if (value == null) {\n          continue;\n        }\n\n        if (typeof value !== 'string') {\n          continue;\n        }\n\n        const regex = stringToJsRegex(vm.options.pattern);\n        if (value.match(regex)) {\n          const res = { ...vm.options.result };\n\n          if (res.text != null) {\n            res.text = value.replace(regex, vm.options.result.text || '');\n          }\n\n          return res;\n        }\n\n      case MappingType.SpecialValue:\n        switch ((vm.options as SpecialValueOptions).match) {\n          case SpecialValueMatch.Null: {\n            if (value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NaN: {\n            if (isNaN(value as any)) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NullAndNaN: {\n            if (isNaN(value as any) || value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.True: {\n            if (value === true || value === 'true') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.False: {\n            if (value === false || value === 'false') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.Empty: {\n            if (value === '') {\n              return vm.options.result;\n            }\n            break;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Ref https://stackoverflow.com/a/58550111\nexport function isNumeric(num: any) {\n  return (typeof num === 'number' || (typeof num === 'string' && num.trim() !== '')) && !isNaN(num as number);\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport enum LegacyMappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport interface LegacyBaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  type: LegacyMappingType;\n}\n\n/**\n * @deprecated use ValueMapping instead\n * @internal\n */\nexport type LegacyValueMapping = LegacyValueMap | LegacyRangeMap;\n\n/**\n * @deprecated use ValueMap instead\n * @internal\n */\nexport interface LegacyValueMap extends LegacyBaseMap {\n  value: string;\n}\n\n/**\n * @deprecated use RangeMap instead\n * @internal\n */\nexport interface LegacyRangeMap extends LegacyBaseMap {\n  from: string;\n  to: string;\n}\n\n/**\n * @deprecated use getValueMappingResult instead\n * @internal\n */\nexport function getMappedValue(valueMappings: LegacyValueMapping[], value: any): LegacyValueMapping {\n  const emptyResult = { type: LegacyMappingType.ValueToText, value: '', text: '', from: '', to: '', id: 0 };\n  if (!valueMappings?.length) {\n    return emptyResult;\n  }\n\n  const upgraded: ValueMapping[] = [];\n  for (const vm of valueMappings) {\n    if (isValueMapping(vm)) {\n      upgraded.push(vm);\n      continue;\n    }\n    upgraded.push(upgradeOldAngularValueMapping(vm));\n  }\n\n  if (!upgraded?.length) {\n    return emptyResult;\n  }\n\n  const result = getValueMappingResult(upgraded, value);\n  if (!result) {\n    return emptyResult;\n  }\n\n  return {\n    type: LegacyMappingType.ValueToText,\n    value: result.text,\n    text: result.text ?? '',\n    from: '',\n    to: '',\n    id: result.index ?? 0,\n  };\n}\n\n/**\n * @alpha\n * Converts the old Angular value mappings to new react style\n */\nexport function convertOldAngularValueMappings(panel: any, migratedThresholds?: ThresholdsConfig): ValueMapping[] {\n  const mappings: ValueMapping[] = [];\n\n  // Guess the right type based on options\n  let mappingType = panel.mappingType;\n  if (!panel.mappingType) {\n    if (panel.valueMaps && panel.valueMaps.length) {\n      mappingType = 1;\n    } else if (panel.rangeMaps && panel.rangeMaps.length) {\n      mappingType = 2;\n    }\n  }\n  if (mappingType === 1) {\n    for (let i = 0; i < panel.valueMaps.length; i++) {\n      const map = panel.valueMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.ValueToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  } else if (mappingType === 2) {\n    for (let i = 0; i < panel.rangeMaps.length; i++) {\n      const map = panel.rangeMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.RangeToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  }\n\n  return mappings;\n}\n\nfunction upgradeOldAngularValueMapping(old: any, thresholds?: ThresholdsConfig): ValueMapping {\n  const valueMaps: ValueMap = { type: MappingType.ValueToText, options: {} };\n  const newMappings: ValueMapping[] = [];\n\n  // Use the color we would have picked from thresholds\n  let color: string | undefined = undefined;\n  const numeric = parseFloat(old.text);\n  if (thresholds && !isNaN(numeric)) {\n    const level = getActiveThreshold(numeric, thresholds.steps);\n    if (level && level.color) {\n      color = level.color;\n    }\n  }\n\n  switch (old.type) {\n    case LegacyMappingType.ValueToText:\n    case MappingType.ValueToText:\n      if (old.value != null) {\n        if (old.value === 'null') {\n          newMappings.push({\n            type: MappingType.SpecialValue,\n            options: {\n              match: SpecialValueMatch.Null,\n              result: { text: old.text, color },\n            },\n          });\n        } else {\n          valueMaps.options[String(old.value)] = {\n            text: old.text,\n            color,\n          };\n        }\n      }\n      break;\n    case LegacyMappingType.RangeToText:\n    case MappingType.RangeToText:\n      if (old.from === 'null' || old.to === 'null') {\n        newMappings.push({\n          type: MappingType.SpecialValue,\n          options: {\n            match: SpecialValueMatch.Null,\n            result: { text: old.text, color },\n          },\n        });\n      } else {\n        newMappings.push({\n          type: MappingType.RangeToText,\n          options: {\n            from: +old.from,\n            to: +old.to,\n            result: { text: old.text, color },\n          },\n        });\n      }\n      break;\n  }\n\n  if (Object.keys(valueMaps.options).length > 0) {\n    newMappings.unshift(valueMaps);\n  }\n\n  return newMappings[0];\n}\n\nfunction isValueMapping(map: any): map is ValueMapping {\n  if (!map) {\n    return false;\n  }\n\n  return map.hasOwnProperty('options') && typeof map.options === 'object';\n}\n","import { getMappedValue } from './v7/valueMappings';\nimport { getValueMappingResult } from './v8/valueMappings';\n\n//\n// To maintain compatibility back to Grafana >=v7.3, this wrapper is needed\n// to process the value mappings based on the object passed in.\n//\n// the method `getMappedValue()` function was removed in v9\n// the replacement `getValueMappingResult()` only appears in v8.1.0+\n//\n// At runtime, this cannot be determined so the legacy function and the new function are both provided\n// here, to allow this to work work across all versions (7.3 > 9.x)\n//\nexport const GetMappedValue = (valueMappings: any[], value: any): any => {\n  let mappedValue = getMappedValue(valueMappings, value);\n  if (typeof mappedValue === 'undefined') {\n    return getValueMappingResult(valueMappings, value);\n  }\n  return mappedValue;\n};\n","import { getTemplateSrv } from '@grafana/runtime';\nimport {\n  getValueFormat,\n  stringToJsRegex,\n  ScopedVars,\n  InterpolateFunction,\n  textUtil,\n  getColorForTheme,\n  FieldConfigSource,\n  GrafanaTheme2,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { useTheme, useTheme2 } from '@grafana/ui';\nimport { getThresholdLevelForValue } from './threshold_processor';\nimport { GetValueByOperator } from './stats';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { PolystatModel } from '../components/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from 'components/thresholds/types';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { roundValue } from 'utils';\n\nconst customFormatter = (value: any): string => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nconst resolveOverrideTemplates = (overrides: OverrideItemType[]): OverrideItemType[] => {\n  const ret: OverrideItemType[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  overrides.forEach((override) => {\n    // Resolve templates in series names\n    if (override.metricName) {\n      const matchResult = override.metricName.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((template: any) => {\n          const templateVars: ScopedVars = {};\n          const resolvedSeriesNames = getTemplateSrv()\n            .replace(template, templateVars, customFormatter)\n            .split(CUSTOM_SPLIT_DELIMITER);\n          resolvedSeriesNames.forEach((seriesName) => {\n            const newName = override.metricName.replace(template, seriesName);\n            ret.push({\n              ...override,\n              metricName: newName,\n            });\n          });\n        });\n      } else {\n        // does not match template, but can match a simple regex\n        ret.push(override);\n      }\n    }\n  });\n\n  return ret;\n};\n\nexport const MatchOverride = (pattern: string, overrides: OverrideItemType[]): OverrideItemType | null => {\n  const resolvedOverrides = resolveOverrideTemplates(overrides);\n  for (let index = 0; index < resolvedOverrides.length; index++) {\n    const anOverride = resolvedOverrides[index];\n    const regex = stringToJsRegex(anOverride.metricName);\n    const matches = pattern.match(regex);\n    if (matches && matches.length > 0 && anOverride.enabled) {\n      return resolvedOverrides[index];\n    }\n  }\n  return null;\n};\n\nexport const ApplyOverrides = (\n  overrides: OverrideItemType[],\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  replaceVariables: InterpolateFunction | null,\n  themeV1: GrafanaTheme, // V8\n  themeV2: GrafanaTheme2 // V9+\n) => {\n  // determine real color\n  let realGlobalFillColor = '';\n  if (typeof themeV2.visualization !== 'undefined') {\n    realGlobalFillColor = themeV2.visualization.getColorByName(globalFillColor);\n  } else {\n    realGlobalFillColor = getColorForTheme(globalFillColor, themeV1);\n  }\n\n  if (!overrides) {\n    return data;\n  }\n\n  for (let index = 0; index < data.length; index++) {\n    const anOverride = MatchOverride(data[index].name, overrides);\n    if (anOverride) {\n      const aSeries = data[index];\n      // set the operators\n      aSeries.operatorName = anOverride.operatorName;\n      const dataValue = GetValueByOperator(aSeries.name, aSeries, aSeries.operatorName, aSeries.stats);\n      // Use defaults or the specific threshold\n      const thresholds =\n        anOverride.thresholds && anOverride.thresholds.length ? anOverride.thresholds : globalThresholds;\n      const result = getThresholdLevelForValue(thresholds, dataValue, globalFillColor);\n      let useColor = result.color;\n      if (typeof themeV2.visualization !== 'undefined') {\n        useColor = themeV2.visualization.getColorByName(result.color);\n      } else {\n        useColor = getColorForTheme(result.color, themeV1);\n      }\n      // set value to what was returned\n      data[index].value = dataValue;\n      data[index].color = useColor;\n      data[index].thresholdLevel = result.thresholdLevel;\n      // format it\n      // TODO: fix me!\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        // set color also\n        if (mappedValue.color) {\n          let realColor = themeV2.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n      } else {\n        const formatFunc = getValueFormat(anOverride.unitFormat);\n        if (formatFunc) {\n          // put the value in quotes to escape \"most\" special characters\n          const decimals: number = +anOverride.decimals;\n          const formatted = formatFunc(data[index].value, decimals, anOverride.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          // spaces are included with the formatFunc\n          if (formatted.suffix) {\n            data[index].valueFormatted += formatted.suffix;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = formatted.prefix + data[index].valueFormatted;\n          }\n          data[index].valueRounded = roundValue(data[index].value, decimals) || data[index].value;\n        }\n      }\n      // add prefix/suffix to formatted value\n      if (anOverride.prefix !== '') {\n        data[index].valueFormatted = anOverride.prefix + ' ' + data[index].valueFormatted;\n      }\n      if (anOverride.suffix !== '') {\n        data[index].valueFormatted = data[index].valueFormatted + ' ' + anOverride.suffix;\n      }\n      if (anOverride.alias !== '') {\n        data[index].displayName = anOverride.alias;\n      }\n      data[index].prefix = anOverride.prefix;\n      data[index].suffix = anOverride.suffix;\n      // set the url, replace template vars\n      if (anOverride.clickThrough && anOverride.clickThrough.length > 0) {\n        const regex = stringToJsRegex(anOverride.metricName);\n        const matches = regex.exec(data[index].name);\n        const templateVars: ScopedVars = {};\n        if (matches && matches.length > 0) {\n          matches.forEach((name: string, i: number) => {\n            templateVars[i] = { text: i, value: name };\n          });\n        }\n        let url = getTemplateSrv().replace(anOverride.clickThrough, templateVars);\n        // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n        url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n        url = ClickThroughTransformer.transformNthMetric(url, data);\n        url = ClickThroughTransformer.transformByRegex(anOverride.metricName, data[index], url);\n        data[index].clickThrough = url;\n        data[index].newTabEnabled = anOverride.clickThroughOpenNewTab;\n        data[index].sanitizeURLEnabled = anOverride.clickThroughSanitize;\n        // provide both versions, what is displayed is determined later\n        data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n        data[index].customClickthroughTargetEnabled = anOverride.clickThroughCustomTargetEnabled;\n        data[index].customClickthroughTarget = anOverride.clickThroughCustomTarget;\n      }\n    } else if (globalThresholds && globalThresholds.length) {\n      const result = getThresholdLevelForValue(globalThresholds, data[index].value, globalFillColor);\n      // set value to what was returned\n      data[index].color = result.color;\n      data[index].thresholdLevel = result.thresholdLevel;\n    }\n  }\n  return data;\n};\n","import { InsertTime } from './deframer';\nimport { useTheme2 } from '@grafana/ui';\nimport {\n  Field,\n  FieldType,\n  reduceField,\n  textUtil,\n  DataFrame,\n  PanelData,\n  getFieldDisplayName,\n  formattedValueToString,\n  getValueFormat,\n  stringToJsRegex,\n  InterpolateFunction,\n  FieldConfigSource,\n  ScopedVars,\n  GrafanaTheme2,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { includes as lodashIncludes } from 'lodash';\nimport { DisplayModes, OperatorOptions, PolystatModel } from '../components/types';\nimport { GLOBAL_FILL_COLOR_RGBA } from '../components/defaults';\nimport { GetDecimalsForValue, SortVariableValuesByField, roundValue } from '../utils';\nimport { ApplyComposites } from './composite_processor';\nimport { CompositeItemType } from 'components/composites/types';\nimport { ApplyOverrides } from './override_processor';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { GetValueByOperator } from './stats';\n\n/**\n * Converts dataframes to internal model\n *\n * @param   {DataFrame[]}    data                [data description]\n * @param   {string[]}     globalRegexPattern  [globalRegexPattern description]\n *\n * @return  {DataFrame[]}                      [return description]\n */\nexport function ProcessDataFrames(\n  compositesEnabled: boolean,\n  composites: CompositeItemType[],\n  overrides: OverrideItemType[],\n  data: PanelData,\n  replaceVariables: InterpolateFunction,\n  fieldConfig: FieldConfigSource<any>,\n  globalClickthrough: string,\n  globalClickthroughTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalClickthroughCustomTargetEnabled: boolean,\n  globalClickthroughCustomTarget: string,\n  globalOperator: string,\n  globalDecimals: number,\n  globalDisplayMode: string,\n  globalRegexPattern: string,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  globalUnitFormat: string,\n  sortByDirection: number,\n  sortByField: string,\n  compositesGlobalAliasingEnabled: boolean,\n  themeV1: GrafanaTheme,\n  themeV2: GrafanaTheme2,\n): PolystatModel[] {\n\n  // check if data contains a field called Time of type time\n  let processedData = InsertTime(data.series);\n  let internalData = [] as PolystatModel[];\n\n  processedData.map((item) => {\n    const models = DataFrameToPolystat(item, globalOperator);\n    for (const aModel of models) {\n      internalData.push(aModel);\n    }\n  });\n  internalData = ApplyGlobalRegexPattern(internalData, globalRegexPattern);\n  // formatting can change colors due to value maps\n  internalData = ApplyGlobalFormatting(internalData, fieldConfig, globalUnitFormat, globalDecimals, globalFillColor, themeV2);\n  // applies overrides and global thresholds (and mappings)\n  internalData = ApplyOverrides(\n    overrides,\n    internalData,\n    fieldConfig,\n    globalFillColor,\n    globalThresholds,\n    replaceVariables,\n    themeV1,\n    themeV2\n  );\n  // composites\n  if (compositesEnabled) {\n    internalData = ApplyComposites(composites, internalData, replaceVariables, compositesGlobalAliasingEnabled, globalRegexPattern);\n  }\n  // clickthroughs\n  internalData = ApplyGlobalClickThrough(\n    internalData,\n    globalClickthrough,\n    globalClickthroughTabEnabled,\n    globalClickthroughSanitizedEnabled,\n    globalClickthroughCustomTargetEnabled,\n    globalClickthroughCustomTarget\n  );\n  // filter by global display mode\n  internalData = FilterByGlobalDisplayMode(internalData, globalDisplayMode);\n  // final step sorting\n  internalData = SortVariableValuesByField(internalData, sortByField, sortByDirection);\n  return internalData;\n}\n\n/**\n * renames according to a global regex pattern\n * @param {PolystatModel[]} data [series description]\n * @param {string[]} regexPattern [regexPattern description]\n * @return {PolystatModel[]} [return description]\n */\nexport const ApplyGlobalRegexPattern = (data: PolystatModel[], regexPattern: string): PolystatModel[] => {\n  for (let i = 0; i < data.length; i++) {\n    if (regexPattern !== '') {\n      const regexVal = stringToJsRegex(regexPattern);\n      if (data[i].name && regexVal.test(data[i].name.toString())) {\n        const temp = regexVal.exec(data[i].name.toString());\n        if (!temp) {\n          continue;\n        }\n        let extractedTxt = '';\n        if (temp.length > 1) {\n          temp.slice(1).forEach((value, i) => {\n            if (value) {\n              extractedTxt += extractedTxt.length > 0 ? ' ' + value.toString() : value.toString();\n            }\n          });\n          data[i].displayName = extractedTxt;\n        }\n      }\n    }\n  }\n  return data;\n};\n\nexport const ApplyGlobalClickThrough = (\n  data: PolystatModel[],\n  globalClickthrough: string,\n  globalClickthroughNewTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalClickthroughCustomTargetEnabled: boolean,\n  globalClickthroughCustomTarget: string\n): PolystatModel[] => {\n  for (let index = 0; index < data.length; index++) {\n    if (data[index].clickThrough.length === 0) {\n      data[index].clickThrough = processDefaultClickThrough(index, globalClickthrough, data);\n      data[index].newTabEnabled = globalClickthroughNewTabEnabled;\n      data[index].sanitizeURLEnabled = globalClickthroughSanitizedEnabled;\n      // always provide both versions and overrides and composites can specify which one to use\n      data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n      data[index].customClickthroughTargetEnabled = globalClickthroughCustomTargetEnabled;\n      data[index].customClickthroughTarget = globalClickthroughCustomTarget;\n    }\n  }\n  return data;\n};\n\nconst processDefaultClickThrough = (index: number, globalClickthrough: string, data: PolystatModel[]): string => {\n  let url = globalClickthrough;\n  // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n  url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n  url = ClickThroughTransformer.transformNthMetric(url, data);\n  // process template variables inside clickthrough\n  const templateVars: ScopedVars = {};\n  url = getTemplateSrv().replace(url, templateVars);\n  return url;\n};\n\nexport const ApplyGlobalFormatting = (\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalUnitFormat: string,\n  globalDecimals: number,\n  globalFillColor: string,\n  theme: GrafanaTheme2\n): PolystatModel[] => {\n  let realGlobalFillColor = theme.visualization.getColorByName(globalFillColor);\n  const formatFunc = getValueFormat(globalUnitFormat);\n  for (let index = 0; index < data.length; index++) {\n    // Check for mapped value, if nothing set, format value\n    if (data[index].value !== null) {\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        // set color also\n        if (mappedValue.color) {\n          let realColor = theme.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n      } else {\n        if (formatFunc) {\n          const result = GetDecimalsForValue(data[index].value, globalDecimals);\n          const formatted = formatFunc(data[index].value, result.decimals, result.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          if (formatted.suffix) {\n            data[index].valueFormatted += ` ${formatted.suffix}`;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = `{$formatted.prefix} ${data[index].valueFormatted}`;\n          }\n          const valueRounded = roundValue(data[index].value, result.decimals);\n          if (valueRounded !== null) {\n            data[index].valueRounded = valueRounded;\n          }\n        }\n        data[index].color = realGlobalFillColor;\n      }\n    }\n  }\n  return data;\n};\n\nconst FilterByGlobalDisplayMode = (data: any, globalDisplayMode: string): PolystatModel[] => {\n  const filteredMetrics: number[] = [];\n  const compositeMetrics: PolystatModel[] = [];\n  if (globalDisplayMode !== 'all') {\n    const dataLen = data.length;\n    for (let i = 0; i < dataLen; i++) {\n      const item = data[i];\n      // keep if composite\n      if (item.isComposite) {\n        compositeMetrics.push(item);\n      }\n      if (item.thresholdLevel < 1) {\n        // push the index number\n        filteredMetrics.push(i);\n      }\n    }\n    // remove filtered metrics, use splice in reverse order\n    for (let i = data.length; i >= 0; i--) {\n      if (lodashIncludes(filteredMetrics, i)) {\n        data.splice(i, 1);\n      }\n    }\n    if (data.length === 0) {\n      if (compositeMetrics.length > 0) {\n        // set data to be all of the composites\n        data = compositeMetrics;\n      }\n    }\n  }\n  return data;\n};\n\nexport const DataFrameToPolystat = (frame: DataFrame, globalOperator: string): PolystatModel[] => {\n\n  const valueFields: Field[] = [];\n\n  for (const aField of frame.fields) {\n    if (aField.type === FieldType.number) {\n      valueFields.push(aField);\n    }\n  }\n  const models: PolystatModel[] = [];\n\n  for (const valueField of valueFields) {\n    const valueFieldName = getFieldDisplayName(valueField!, frame);\n    const standardCalcs = reduceField({ field: valueField!, reducers: ['bogus'] });\n    //\n    // side effect of getFieldDisplayName: it modifies content of valueField.state by adding a displayName\n    // file a bug? deframer has been fixed to clone the the field.state to work around the issue\n    //\n    //if (valueField.state?.displayName !== undefined) {\n    //  delete valueField.state?.displayName;\n    //}\n    const operatorValue = GetValueByOperator(valueFieldName, null, globalOperator, standardCalcs);\n\n    let maxDecimals = 4;\n    if (valueField!.config.decimals !== undefined && valueField!.config.decimals !== null) {\n      maxDecimals = valueField!.config.decimals;\n    }\n    const result = getValueFormat(valueField!.config.unit)(operatorValue, maxDecimals, undefined, undefined);\n    const valueFormatted = formattedValueToString(result);\n\n    const model: PolystatModel = {\n      displayMode: DisplayModes[0].value,\n      thresholdLevel: 0,\n      value: operatorValue,\n      valueFormatted: valueFormatted,\n      valueRounded: roundValue(operatorValue, maxDecimals) || operatorValue,\n      stats: standardCalcs,\n      name: valueFieldName,\n      displayName: valueFieldName,\n      timestamp: 0,\n      prefix: '',\n      suffix: '',\n      color: GLOBAL_FILL_COLOR_RGBA,\n      clickThrough: '',\n      operatorName: OperatorOptions[0].value,\n      newTabEnabled: true,\n      sanitizedURL: '',\n      sanitizeURLEnabled: true,\n      showName: true,\n      showValue: true,\n      isComposite: false,\n      members: [],\n      customClickthroughTargetEnabled: false,\n      customClickthroughTarget: ''\n    };\n    models.push(model);\n  }\n  return models;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { PanelProps, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { PolystatOptions, PolystatModel } from './types';\nimport { Polystat } from './Polystat';\nimport { css, cx } from '@emotion/css';\nimport { useStyles2, useTheme, useTheme2 } from '@grafana/ui';\nimport { ProcessDataFrames } from '../data/processor';\n\ninterface Props extends PanelProps<PolystatOptions> {}\n\nconst getComponentStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    container: css`\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      height: 100%;\n      width: 100%;\n      & svg > g > polygon {\n        fill: transparent;\n      }\n    `,\n  };\n};\n\n\nexport const PolystatPanel: React.FC<Props> = ({ options, data, id, width, height, replaceVariables, fieldConfig }) => {\n  const styles = useStyles2(getComponentStyles);\n  const currentThemeV1 = useTheme(); // V8\n  const currentThemeV2 = useTheme2(); // V9+\n  let [cachedProcessedData, setCachedProcessedData] = useState<PolystatModel[]>();\n  useEffect(() => {\n    if (data.state === LoadingState.Done) {\n      // each series is a converted to a model we can use\n      const processedData = ProcessDataFrames(\n        options.compositeConfig.enabled,\n        options.compositeConfig.composites,\n        options.overrideConfig.overrides,\n        data,\n        replaceVariables,\n        fieldConfig,\n        options.globalClickthrough,\n        options.globalClickthroughNewTabEnabled,\n        options.globalClickthroughSanitizedEnabled,\n        options.globalClickthroughCustomTargetEnabled,\n        options.globalClickthroughCustomTarget,\n        options.globalOperator,\n        options.globalDecimals,\n        options.globalDisplayMode,\n        options.globalRegexPattern,\n        options.globalFillColor,\n        options.globalThresholdsConfig,\n        options.globalUnitFormat,\n        options.sortByDirection,\n        options.sortByField,\n        options.compositeGlobalAliasingEnabled,\n        currentThemeV1,\n        currentThemeV2,\n      );\n      setCachedProcessedData(processedData);\n\n    }\n  }, [data, fieldConfig, options, replaceVariables, currentThemeV1, currentThemeV2]);\n\n  if (cachedProcessedData === undefined) {\n    return (\n      <>Loading... please wait</>\n    )\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <div className={cx(styles.container)}>\n        <Polystat\n          compositeConfig={options.compositeConfig}\n          overrideConfig={options.overrideConfig}\n          autoSizePolygons={options.autoSizePolygons}\n          globalAutoScaleFonts={options.globalAutoScaleFonts}\n          globalClickthrough={options.globalClickthrough}\n          globalClickthroughNewTabEnabled={options.globalClickthroughNewTabEnabled}\n          globalClickthroughSanitizedEnabled={options.globalClickthroughSanitizedEnabled}\n          globalClickthroughCustomTargetEnabled={options.globalClickthroughCustomTargetEnabled}\n          globalClickthroughCustomTarget={options.globalClickthroughCustomTarget}\n          globalOperator={options.globalOperator}\n          globalDecimals={options.globalDecimals}\n          globalDisplayMode={options.globalDisplayMode}\n          globalDisplayTextTriggeredEmpty={options.globalDisplayTextTriggeredEmpty}\n          globalFontSize={options.globalFontSize}\n          globalPolygonSize={options.globalPolygonSize}\n          ellipseCharacters={options.ellipseCharacters}\n          ellipseEnabled={options.ellipseEnabled}\n          globalFillColor={options.globalFillColor}\n          globalRegexPattern={options.globalRegexPattern}\n          globalGradientsEnabled={options.globalGradientsEnabled}\n          globalTextFontAutoColor={options.globalTextFontAutoColorEnabled ? currentThemeV2.colors.text.primary : '#000000'}\n          globalTextFontAutoColorEnabled={options.globalTextFontAutoColorEnabled}\n          globalTextFontColor={options.globalTextFontColor}\n          globalTextFontFamily={options.globalTextFontFamily}\n          globalThresholdsConfig={options.globalThresholdsConfig}\n          globalTooltipsEnabled={options.globalTooltipsEnabled}\n          globalTooltipsShowTimestampEnabled={options.globalTooltipsShowTimestampEnabled}\n          globalTooltipsFontFamily={options.globalTooltipsFontFamily}\n          globalUnitFormat={options.globalUnitFormat}\n          autoSizeColumns={options.autoSizeColumns}\n          autoSizeRows={options.autoSizeRows}\n          layoutDisplayLimit={options.layoutDisplayLimit}\n          layoutNumColumns={options.layoutNumColumns}\n          layoutNumRows={options.layoutNumRows}\n          processedData={cachedProcessedData}\n          panelId={id}\n          panelWidth={width}\n          panelHeight={height}\n          radius={options.radius}\n          renderTime={new Date()}\n          globalShape={options.globalShape}\n          sortByDirection={options.sortByDirection}\n          sortByField={options.sortByField}\n          globalPolygonBorderColor={options.globalPolygonBorderColor}\n          globalPolygonBorderSize={options.globalPolygonBorderSize}\n          globalShowValueEnabled={options.globalShowValueEnabled}\n          globalShowTooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n          tooltipPrimarySortDirection={options.tooltipPrimarySortDirection}\n          tooltipPrimarySortByField={options.tooltipPrimarySortByField}\n          tooltipSecondarySortDirection={options.tooltipSecondarySortDirection}\n          tooltipSecondarySortByField={options.tooltipSecondarySortByField}\n          tooltipDisplayMode={options.tooltipDisplayMode}\n          tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n          compositeGlobalAliasingEnabled={options.compositeGlobalAliasingEnabled}\n        />\n      </div>\n    </div>\n  );\n};\n","import { SelectableValue } from '@grafana/data';\n\nexport const DisplayModes: SelectableValue[] = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport interface CompositeMetric {\n  seriesMatch: string;\n  compositeMatch?: CompositeItemType[];\n  alias?: string;\n  ID?: string;\n  order: number;\n  seriesName?: string;\n  seriesNameEscaped?: string;\n}\n\nexport interface CompositeItemType {\n  name: string;\n  label: string;\n  order: number;\n  isTemplated: boolean;\n  displayMode: string;\n  enabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  showComposite: boolean;\n  showMembers: boolean;\n  metrics: CompositeMetric[];\n  clickThrough: string | '';\n  clickThroughSanitize: boolean;\n  clickThroughOpenNewTab: boolean;\n  clickThroughCustomTargetEnabled: boolean;\n  clickThroughCustomTarget: string;\n}\n\nexport interface CompositeItemTracker {\n  composite: CompositeItemType;\n  order: number;\n  ID: string;\n}\n\nexport interface CompositeItemProps {\n  composite: CompositeItemType;\n  ID: string;\n  enabled: boolean;\n  setter: any;\n  remover: any;\n  moveUp: any;\n  moveDown: any;\n  createDuplicate: any;\n  context: any;\n}\n\nexport interface CompositeMetricItemProps {\n  metric: CompositeMetric;\n  index: number;\n  disabled: boolean;\n  removeMetric: any;\n  updateMetric: any;\n  updateMetricAlias: any;\n  context: any;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { Input, Field, IconButton, HorizontalGroup, Cascader, CascaderOption, FieldSet } from '@grafana/ui';\nimport { CompositeMetricItemProps } from './types';\nimport { getMetricHints } from '../metric_hints';\n\nexport const CompositeMetricItem: React.FC<CompositeMetricItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n\n  async function copySelectedMetricToClipboard(index: number) {\n    if (props.metric.seriesMatch) {\n      const aValue = props.metric.seriesMatch;\n      if ('clipboard' in navigator) {\n        if (aValue) {\n          return await navigator.clipboard.writeText(aValue);\n        }\n      } else {\n        if (aValue) {\n          return document.execCommand('copy', true, aValue);\n        }\n      }\n    }\n  }\n\n  const updateMetric = (v: string) => {\n    props.updateMetric(props.index, v);\n  };\n  const updateMetricAlias = (alias: string) => {\n    props.updateMetricAlias(props.index, alias);\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <FieldSet>\n      <HorizontalGroup>\n        <IconButton\n          key=\"deleteMetric\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete this metric\"\n          onClick={() => props.removeMetric(props.index)}\n        />\n        <IconButton\n          key=\"copyMetric\"\n          variant=\"secondary\"\n          name=\"copy\"\n          tooltip=\"Copy Metric/Regex\"\n          onClick={() => copySelectedMetricToClipboard(props.index)}\n        />\n        <Field label=\"Metric/RegEx\" style={{ minWidth: '175px' }} disabled={props.disabled}>\n          <Cascader\n            key={`cmi-index-${props.index}`}\n            initialValue={props.metric.seriesMatch}\n            allowCustomValue\n            placeholder=\"\"\n            options={metricHints}\n            onSelect={(val: string) => updateMetric(val)}\n          />\n        </Field>\n        <Field label=\"Alias\" disabled={props.disabled}>\n          <Input value={props.metric.alias} placeholder=\"\" onChange={(e) => updateMetricAlias(e.currentTarget.value)} />\n        </Field>\n      </HorizontalGroup>\n    </FieldSet>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { IconName, Button, Input, Select, Field, FieldSet, Switch, Card, IconButton } from '@grafana/ui';\nimport { DisplayModes, CompositeItemProps, CompositeMetric, CompositeItemType } from './types';\nimport { CompositeMetricItem } from './CompositeMetricItem';\nimport { v4 as UUIDv4 } from 'uuid';\nimport { SelectableValue } from '@grafana/data';\n\nexport const CompositeItem: React.FC<CompositeItemProps> = (props: CompositeItemProps) => {\n  const [composite, _setComposite] = useState(props.composite);\n  const getDisplayMode = (displayMode: string) => {\n    const keys = DisplayModes.keys();\n    for (const aKey of keys) {\n      if (DisplayModes[aKey].value === displayMode) {\n        return DisplayModes[aKey];\n      }\n    }\n    // no match, return all by default\n    return DisplayModes[0];\n  };\n  const [displayMode, setDisplayMode] = useState<SelectableValue>(getDisplayMode(props.composite.displayMode));\n  const setComposite = (value: CompositeItemType) => {\n    _setComposite(value);\n    props.setter(composite.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n  const removeItem = () => {\n    //alert('high');\n    props.remover(composite.order);\n    // call parent remove function\n  };\n\n  const toggleShowName = () => {\n    const currentState = composite.showName;\n    //setShowName(!currentState);\n    setComposite({ ...composite, showName: !currentState });\n  };\n\n  const removeMetric = (index: number) => {\n    let allMetrics = [...props.composite.metrics];\n    allMetrics.splice(index, 1);\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n  const moveUp = () => {\n    props.moveUp(composite.order);\n  };\n  const moveDown = () => {\n    props.moveDown(composite.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(composite.order);\n  };\n\n  const updateMetric = (index: number, value: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].seriesMatch = value;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const updateMetricAlias = (index: number, alias: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].alias = alias;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const addMetric = () => {\n    const newMetric: CompositeMetric = {\n      seriesMatch: '',\n      ID: UUIDv4(),\n      order: 0,\n    };\n    if (!composite.metrics) {\n      const currentMetrics: CompositeMetric[] = [];\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    } else {\n      const currentMetrics: CompositeMetric[] = composite.metrics;\n      newMetric.order = currentMetrics.length;\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    }\n  };\n\n  return (\n    <Card heading=\"\" key={`composite-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field label=\"Composite Name\" description=\"Name or Regular Expression\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.name}\n              placeholder=\"\"\n              onChange={(e) => setComposite({ ...composite, name: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Show Name\" description=\"Toggle Display of composite name\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showName}\n              disabled={!composite.showComposite}\n              onChange={toggleShowName}\n            ></Switch>\n          </Field>\n          <Field label=\"Show Value\" description=\"Toggle Display of composite value\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showValue}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showValue: !composite.showValue })}\n            />\n          </Field>\n          <Field\n            label=\"Show Members\"\n            description=\"Toggle Display of composite members\"\n            disabled={!composite.showComposite}\n          >\n            <Switch\n              transparent={true}\n              value={composite.showMembers}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showMembers: !composite.showMembers })}\n            />\n          </Field>\n          <Field\n            label=\"Display Mode\"\n            description=\"All will display all members, Triggered will only display those meeting threshold settings\"\n            disabled={!composite.showComposite}\n          >\n            <Select\n              menuShouldPortal={true}\n              value={displayMode}\n              onChange={(v) => {\n                setDisplayMode(v);\n                setComposite({ ...composite, displayMode: v.value });\n              }}\n              options={DisplayModes}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setComposite({ ...composite, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              disabled={!composite.showComposite}\n              value={composite.clickThroughSanitize}\n              onChange={() => setComposite({ ...composite, clickThroughSanitize: !composite.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open URL in New Tab\" description=\"Open link in new tab\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughOpenNewTab}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, clickThroughOpenNewTab: !composite.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field label=\"Enable Custom URL Target\" description=\"Enable custom target\" disabled={!composite.showComposite} hidden={composite.clickThroughOpenNewTab}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughCustomTargetEnabled}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite,\n                clickThroughCustomTargetEnabled: !composite.clickThroughCustomTargetEnabled,\n                clickThroughCustomTarget: composite.clickThroughCustomTarget || ''\n              })}\n            />\n          </Field>\n          <Field label=\"Custom URL Target\" description=\"Specify a custom target, typical values are: _blank|_self|_parent|_top|framename\" disabled={!composite.showComposite} hidden={!composite.clickThroughCustomTargetEnabled}>\n            <Input\n              value={composite.clickThroughCustomTarget}\n              placeholder=\"_self\"\n              disabled={!composite.showComposite}\n              onChange={(e) => setComposite({ ...composite, clickThroughCustomTarget: e.currentTarget.value })}\n            />\n          </Field>\n          <Field disabled={!composite.showComposite}>\n            <Button\n              key=\"addMetric\"\n              variant=\"primary\"\n              icon=\"plus\"\n              disabled={!composite.showComposite}\n              onClick={addMetric}\n            >\n              Add Metric\n            </Button>\n          </Field>\n          {composite.metrics &&\n            composite.metrics.map((item: CompositeMetric, index: number) => {\n              // generate ID if it doesn't exist\n              if (!item.ID) {\n                item.ID = UUIDv4();\n              }\n              return (\n                <CompositeMetricItem\n                  key={`composite-metric-id-${item.ID}`}\n                  metric={item}\n                  index={index}\n                  disabled={!composite.showComposite}\n                  updateMetric={updateMetric}\n                  updateMetricAlias={updateMetricAlias}\n                  removeMetric={removeMetric}\n                  context={props.context}\n                />\n              );\n            })}\n        </FieldSet>\n      </Card.Meta>\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"showComposite\"\n          name={composite.showComposite ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Composite\"\n          onClick={() => setComposite({ ...composite, showComposite: !composite.showComposite })}\n        />\n        <IconButton key=\"copyComposite\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteComposite\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Composite\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, {useState} from 'react';\nimport {StandardEditorProps} from '@grafana/data';\nimport {Button, Collapse, Field, FieldSet, Input, Switch} from '@grafana/ui';\n\nimport {CompositeItem} from './CompositeItem';\nimport {CompositeItemTracker, CompositeItemType, CompositeMetric, DisplayModes} from './types';\nimport {v4 as UUIdv4} from 'uuid';\n\nexport interface CompositeEditorSettings {\n  composites: CompositeItemType[];\n  enabled: boolean;\n  animationSpeed: string;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, CompositeEditorSettings> {}\n\nexport const CompositeEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [settings] = useState(context.options.compositeConfig);\n  const [animationSpeed, _setAnimationSpeed] = useState(context.options.compositeConfig.animationSpeed);\n  const [compositesEnabled, _setCompositesEnabled] = useState(context.options.compositeConfig.enabled);\n  const [tracker, _setTracker] = useState((): CompositeItemTracker[] => {\n    if (settings.composites) {\n      const items: CompositeItemTracker[] = [];\n      settings.composites.forEach((value: CompositeItemType, index: number) => {\n        items[index] = {\n          composite: value,\n          order: index,\n          ID: UUIdv4(),\n        };\n      });\n      return items;\n    } else {\n      return [] as CompositeItemTracker[];\n    }\n  });\n\n  const setAnimationSpeed = (val: any) => {\n    //context.options.compositeConfig.animationSpeed = val;\n    _setAnimationSpeed(val);\n    settings.animationSpeed = val;\n    onChange(settings);\n  };\n  const setCompositesEnabled = (val: any) => {\n    //context.options.compositeConfig.enabled = val;\n    _setCompositesEnabled(val);\n    settings.enabled = val;\n    onChange(settings);\n  };\n  const setTracker = (v: CompositeItemTracker[]) => {\n    _setTracker(v);\n    // update the panel config (only the composites themselves, not the tracker)\n    const allComposites: CompositeItemType[] = [];\n    v.forEach((element) => {\n      allComposites.push(element.composite);\n    });\n    const compositeConfig = {\n      composites: allComposites,\n      animationSpeed: settings.animationSpeed,\n      enabled: settings.enabled,\n    };\n    onChange(compositeConfig as any);\n  };\n\n  // tracks composite card collapse state\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      return [];\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].composite;\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `${original.name} Copy`,\n      label: `${original.name} Copy`,\n      order: order,\n      isTemplated: original.isTemplated,\n      displayMode: original.displayMode,\n      enabled: original.enabled,\n      showName: original.showName,\n      showValue: original.showValue,\n      showComposite: original.showComposite,\n      showMembers: original.showMembers,\n      metrics: original.metrics,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      clickThroughCustomTargetEnabled: original.clickThroughCustomTargetEnabled,\n      clickThroughCustomTarget: original.clickThroughCustomTarget\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  const updateComposite = (index: number, value: CompositeItemType) => {\n    tracker[index].composite = value;\n    setTracker([...tracker]);\n  };\n\n  const removeComposite = (compositeIndex: number) => {\n    // find the composite by the compositeIndex\n    const allComposites = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allComposites.length; i++) {\n      if (allComposites[i].order === compositeIndex) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allComposites.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allComposites.length; i++) {\n      allComposites[i].order = i;\n    }\n    setTracker([...allComposites]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const toggleState = [...isOpen];\n    toggleState[index] = !toggleState[index];\n    setIsOpen([...toggleState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `Composite-${order}`,\n      label: `Composite-${order}`,\n      showName: true,\n      showValue: true,\n      showMembers: false,\n      showComposite: true,\n      isTemplated: false,\n      enabled: true,\n      metrics: [] as CompositeMetric[],\n      displayMode: DisplayModes[0].value,\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      clickThroughCustomTargetEnabled: false,\n      clickThroughCustomTarget: '',\n      order: order\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <FieldSet>\n        <Field label=\"Enable Composites\" description=\"Enable/Disable Composites Globally\">\n          <Switch\n            transparent={true}\n            value={compositesEnabled}\n            onChange={() => setCompositesEnabled(!compositesEnabled)}\n          />\n        </Field>\n        <Field label=\"Animation Speed (ms)\" description=\"Animation Speed in milliseconds\" disabled={!settings.enabled}>\n          <Input\n            value={animationSpeed}\n            placeholder=\"500\"\n            onChange={(e: any) => setAnimationSpeed(e.currentTarget.value)}\n          />\n        </Field>\n      </FieldSet>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" disabled={!settings.enabled} onClick={addItem}>\n        Add Composite\n      </Button>\n      {tracker &&\n        tracker.map((item: CompositeItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${item.ID}`}\n              label={item.composite.name}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <CompositeItem\n                key={`composite-item-index-${item.ID}`}\n                ID={item.ID}\n                composite={item.composite}\n                enabled={item.composite.enabled}\n                setter={updateComposite}\n                remover={removeComposite}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { Field } from '@grafana/ui';\n\nimport { PolystatThreshold } from './types';\nimport { ThresholdsEditor } from './ThresholdsEditor';\n\nexport interface GlobalThresholdEditorSettings {}\n\ninterface Props extends StandardEditorProps<string | string[] | null, GlobalThresholdEditorSettings> {}\n\nexport const GlobalThresholdEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [globalThresholds, setGlobalThresholds] = useState(context.options.globalThresholdsConfig);\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setGlobalThresholds(val);\n    onChange(val as any);\n  };\n\n  return (\n    <>\n      <Field>\n        <ThresholdsEditor thresholds={globalThresholds} setter={setThresholds} />\n      </Field>\n    </>\n  );\n};\n","import { PanelModel, convertOldAngularValueMappings, ValueMapping } from '@grafana/data';\nimport { config } from \"@grafana/runtime\";\nimport { satisfies, coerce } from \"semver\";\nimport { CompositeItemType, CompositeMetric } from 'components/composites/types';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatThreshold } from './components/thresholds/types';\n\nimport { DisplayModes, FontFamilies, PolygonShapes, PolystatOptions } from './components/types';\ninterface AngularPolystatOptions {\n  animationSpeed: number;\n  columnAutoSize: boolean;\n  columns: string;\n  defaultClickThrough: string;\n  defaultClickThroughNewTab: boolean;\n  defaultClickThroughSanitize: boolean;\n  displayLimit: number;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  fontAutoColor: boolean;\n  fontAutoScale: boolean;\n  fontSize: number;\n  fontType: string,\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalOperatorName: string;\n  globalThresholds: AngularThreshold[];\n  globalUnitFormat: string;\n  gradientEnabled: boolean;\n  hexagonSortByDirection: number;\n  hexagonSortByField: string;\n  maxMetrics: number;\n  polygonBorderColor: string;\n  polygonBorderSize: number;\n  polygonGlobalFillColor: string;\n  radius: string;\n  radiusAutoSize: boolean;\n  regexPattern: string;\n  rowAutoSize: boolean;\n  rows: string;\n  shape: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipEnabled: boolean;\n  tooltipFontSize: number;\n  tooltipFontType: string,\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortField: string;\n  tooltipTimestampEnabled: boolean;\n  valueEnabled: boolean;\n}\n\nexport interface AngularThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface AngularOverride {\n  clickThrough: string;\n  colors: string[];\n  decimals: number;\n  enabled: true;\n  label: string;\n  metricName: string;\n  newTabEnabled: boolean;\n  operatorName: string;\n  prefix: string;\n  sanitizeURLEnabled: boolean;\n  suffix: string;\n  unitFormat: string;\n  thresholds: AngularThreshold[];\n}\nexport interface AngularSavedOverrides {\n  savedOverrides: AngularOverride[];\n}\n\nexport interface CompositeMembers {\n  seriesName: string;\n}\nexport interface CompositeItem {\n  animateMode: string;\n  clickThrough: string;\n  compositeName: string;\n  displayName: string;\n  enabled: boolean;\n  hideMembers: boolean;\n  label: string;\n  members: CompositeMembers[];\n  newTabEnabled: boolean;\n  sanitizeURLEnabled: boolean;\n  sanitizedURL: string;\n  showName: boolean;\n  showValue: boolean;\n  thresholdLevel: number;\n}\n\nexport interface AngularSavedComposites {\n  savedComposites: CompositeItem[];\n}\n\n/**\n * This is called when the panel is imported or reloaded\n */\nexport const PolystatPanelMigrationHandler = (panel: PanelModel<PolystatOptions>): Partial<PolystatOptions> => {\n  //@ts-ignore\n  if (!panel.polystat) {\n    // not angular, just return the options if currently set\n    if (!panel.options) {\n      // This happens on the first load or when migrating from angular\n      return {} as any;\n    }\n    // have settings, return them unchanged\n    return panel.options;\n  }\n  //@ts-ignore\n  const newDefaults = migrateDefaults(panel.polystat);\n  let options = newDefaults;\n  //@ts-ignore\n  delete panel.polystat;\n  //@ts-ignore\n  const migratedOverrides = migrateOverrides(panel);\n  //@ts-ignore\n  const migratedComposites = migrateComposites(panel, newDefaults.compositeConfig.animationSpeed);\n  //console.log(JSON.stringify(newDefaults, null, 2));\n  options.compositeConfig = migratedComposites.compositeConfig;\n  options.overrideConfig = migratedOverrides.overrideConfig;\n  // convert range and value maps\n  const newMaps = migrateValueAndRangeMaps(panel);\n  panel.fieldConfig = {\n    defaults: {\n      mappings: newMaps,\n    },\n    overrides: [],\n  };\n  //@ts-ignore\n  delete panel.mappingType;\n  //@ts-ignore\n  delete panel.rangeMaps;\n  //@ts-ignore\n  delete panel.valueMaps;\n  // merge defaults\n  //@ts-ignore\n  delete panel.savedComposites;\n  //@ts-ignore\n  delete panel.savedOverrides;\n  //@ts-ignore\n  delete panel.colors;\n\n  // clean up undefined\n  // @ts-ignore\n  Object.keys(panel).forEach((key) => (panel[key] === undefined ? delete panel[key] : {}));\n  // @ts-ignore\n  Object.keys(options).forEach((key) => (options[key] === undefined ? delete options[key] : {}));\n\n  return options;\n};\n\n// split into three parts\n// config normally found in \"polystat\" section\n// then \"savedOverrides\" and \"savedComposites\"\n// a \"good\" react config just has an \"options\" section\nexport const migrateDefaults = (angular: AngularPolystatOptions) => {\n  let options: PolystatOptions = {\n    autoSizeColumns: true,\n    autoSizeRows: true,\n    autoSizePolygons: true,\n    ellipseCharacters: 18,\n    ellipseEnabled: false,\n    globalAutoScaleFonts: true,\n    globalClickthrough: '',\n    globalClickthroughNewTabEnabled: false,\n    globalClickthroughSanitizedEnabled: false,\n    globalClickthroughCustomTargetEnabled: false,\n    globalClickthroughCustomTarget: '',\n    globalDecimals: 2,\n    globalDisplayMode: 'all',\n    globalDisplayTextTriggeredEmpty: '',\n    globalFillColor: '',\n    globalFontSize: 8,\n    globalGradientsEnabled: false,\n    globalOperator: 'mean',\n    globalPolygonBorderSize: 1,\n    globalPolygonBorderColor: '',\n    globalPolygonSize: 50,\n    globalRegexPattern: '',\n    globalShape: PolygonShapes.HEXAGON_POINTED_TOP,\n    globalShowValueEnabled: true,\n    globalShowTooltipColumnHeadersEnabled: true,\n    globalTextFontColor: '#000000',\n    globalTextFontAutoColor: '#000000',\n    globalTextFontAutoColorEnabled: false,\n    globalTextFontFamily: FontFamilies.INTER,\n    globalThresholdsConfig: [],\n    globalTooltipsEnabled: true,\n    globalTooltipsShowTimestampEnabled: true,\n    globalTooltipsFontFamily: FontFamilies.INTER,\n    globalUnitFormat: '',\n    layoutDisplayLimit: 100,\n    layoutNumColumns: 8,\n    layoutNumRows: 8,\n    panelHeight: undefined,\n    panelWidth: undefined,\n    panelId: 0,\n    radius: 100,\n    renderTime: undefined,\n    sortByField: '',\n    sortByDirection: 0,\n    overrideConfig: {\n      overrides: [],\n    },\n    compositeGlobalAliasingEnabled: false,\n    compositeConfig: {\n      animationSpeed: '',\n      composites: [],\n      enabled: false,\n    },\n    tooltipPrimarySortDirection: 0,\n    tooltipPrimarySortByField: '',\n    tooltipSecondarySortDirection: 0,\n    tooltipSecondarySortByField: '',\n    tooltipDisplayMode: 'all',\n    tooltipDisplayTextTriggeredEmpty: '',\n  };\n\n  if (angular.animationSpeed) {\n    if (options.compositeConfig) {\n      options.compositeConfig.animationSpeed = angular.animationSpeed.toString();\n    }\n  }\n  if (angular.columnAutoSize) {\n    options.autoSizeColumns = angular.columnAutoSize;\n  }\n  if (angular.columns) {\n    let numColumns = parseInt(angular.columns, 10);\n    if (isNaN(numColumns) || numColumns < 1) {\n      numColumns = 8;\n    }\n    options.layoutNumColumns = numColumns;\n  }\n  if (angular.defaultClickThrough) {\n    options.globalClickthrough = angular.defaultClickThrough;\n  }\n  if (angular.defaultClickThroughNewTab) {\n    options.globalClickthroughNewTabEnabled = angular.defaultClickThroughNewTab;\n  }\n  if (angular.defaultClickThroughSanitize) {\n    options.globalClickthroughSanitizedEnabled = angular.defaultClickThroughSanitize;\n  }\n  if (angular.displayLimit) {\n    options.layoutDisplayLimit = angular.displayLimit;\n  }\n  if (angular.ellipseCharacters) {\n    options.ellipseCharacters = angular.ellipseCharacters;\n  }\n  if (angular.ellipseEnabled) {\n    options.ellipseEnabled = angular.ellipseEnabled;\n  }\n  if (angular.fontAutoColor) {\n    options.globalTextFontAutoColorEnabled = angular.fontAutoColor;\n  }\n  if (angular.fontAutoScale) {\n    options.globalAutoScaleFonts = angular.fontAutoScale;\n  }\n  if (angular.fontSize) {\n    options.globalFontSize = angular.fontSize;\n  }\n  options.globalTextFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTextFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.globalDecimals) {\n    options.globalDecimals = angular.globalDecimals;\n  }\n  if (angular.globalDisplayMode) {\n    options.globalDisplayMode = angular.globalDisplayMode;\n  }\n  if (angular.globalDisplayTextTriggeredEmpty) {\n    options.globalDisplayTextTriggeredEmpty = angular.globalDisplayTextTriggeredEmpty;\n  }\n  if (angular.globalOperatorName) {\n    options.globalOperator = convertOperators(angular.globalOperatorName);\n  }\n  if (angular.globalThresholds) {\n    options.globalThresholdsConfig = [];\n    for (const threshold of angular.globalThresholds) {\n      const migratedThreshold: PolystatThreshold = {\n        value: threshold.value,\n        state: threshold.state,\n        color: threshold.color,\n      };\n      options.globalThresholdsConfig.push(migratedThreshold);\n    }\n  }\n\n  if (angular.globalUnitFormat) {\n    options.globalUnitFormat = angular.globalUnitFormat;\n  }\n  if (angular.gradientEnabled) {\n    options.globalGradientsEnabled = angular.gradientEnabled;\n  }\n  if (angular.hexagonSortByDirection) {\n    options.sortByDirection = angular.hexagonSortByDirection;\n  }\n  if (angular.hexagonSortByField) {\n    options.sortByField = angular.hexagonSortByField;\n  }\n  if (angular.polygonBorderColor) {\n    options.globalPolygonBorderColor = angular.polygonBorderColor;\n  }\n  if (angular.polygonBorderSize) {\n    options.globalPolygonBorderSize = angular.polygonBorderSize;\n  }\n  if (angular.polygonGlobalFillColor) {\n    options.globalFillColor = angular.polygonGlobalFillColor;\n  }\n  if (angular.radius) {\n    let radius = parseFloat(angular.radius);\n    if (isNaN(radius) || radius < 0) {\n      radius = 0;\n    }\n    options.radius = radius;\n  }\n  if (angular.radiusAutoSize) {\n    options.autoSizePolygons = angular.radiusAutoSize;\n  }\n  if (angular.regexPattern) {\n    options.globalRegexPattern = angular.regexPattern;\n  }\n  if (angular.rowAutoSize) {\n    options.autoSizeRows = angular.rowAutoSize;\n  }\n  if (angular.rows) {\n    let numRows = parseInt(angular.rows, 10);\n    if (isNaN(numRows) || numRows < 1) {\n      numRows = 8;\n    }\n    options.layoutNumRows = numRows;\n  }\n\n  if (angular.shape) {\n    switch (angular.shape) {\n      case 'circle':\n        options.globalShape = PolygonShapes.CIRCLE;\n        break;\n      case 'square':\n        options.globalShape = PolygonShapes.SQUARE;\n        break;\n      case 'hexagon_pointed_top':\n      default:\n        options.globalShape = PolygonShapes.HEXAGON_POINTED_TOP;\n    }\n  }\n  if (angular.tooltipDisplayMode) {\n    options.tooltipDisplayMode = angular.tooltipDisplayMode;\n  }\n  if (angular.tooltipDisplayTextTriggeredEmpty) {\n    options.tooltipDisplayTextTriggeredEmpty = angular.tooltipDisplayTextTriggeredEmpty;\n  }\n  if (angular.tooltipEnabled) {\n    options.globalTooltipsEnabled = angular.tooltipEnabled;\n  }\n  if (angular.tooltipPrimarySortDirection) {\n    options.tooltipPrimarySortDirection = angular.tooltipPrimarySortDirection;\n  }\n  if (angular.tooltipPrimarySortField) {\n    options.tooltipPrimarySortByField = angular.tooltipPrimarySortField;\n  }\n  if (angular.tooltipSecondarySortDirection) {\n    options.tooltipSecondarySortDirection = angular.tooltipSecondarySortDirection;\n  }\n  if (angular.tooltipSecondarySortField) {\n    options.tooltipSecondarySortByField = angular.tooltipSecondarySortField;\n  }\n  if (angular.tooltipTimestampEnabled) {\n    options.globalTooltipsShowTimestampEnabled = angular.tooltipTimestampEnabled;\n  }\n  options.globalTooltipsFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTooltipsFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.valueEnabled) {\n    options.globalShowValueEnabled = angular.valueEnabled;\n  }\n\n  return options;\n};\n\nexport const migrateOverrides = (angular: AngularSavedOverrides) => {\n  let options = {} as any;\n\n  options.overrideConfig = {\n    overrides: [],\n  };\n  // Overrides\n  if (angular.savedOverrides?.length) {\n    let order = 0;\n    for (const seriesOverride of angular.savedOverrides) {\n      let anOverride: OverrideItemType = {\n        label: '',\n        metricName: '',\n        alias: '',\n        thresholds: [],\n        colors: [],\n        unitFormat: '',\n        decimals: '',\n        scaledDecimals: 0,\n        enabled: true,\n        operatorName: 'avg',\n        prefix: '',\n        suffix: '',\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        clickThroughCustomTargetEnabled: false,\n        clickThroughCustomTarget: '',\n        order: order,\n      };\n      for (const p of Object.keys(seriesOverride)) {\n        // @ts-ignore\n        const v = seriesOverride[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'clickThrough':\n            anOverride.clickThrough = v;\n            break;\n          case 'colors':\n            anOverride.colors = v;\n            break;\n          case 'decimals':\n            anOverride.decimals = v;\n            break;\n          case 'enabled':\n            anOverride.enabled = v;\n            break;\n          case 'label':\n            anOverride.label = v;\n            break;\n          case 'metricName':\n            anOverride.metricName = v;\n            break;\n          case 'newTabEnabled':\n            anOverride.clickThroughOpenNewTab = v;\n            break;\n          case 'operatorName':\n            anOverride.operatorName = convertOperators(v);\n            break;\n          case 'prefix':\n            anOverride.prefix = v;\n            break;\n          case 'sanitizeURLEnabled':\n            anOverride.clickThroughSanitize = v;\n            break;\n          case 'suffix':\n            anOverride.suffix = v;\n            break;\n          case 'thresholds':\n            /*\n              \"color\": \"#e5ac0e\",\n              \"state\": 1,\n              \"value\": 78\n              */\n            anOverride.thresholds = [];\n            for (const threshold of v) {\n              const migratedThreshold: PolystatThreshold = {\n                value: threshold.value,\n                state: threshold.state,\n                color: threshold.color,\n              };\n              anOverride.thresholds.push(migratedThreshold);\n            }\n            break;\n          case 'unitFormat':\n            anOverride.unitFormat = v;\n            break;\n          default:\n            console.log('Ignore override migration:', p, v);\n        }\n      }\n      options.overrideConfig.overrides.push(anOverride);\n      order++;\n    }\n  }\n  return options;\n};\n\nexport const convertOperators = (operator: string) => {\n  switch (operator) {\n    case 'avg':\n      return 'mean';\n    case 'current':\n      return 'last'; // lastNotNull?\n    case 'time_step':\n      return 'step';\n    case 'total':\n      return 'sum';\n    default:\n      return operator;\n  }\n};\n\nexport const migrateValueAndRangeMaps = (panel: any) => {\n  // value maps first\n  panel.mappingType = 1;\n  let newValueMappings: ValueMapping[] = [];\n  if (panel.valueMaps !== undefined) {\n    newValueMappings = convertOldAngularValueMappings(panel);\n  }\n  // range maps second\n  panel.mappingType = 2;\n  let newRangeMappings: ValueMapping[] = [];\n  if (panel.rangeMaps !== undefined) {\n    newRangeMappings = convertOldAngularValueMappings(panel);\n  }\n  // append together\n  const newMappings = newValueMappings.concat(newRangeMappings);\n  // get uniques only\n  return [...new Map(newMappings.map((v) => [JSON.stringify(v), v])).values()];\n};\n\nexport const migrateComposites = (angular: AngularSavedComposites, animationSpeed: string) => {\n  let options = {} as any;\n  // Composites\n  options.compositeConfig = {\n    composites: [],\n    enabled: true,\n    animationSpeed: animationSpeed,\n  };\n\n  if (angular.savedComposites?.length) {\n    let index = 0;\n    for (const composite of angular.savedComposites) {\n      let aComposite: CompositeItemType = {\n        name: `COMPOSITE-${index}`,\n        label: `COMPOSITE-${index}`,\n        order: index,\n        isTemplated: false,\n        displayMode: DisplayModes[0].value,\n        enabled: true,\n        showName: true,\n        showValue: true,\n        showComposite: true,\n        showMembers: false,\n        metrics: [],\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        clickThroughCustomTargetEnabled: false,\n        clickThroughCustomTarget: ''\n      };\n      index++;\n      for (const p of Object.keys(composite)) {\n        // @ts-ignore\n        const v = composite[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'animateMode':\n            if (v !== 'all') {\n              aComposite.displayMode = DisplayModes[1].value;\n            }\n            break;\n          case 'clickThrough':\n            aComposite.clickThrough = v;\n            break;\n          case 'compositeName':\n            aComposite.name = v;\n            break;\n          // Ignore\n          case 'displayName':\n            break;\n          case 'enabled':\n            // this is now .showComposite\n            aComposite.showComposite = v;\n            break;\n          case 'hideMembers':\n            aComposite.showMembers = !v;\n            break;\n          case 'label':\n            aComposite.label = v;\n            break;\n          case 'members':\n            /*\n              {\n                \"$$hashKey\": \"object:150\",\n                \"seriesName\": \"/P2/\"\n              }\n              */\n            let memberIndex = 0;\n            let members: CompositeMetric[] = [];\n            // not sure about this...\n            for (const aMember of Object.keys(v)) {\n              const x = v[aMember];\n              let member: CompositeMetric = {\n                seriesMatch: x.seriesName,\n                order: memberIndex,\n              };\n              members.push(member);\n              memberIndex++;\n            }\n            aComposite.metrics = members;\n            break;\n          case 'newTabEnabled':\n            aComposite.clickThroughOpenNewTab = v;\n            break;\n          case 'sanitizeURLEnabled':\n            aComposite.clickThroughSanitize = v;\n            break;\n          // Ignore\n          case 'sanitizedURL':\n            break;\n          case 'showName':\n            aComposite.showName = v;\n            break;\n          case 'showValue':\n            aComposite.showValue = v;\n            break;\n          default:\n            console.log('Ignore composite migration:', p, v);\n        }\n      }\n      options.compositeConfig.composites.push(aComposite);\n    }\n  }\n  return options;\n};\n\n/**\n * This is called when the panel changes from another panel\n *\n * not currently used\n */\nexport const PolystatPanelChangedHandler = (\n  panel: PanelModel<Partial<PolystatOptions>> | any,\n  prevPluginId: string,\n  prevOptions: any\n) => {\n  // Changing from angular polystat panel\n  if (prevPluginId === 'polystat' && prevOptions.angular) {\n    console.log('detected old panel');\n    const oldOpts = prevOptions.angular;\n    console.log(JSON.stringify(oldOpts));\n  }\n\n  return {};\n};\n\n// Roboto font was removed Dec 1, 2022, and releases after that date should not attempt to use it\nexport const hasRobotoFont = () => {\n  const version = coerce(config.buildInfo.version);\n  if (version !== null) {\n    if (satisfies(version, \"<9.4.0\")) {\n      return true;\n    }\n  }\n  return false;\n};\n","import { FieldConfigProperty, PanelPlugin } from '@grafana/data';\n\nimport {\n  DisplayModes,\n  FontFamilyOptions,\n  FontFamilyOptionsLegacy,\n  OperatorOptions,\n  PolygonNamedShapes,\n  PolystatOptions,\n  SortByFieldOptions,\n  SortOptions,\n} from './components/types';\nimport { CompositeItemType } from './components/composites/types';\nimport { OverrideEditor } from './components/overrides/OverrideEditor';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatPanel } from './components/PolystatPanel';\nimport {\n  GLOBAL_FILL_COLOR_RGBA,\n  GLOBAL_BORDER_COLOR_RGBA,\n  GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n  GLOBAL_TEXT_FONT_FAMILY,\n  GLOBAL_TOOLTIP_FONT_FAMILY,\n  GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n  GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n} from './components/defaults';\nimport { CompositeEditor } from './components/composites/CompositeEditor';\nimport { PolystatThreshold } from './components/thresholds/types';\nimport { GlobalThresholdEditor } from './components/thresholds/GlobalThresholdEditor';\nimport { PolystatDataSuggestionsSupplier } from './components/suggestions';\nimport { hasRobotoFont, PolystatPanelMigrationHandler } from './migrations';\n\n\nexport const plugin = new PanelPlugin<PolystatOptions>(PolystatPanel)\n  .setMigrationHandler(PolystatPanelMigrationHandler)\n  .useFieldConfig({\n    disableStandardOptions: [\n      FieldConfigProperty.Thresholds,\n      FieldConfigProperty.Color,\n      FieldConfigProperty.Decimals,\n      FieldConfigProperty.DisplayName,\n      FieldConfigProperty.Max,\n      FieldConfigProperty.Min,\n      FieldConfigProperty.Links,\n      FieldConfigProperty.NoValue,\n      FieldConfigProperty.Unit,\n    ],\n    standardOptions: {\n      [FieldConfigProperty.Mappings]: {},\n    },\n  })\n  .setPanelOptions((builder) => {\n    builder\n      .addBooleanSwitch({\n        name: 'Auto Size Columns',\n        path: 'autoSizeColumns',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set columns based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumColumns',\n        name: 'Columns',\n        description: 'Use specific number of columns',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => !c.autoSizeColumns,\n      })\n      .addBooleanSwitch({\n        name: 'Auto Size Rows',\n        path: 'autoSizeRows',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set rows based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumRows',\n        name: 'Rows',\n        description: 'Use specific number of rows',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => !c.autoSizeRows,\n      })\n      .addNumberInput({\n        path: 'layoutDisplayLimit',\n        name: 'Display Limit',\n        description: 'Maximum number of polygons to display (0 for unlimited)',\n        defaultValue: 100,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Layout'],\n      })\n\n      .addBooleanSwitch({\n        name: 'Auto Size Polygons',\n        path: 'autoSizePolygons',\n        defaultValue: true,\n        category: ['Sizing'],\n        description: 'Automatically sets size of polygon for best fit',\n      })\n      .addNumberInput({\n        name: 'Polygon Size in pixels',\n        path: 'globalPolygonSize',\n        description: 'Use specific size for polygons',\n        defaultValue: 25,\n        settings: {\n          placeHolder: 'Auto',\n          min: 1,\n        },\n        category: ['Sizing'],\n        showIf: (c) => !c.autoSizePolygons,\n      })\n      .addNumberInput({\n        name: 'Border Size',\n        path: 'globalPolygonBorderSize',\n        description: 'Border size for each polygon',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n        },\n        category: ['Sizing'],\n      })\n      // font selection\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => !hasRobotoFont(),\n      })\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont(),\n      })\n      .addBooleanSwitch({\n        name: 'Auto Scale Fonts',\n        path: 'globalAutoScaleFonts',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Automatically sets label and value font size based on size of polygon',\n      })\n      .addNumberInput({\n        name: 'Font Size',\n        path: 'globalFontSize',\n        defaultValue: 12,\n        settings: {\n          min: 0,\n        },\n        category: ['Text'],\n        description: 'Default font size to use when Auto is disabled',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      // font color\n      // auto set font color\n      .addBooleanSwitch({\n        name: 'Automate Font Color',\n        path: 'globalTextFontAutoColorEnabled',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Sets font color to match theme',\n      })\n      .addColorPicker({\n        name: 'Font Color',\n        path: 'globalTextFontColor',\n        category: ['Text'],\n        defaultValue: '#000000',\n        description: 'Font color to use for all text on polygon',\n        showIf: (c) => !c.globalTextFontAutoColorEnabled,\n      })\n\n      // ellipse enabled\n      .addBooleanSwitch({\n        name: 'Use Ellipses',\n        path: 'ellipseEnabled',\n        defaultValue: false,\n        category: ['Text'],\n        description: 'Use Ellipses when character count is exceeded',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      // ellipse num chars\n      .addNumberInput({\n        name: 'Ellipse Characters',\n        path: 'ellipseCharacters',\n        defaultValue: 18,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Text'],\n        description: 'Default number of characters to display before showing ellipses',\n        showIf: (c) => c.ellipseEnabled && !c.globalAutoScaleFonts,\n      })\n\n      // Sorting\n      .addSelect({\n        path: 'sortByDirection',\n        name: 'Sort By Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Sorting'],\n        defaultValue: 1,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'sortByField',\n        name: 'Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'name',\n        category: ['Sorting'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // tooltips\n      .addBooleanSwitch({\n        name: 'Enable Tooltips',\n        path: 'globalTooltipsEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Provides tooltips for each polygon',\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => !hasRobotoFont(),\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont(),\n      })\n      .addBooleanSwitch({\n        name: 'Show timestamp',\n        path: 'globalTooltipsShowTimestampEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show timestamp at bottom of tooltip',\n      })\n      // show tooltip column headers\n      .addBooleanSwitch({\n        name: 'Show Column Headers',\n        path: 'globalShowTooltipColumnHeadersEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show Column headers on tooltip'\n      })\n      // display modes\n      .addSelect({\n        path: 'tooltipDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Tooltips'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'tooltipDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed by tooltip when there are no triggered thresholds and tooltip display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Tooltips'],\n      })\n      // primary sort direction\n      .addSelect({\n        path: 'tooltipPrimarySortDirection',\n        name: 'Primary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipPrimarySortByField',\n        name: 'Primary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'thresholdLevel',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // secondary sort direction\n      .addSelect({\n        path: 'tooltipSecondarySortDirection',\n        name: 'Secondary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipSecondarySortByField',\n        name: 'Secondary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'value',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // globals generic\n      //\n      // display mode\n      .addSelect({\n        path: 'globalDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Global'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'globalDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed in polygon when there are no triggered thresholds and global display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Global'],\n      })\n\n      // show value\n      .addBooleanSwitch({\n        name: 'Show Value',\n        path: 'globalShowValueEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Show value on the polygon',\n      })\n\n      // shape\n      .addSelect({\n        name: 'Shape',\n        path: 'globalShape',\n        description: 'Shape of polygon',\n        category: ['Global'],\n        defaultValue: PolygonNamedShapes[0].value,\n        settings: {\n          options: PolygonNamedShapes,\n        },\n      })\n\n      // gradient colors enabled\n      .addBooleanSwitch({\n        name: 'Use Color Gradients',\n        path: 'globalGradientsEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Applies gradient color effect to all polygons',\n      })\n      .addColorPicker({\n        name: 'Global Fill Color',\n        path: 'globalFillColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_FILL_COLOR_RGBA,\n        description: 'Color to use when no overrides or thresholds apply to polygon',\n      })\n\n      // border color\n      .addColorPicker({\n        name: 'Global Border Color',\n        path: 'globalPolygonBorderColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_BORDER_COLOR_RGBA,\n        description: 'Color of polygon border',\n      })\n      // unit\n      .addUnitPicker({\n        name: 'Unit',\n        path: 'globalUnitFormat',\n        defaultValue: 'short',\n        category: ['Global'],\n        description: 'Use this unit format when it is not specified in overrides or detected in data',\n      })\n      // stat (global operator)\n      .addSelect({\n        name: 'Stat',\n        path: 'globalOperator',\n        description: 'Statistic to display',\n        category: ['Global'],\n        defaultValue: OperatorOptions[0].value,\n        settings: {\n          options: OperatorOptions,\n        },\n      })\n      // decimals\n      .addNumberInput({\n        name: 'Decimals',\n        path: 'globalDecimals',\n        description: 'Display specified number of decimals',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Global'],\n      })\n      .addCustomEditor({\n        name: 'Global Thresholds',\n        id: 'globalThresholdsConfig',\n        path: 'globalThresholdsConfig',\n        description: 'Default thresholds to be applied to all metrics that do not have an override',\n        editor: GlobalThresholdEditor,\n        defaultValue: [] as PolystatThreshold[],\n        category: ['Global'],\n      })\n      // default clickthrough\n      .addTextInput({\n        name: 'Default Clickthrough',\n        path: 'globalClickthrough',\n        description: 'URL to use when none are defined by overrides or composites',\n        category: ['Global'],\n        defaultValue: '',\n      })\n      // sanitize clickthrough\n      .addBooleanSwitch({\n        name: 'Sanitize URL',\n        path: 'globalClickthroughSanitizedEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Sanitizes clickthrough url',\n      })\n      // open in new tab\n      .addBooleanSwitch({\n        name: 'Open URL In New Tab',\n        path: 'globalClickthroughNewTabEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Opens clickthrough in a new tab',\n      })\n      .addBooleanSwitch({\n        name: 'Enable Custom URL Target',\n        path: 'globalClickthroughCustomTargetEnabled',\n        defaultValue: false,\n        category: ['Global'],\n        description: 'Use custom target for global clickthrough (this overrides the new tab setting above). Typical values are: _blank|_self|_parent|_top|framename',\n        showIf: (c) => !c.globalClickthroughNewTabEnabled,\n      })\n      .addTextInput({\n        name: 'Custom URL Target',\n        path: 'globalClickthroughCustomTarget',\n        description:\n          'Provide a different target to be set in the target attribute of the clickthrough. Typical values are: _blank|_self|_parent|_top|framename',\n        category: ['Global'],\n        defaultValue: '',\n        showIf: (c) => c.globalClickthroughCustomTargetEnabled,\n      })\n\n      // aliasing\n      .addTextInput({\n        name: 'Global Regex',\n        path: 'globalRegexPattern',\n        description:\n          'The values in the specified column are filtered and displayed according to this regular expression. Ex: String: Url|broadcom.com|mirror|location-1 regex: /Url&#92;|(.*?)&#92;|/ Output: broadcom.com',\n        category: ['Global Aliasing'],\n        defaultValue: '',\n      })\n      .addCustomEditor({\n        name: 'Overrides',\n        id: 'overrideConfig',\n        path: 'overrideConfig',\n        description: 'Overrides for multiple metrics',\n        editor: OverrideEditor,\n        defaultValue: {\n          overrides: [] as OverrideItemType[],\n        },\n        category: ['Overrides'],\n      })\n      // allow enabling / disabling global aliasing for composite hexagon names\n      .addBooleanSwitch({\n        name: 'Composite Global Aliasing',\n        path: 'compositeGlobalAliasingEnabled',\n        defaultValue: false,\n        description: 'Enable / Disable composite global aliasing',\n        category: ['Composites'],\n      })\n      .addCustomEditor({\n        name: 'Composites',\n        id: 'compositeConfig',\n        path: 'compositeConfig',\n        description: 'Composites allow you to roll up multiple metrics into a single polygon',\n        editor: CompositeEditor,\n        defaultValue: {\n          composites: [] as CompositeItemType[],\n          enabled: true,\n          animationSpeed: '1500',\n        },\n        category: ['Composites'],\n      });\n  })\n  .setSuggestionsSupplier(new PolystatDataSuggestionsSupplier());\n","import { VisualizationSuggestionsBuilder } from '@grafana/data';\nimport { PolystatOptions } from './types';\n\nexport class PolystatDataSuggestionsSupplier {\n  getSuggestionsForData(builder: VisualizationSuggestionsBuilder) {\n    const { dataSummary: ds } = builder;\n\n    if (!ds.hasData) {\n      return;\n    }\n    if (!ds.hasNumberField) {\n      return;\n    }\n\n    const list = builder.getListAppender<PolystatOptions, {}>({\n      name: 'Polystat',\n      pluginId: 'grafana-polystat-panel',\n      options: {},\n    });\n\n    list.append({\n      name: 'Polystat',\n    });\n  }\n}\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","get","self","doUse","node","hit","value","isStale","del","now","Date","unshiftNode","maxAge","diff","trim","walker","tail","prev","delete","removeNode","Entry","constructor","this","forEachStep","fn","thisp","undefined","options","max","TypeError","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","head","next","keys","toArray","map","k","values","Map","dump","v","e","filter","h","dumpLru","set","len","has","item","unshift","peek","pop","load","arr","l","expiresAt","prune","ANY","Comparator","comp","parseOptions","loose","split","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","SemVer","test","er","cmp","intersects","Range","includePrerelease","startsWith","safeRe","range","raw","format","parseRange","c","first","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","comparators","size","result","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","slice","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","b","compareBuild","inc","release","identifier","identifierBase","base","Number","Error","isNaN","s","eq","neq","gt","gte","lt","lte","op","String","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","list","sort","internalRe","constants","identifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","process","env","NODE_DEBUG","args","console","error","numeric","anum","bnum","looseOption","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","name","isGlobal","safe","token","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","iterator","Node","create","pushNode","res","shift","forEachReverse","n","getReverse","mapReverse","reduce","initial","acc","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","nodes","inserted","reverse","__WEBPACK_EXTERNAL_MODULE__7644__","__WEBPACK_EXTERNAL_MODULE__3305__","__WEBPACK_EXTERNAL_MODULE__3545__","__WEBPACK_EXTERNAL_MODULE__7388__","__WEBPACK_EXTERNAL_MODULE__8200__","__WEBPACK_EXTERNAL_MODULE__5980__","__WEBPACK_EXTERNAL_MODULE__2650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","obj","prop","toStringTag","PolygonShapes","HEXAGON_POINTED_TOP","CIRCLE","SQUARE","PolygonNamedShapes","label","OperatorOptions","SortOptions","SortByFieldOptions","DisplayModes","FontFamilies","ARIAL","HELVETICA","HELVETICA_NEUE","INTER","ROBOTO","ROBOTO_MONO","FontFamilyOptions","FontFamilyOptionsLegacy","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","byteToHex","substr","offset","uuid","buf","rnds","random","ThresholdStates","ThresholdItem","styles","useStyles2","getThresholdStyles","threshold","setThreshold","useState","thresholdId","aKey","getThreshold","state","Input","disabled","type","step","ID","onChange","valueSetter","currentTarget","div","className","inputPrefix","colorPicker","ColorPicker","color","colorSetter","enableNamedColors","suffix","Select","menuShouldPortal","stateSetter","IconButton","variant","tooltip","onClick","remover","theme","css","spacing","Color","asHex","g","asRGB","blendWith","col","Math","round","Mul","RGBToHex","rgb","sep","indexOf","RGBAToHex","orig","alpha","hex","parseInt","parseFloat","fromHex","substring","bigint","GLOBAL_FILL_COLOR_RGBA","DEFAULT_OK_COLOR_HEX","DEFAULT_OK_COLOR","DEFAULT_WARNING_COLOR_HEX","DEFAULT_WARNING_COLOR","DEFAULT_CRITICAL_COLOR_HEX","DEFAULT_CRITICAL_COLOR","GLOBAL_TEXT_FONT_FAMILY","GLOBAL_TOOLTIP_FONT_FAMILY","GLOBAL_TEXT_FONT_FAMILY_LEGACY","GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY","ThresholdsEditor","tracker","_setTracker","thresholds","items","order","UUIdv4","theme2","useTheme2","oldTheme","useTheme","setTracker","allThresholds","element","setter","updateThresholdValue","orderedThresholds","orderBy","updateThresholdColor","useColor","visualization","getColorByName","getColorForTheme","updateThresholdState","colorForThresholdState","removeThreshold","removeIndex","Button","fill","icon","aTracker","getMetricHints","frames","metricHints","hintValue","aField","fields","FieldType","number","labels","appendLabels","aLabel","config","displayNameFromDS","OverrideItem","props","setMetricHints","override","_setOverride","setOverride","visibleIcon","hiddenIcon","operatorName","setOperatorName","getOperator","useEffect","context","data","hints","metricName","Card","heading","Meta","FieldSet","Field","description","enabled","placeholder","Cascader","initialValue","allowCustomValue","onSelect","val","hidden","alias","decimals","UnitPicker","unitFormat","span","clickThrough","Switch","transparent","clickThroughSanitize","clickThroughOpenNewTab","clickThroughCustomTargetEnabled","clickThroughCustomTarget","Actions","moveUp","moveDown","createDuplicate","OverrideEditor","settings","overrideConfig","overrides","allOverrides","isOpen","setIsOpen","openStates","updateOverride","scaledDecimals","colors","arrayMove","oldIndex","newIndex","removeOverride","Collapse","onToggle","currentState","toggleOpener","collapsible","thirdPi","PI","angles","pointX","pointY","floor","createCoords","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","end","clamp","param","placement","axis","getAxisLength","getAlignmentAxis","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","flip","_middlewareData$arrow","_middlewareData$flip","middlewareData","initialPlacement","mainAxis","checkMainAxis","crossAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","detectOverflowOptions","arrow","alignmentOffset","isBasePlacement","isRTL","oppositePlacement","getExpandedPlacements","direction","isStart","lr","rl","bt","getSideList","concat","getOppositeAxisPlacements","placements","overflow","overflows","overflowsData","sides","mainAlignmentSide","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","_overflowsData$map$so","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","convertValueToCoords","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","getNodeName","isNode","nodeName","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","isTableElement","isContainingBlock","webkit","isWebKit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","clippingAncestors","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingElementAncestors","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getDimensions","getClientRects","mergedOptions","platformWithCache","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","w","core","ref","REACT_TOOLTIP_DISABLE_CORE_STYLES","REACT_TOOLTIP_DISABLE_BASE_STYLES","insertAt","getElementById","warn","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","E","setTimeout","clearTimeout","anchorRefs","activeAnchor","current","attach","detach","setActiveAnchor","A","getTooltipData","O","N","SVGElement","getPropertyValue","parentElement","scrollingElement","elementReference","tooltipReference","tooltipArrowReference","place","middlewares","border","tooltipStyles","tooltipArrowStyles","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","then","u","borderBottom","borderRight","H","dark","light","success","warning","info","classNameArrow","anchorId","anchorSelect","events","openOnClick","f","positionStrategy","wrapper","delayShow","S","delayHide","float","noArrow","T","clickable","L","closeOnEsc","closeOnScroll","closeOnResize","q","style","W","afterShow","P","afterHide","F","content","K","contentWrapperRef","U","X","Y","V","Z","G","opacity","J","arrowColor","Q","ee","te","oe","ne","le","ie","ce","ae","se","ue","de","pe","ve","me","ye","fe","he","we","be","Se","Ee","_e","ge","Ae","Te","target","isConnected","Oe","Le","Re","clientX","clientY","Ne","ke","querySelector","contains","xe","Ce","$e","addEventListener","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","disconnect","refresh","skip","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","requestAnimationFrame","prevRefRect","frameLoop","nextRefRect","removeEventListener","event","listener","MutationObserver","attributeName","getAttribute","removedNodes","addedNodes","nodeType","matches","flatMap","querySelectorAll","childList","subtree","attributes","attributeFilter","Ie","role","background","dangerouslySetInnerHTML","__html","render","children","C","disableStyleInjection","I","j","B","D","getAttributeNames","dispatchEvent","CustomEvent","detail","disableCore","disableBase","Gradients","pureLight","colorGradients","gradients","aColorStart","aColorEnd","createGradients","okColorStart","okColorEnd","warningColorStart","warningColorEnd","criticalColorStart","criticalColorEnd","gradientId","defs","aGradient","linearGradient","x1","y1","x2","y2","stop","stopColor","LayoutManager","setRadius","radius","setHeight","setWidth","generateHexagonPointedTopLayout","getHexFlatTopRadius","generateUniformLayout","getUniformRadius","hexRadius","d3","numColumns","SQRT3","numRows","truncateFloat","getHexFlatTopDiameters","diameterX","diameterY","getUniformDiameters","horizontalMax","maxColumnsUsed","verticalMax","maxRowsUsed","uniformRadius","generatePossibleColumnAndRowsSizes","columnAutoSize","rowAutoSize","dataSize","squared","sqrt","ceil","generateActualColumnAndRowUsage","displayLimit","polygonsUsed","columnsUsed","shapeToCoordinates","shape","column","row","generatePoints","points","aPoint","generateUniformPoints","xPos","yPos","generateRadius","autoSize","getOffsets","getOffsetsHexagonPointedTop","getOffsetsSquare","getOffsetsUniform","shapeWidth","shapeHeight","offsetToViewY","oddCount","evenCount","getOddEvenCountForRange","actualHeightUsed","yoffset","offsetToViewX","widthOffset","actualWidthUsed","xoffset","getDiameters","GetDecimalsForValue","panelDecimals","lodashIsNumber","delta","dec","log","LN10","magn","pow","norm","getTextWidth","text","font","getContext","measureText","roundValue","formatted","toFixed","getErrorMessageStyles","typography","h1","fontSize","shade","getNoTriggerTextStyles","getWrapperStyles","getSVGStyles","getSVGPathStyles","Tooltip","renderTime","showTime","valueEnabled","tooltipColumnHeadersEnabled","primarySortByField","primarySortDirection","secondarySortByField","secondarySortDirection","displayMode","tooltipDisplayTextTriggeredEmpty","tooltipFontFamily","getTooltipStyles","table","fontFamily","tooltipTable","thead","isComposite","members","tr","th","tooltipCompositeHeading","colSpan","displayName","getCompositeHeader","tooltipNameHeading","tooltipValueHeading","tfoot","td","tooltipTime","dateTimeFormatWithAbbrevation","tbody","dataToSort","triggerCount","triggered","thresholdLevel","getTriggeredCount","filterTriggered","sortedMembers","sortSettings","getSortDirection","pUseLowercase","lowerCase","pDirection","sDirection","sUseLowercase","pSortFunction","sSortFunction","lodashOrderBy","multiSort","tooltipName","tooltipValue","valueFormatted","getCompositeMetrics","borderRadius","primary","shadows","z2","Polystat","divStyles","svgStyles","svgPathStyles","noTriggerTextStyles","errorMessageStyles","tooltipTheme","isDark","animationRefs","setAnimationRefs","React","animationMetricIndexes","setAnimationMetricIndexes","animatedItems","setAnimatedItems","animateComposite","useCallback","metricIndex","processedData","formatCompositeValue","globalDisplayTextTriggeredEmpty","innerHTML","shouldAnimate","animate","tick","showValue","JSON","stringify","newAnimationRefs","newAnimationMetricIndexes","createRef","updateAnimation","speed","compositeConfig","animationSpeed","setInterval","clearInterval","autoSizeColumns","autoSizeRows","limit","layoutNumColumns","layoutNumRows","lm","panelWidth","panelHeight","layoutDisplayLimit","autoSizePolygons","globalShape","globalPolygonSize","calculatedPoints","aHexbin","dx","dy","x0","y0","hexbin","binsById","bins","px","point","py","pj","pi","py1","abs","px1","pi2","pj2","px2","py2","bin","hexagon","angle","sin","cos","centers","mesh","fragment","extent","textAreaWidth","textAreaHeight","innerArea","symbol","d3symbol","customShape","symbolCircle","symbolSquare","getCoords","activeLabelFontSize","globalFontSize","activeValueFontSize","showEllipses","numOfChars","ellipseCharacters","globalAutoScaleFonts","autoFontScalar","globalTextFontFamily","globalShowValueEnabled","alignments","getAlignments","panelId","drawShape","fillColor","globalGradientsEnabled","useRadius","path","data-tooltip-id","data-tooltip-content","data-tooltip-position-strategy","stroke","globalPolygonBorderColor","strokeWidth","globalPolygonBorderSize","circle","cx","cy","marginLeft","marginTop","svg","xmlns","xmlnsXlink","viewBox","useUrl","sanitizeURLEnabled","sanitizedURL","resolvedClickthroughTarget","clickThroughTarget","newTabEnabled","customClickthroughTargetEnabled","customClickthroughTarget","resolveClickThroughTarget","clickableUrl","href","labelTextAlignmentX","labelWithValueTextAlignment","textAnchor","globalTextFontAutoColorEnabled","globalTextFontAutoColor","globalTextFontColor","pointerEvents","showName","getTextToDisplay","ellipseEnabled","labelValueAlignmentX","valueWithLabelTextAlignment","globalTooltipsEnabled","Portal","ReactTooltip","boxShadow","contentIndex","globalTooltipsShowTimestampEnabled","globalShowTooltipColumnHeadersEnabled","tooltipPrimarySortByField","tooltipPrimarySortDirection","tooltipSecondarySortByField","tooltipSecondarySortDirection","tooltipDisplayMode","globalTooltipsFontFamily","autoSizeFonts","triggeredIndex","triggerCache","aMember","cachedMemberState","buildTriggerCache","assign","textUtil","sanitize","valueOnlyTextAlignment","labelOnlyTextAlignment","maxFont","maxLabel","nameToCheck","maxValue","subMetricCount","counter","checkContent","computeTextFontSize","minFont","linesToDisplay","minFontPx","maxFontPx","getTextSizeForWidthAndHeight","frameHasTimestamp","frame","time","flattenLabels","rowNum","labelIndexes","numFields","string","labelWithValues","indexes","labelAndValue","indexValue","getValueOfField","getLabelValues","field","getWorstSeries","series1","series2","worstSeries","series1ThresholdLevel","series2ThresholdLevel","getThresholdLevelForValue","defaultColor","currentColor","thresholdCount","aThreshold","upperThreshold","lowerThreshold","ClickThroughTransformer","transformSingleMetric","url","cellName","cellValue","encodeURIComponent","cellRawValue","transformNthMetric","nthCellName","matched","nthName","nthCellValue","nthValue","nthCellRawValue","transformComposite","compositeName","transformByRegex","pattern","regex","stringToJsRegex","aMatch","matchType1","matchType2","groups","CUSTOM_SPLIT_DELIMITER","customFormatter","resolveMemberTemplates","replaceVariables","variableRegex","member","seriesMatch","matchResult","resolvedSeriesNames","aName","newName","escapedName","escapeStringForRegex","newNameEscaped","seriesName","seriesNameEscaped","resolveMemberAliasTemplates","templateVars","getTemplateSrv","GetValueByOperator","calcs","timestamp","MappingType","ValueToText","RangeToText","isNullValueMap","mapping","ThresholdsMode","SpecialValueMatch","Absolute","Percentage","FieldColorModeId","Thresholds","PaletteClassic","PaletteSaturated","ContinuousGrYlRd","Fixed","RegexToText","SpecialValue","True","False","Null","NaN","NullAndNaN","Empty","LegacyMappingType","GetMappedValue","valueMappings","mappedValue","allFormattedValueMappings","allValueMappings","valueMapping","valueToTextMapping","valueAsNumber","valueToTextMappingAsNumber","addValueToTextMappingText","rangeToTextMapping","fromAsNumber","toAsNumber","addRangeToTextMappingText","t1","t2","getAllFormattedValueMappings","getMappedValue","vm","getValueMappingResult","resolveOverrideTemplates","template","MatchOverride","resolvedOverrides","anOverride","ProcessDataFrames","compositesEnabled","composites","fieldConfig","globalClickthrough","globalClickthroughTabEnabled","globalClickthroughSanitizedEnabled","globalClickthroughCustomTargetEnabled","globalClickthroughCustomTarget","globalOperator","globalDecimals","globalDisplayMode","globalRegexPattern","globalFillColor","globalThresholds","globalUnitFormat","sortByDirection","sortByField","compositesGlobalAliasingEnabled","themeV1","themeV2","timeToInsert","newData","newFrame","meta","hasTimestamp","copiedField","aFieldValues","rowsOfField","ArrayVector","fc","timeField","InsertTime","series","internalData","models","DataFrameToPolystat","aModel","ApplyGlobalRegexPattern","ApplyGlobalFormatting","realGlobalFillColor","aSeries","dataValue","stats","defaults","mappings","realColor","formatFunc","getValueFormat","valueRounded","ApplyOverrides","filteredMetrics","keepMetrics","clonedComposites","resolvedComposites","metricComposites","resolved","isTemplated","resolveCompositeTemplates","matchedMetrics","aComposite","showComposite","currentWorstSeries","templatedMembers","metrics","aMetric","seriesItem","showMembers","sanitizeUrl","clone","itemIndex","keptMetric","location","lodashIncludes","ApplyComposites","ApplyGlobalClickThrough","FilterByGlobalDisplayMode","sortField","sortOrder","reverseSort","lodashSortBy","itemContent","lodashToLower","SortVariableValuesByField","regexPattern","regexVal","temp","extractedTxt","globalClickthroughNewTabEnabled","processDefaultClickThrough","compositeMetrics","dataLen","valueFields","valueField","valueFieldName","getFieldDisplayName","standardCalcs","reduceField","reducers","operatorValue","maxDecimals","unit","formattedValueToString","model","getComponentStyles","container","CompositeMetricItem","copySelectedMetricToClipboard","metric","aValue","navigator","clipboard","writeText","execCommand","HorizontalGroup","removeMetric","minWidth","updateMetric","updateMetricAlias","CompositeItem","composite","_setComposite","setDisplayMode","getDisplayMode","setComposite","allMetrics","newMetric","UUIDv4","currentMetrics","CompositeEditor","_setAnimationSpeed","_setCompositesEnabled","allComposites","updateComposite","removeComposite","compositeIndex","setCompositesEnabled","setAnimationSpeed","toggleState","GlobalThresholdEditor","setGlobalThresholds","globalThresholdsConfig","convertOperators","hasRobotoFont","buildInfo","plugin","PanelPlugin","currentThemeV1","currentThemeV2","cachedProcessedData","setCachedProcessedData","LoadingState","Done","compositeGlobalAliasingEnabled","setMigrationHandler","panel","polystat","newDefaults","angular","columns","defaultClickThrough","defaultClickThroughNewTab","defaultClickThroughSanitize","fontAutoColor","fontAutoScale","globalOperatorName","migratedThreshold","gradientEnabled","hexagonSortByDirection","hexagonSortByField","polygonBorderColor","polygonBorderSize","polygonGlobalFillColor","radiusAutoSize","rows","tooltipEnabled","tooltipPrimarySortField","tooltipSecondarySortField","tooltipTimestampEnabled","migrateDefaults","migratedOverrides","savedOverrides","seriesOverride","migrateOverrides","migratedComposites","savedComposites","memberIndex","migrateComposites","newMaps","mappingType","newValueMappings","valueMaps","convertOldAngularValueMappings","newRangeMappings","rangeMaps","newMappings","migrateValueAndRangeMaps","useFieldConfig","disableStandardOptions","FieldConfigProperty","Decimals","DisplayName","Max","Min","Links","NoValue","Unit","standardOptions","Mappings","setPanelOptions","builder","addBooleanSwitch","defaultValue","category","addNumberInput","placeHolder","integer","showIf","addSelect","addColorPicker","addTextInput","addUnitPicker","addCustomEditor","editor","setSuggestionsSupplier","getSuggestionsForData","dataSummary","ds","hasData","hasNumberField","getListAppender","pluginId","append"],"sourceRoot":""}