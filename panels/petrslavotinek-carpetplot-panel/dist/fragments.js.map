{"version":3,"sources":["../src/fragments.js"],"names":["moment","MINUTE","QUARTER","HOUR","fragments","count","getBucketIndex","time","hour","minute","getTime","bucketIndex","startOf","add","getBucket","timestamp","unix","nextTime","utc","Math","floor","timeUtc","minutes","fragmentsMap","name","value","getFragment","fragmentType"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAOA,Y;;;AAEDC,Y,GAAS,Q;AACTC,a,GAAU,S;AACVC,U,GAAO,M;AAEPC,e,iDACHH,M,EAAS;AACRI,eAAO,IADC;AAERC,wBAAgB,wBAACC,IAAD;AAAA,iBAAUA,KAAKC,IAAL,KAAc,EAAd,GAAmBD,KAAKE,MAAL,EAA7B;AAAA,SAFR;AAGRC,iBAAS,iBAACH,IAAD,EAAOI,WAAP;AAAA,iBAAuBX,OAAOO,IAAP,EAAaK,OAAb,CAAqB,KAArB,EAA4BC,GAA5B,CAAgCF,WAAhC,EAA6C,QAA7C,CAAvB;AAAA,SAHD;AAIRG,mBAAW,mBAACC,SAAD;AAAA,iBAAef,OAAOe,SAAP,EAAkBH,OAAlB,CAA0B,QAA1B,EAAoCI,IAApC,EAAf;AAAA,SAJH;AAKRC,kBAAU,kBAACV,IAAD;AAAA,iBAAUP,OAAOkB,GAAP,CAAWX,IAAX,EAAiBM,GAAjB,CAAqB,CAArB,EAAwB,QAAxB,CAAV;AAAA;AALF,O,+BAOTX,O,EAAU;AACTG,eAAO,EADE;AAETC,wBAAgB,wBAACC,IAAD;AAAA,iBAAUA,KAAKC,IAAL,KAAc,CAAd,GAAkBW,KAAKC,KAAL,CAAWb,KAAKE,MAAL,KAAgB,EAA3B,CAA5B;AAAA,SAFP;AAGTC,iBAAS,iBAACH,IAAD,EAAOI,WAAP;AAAA,iBAAuBX,OAAOO,IAAP,EAAaK,OAAb,CAAqB,KAArB,EAA4BC,GAA5B,CAAgC,KAAKF,WAArC,EAAkD,QAAlD,CAAvB;AAAA,SAHA;AAITG,mBAAW,mBAACC,SAAD,EAAe;AACxB,cAAMM,UAAUrB,OAAOe,SAAP,CAAhB;AACA,cAAMO,UAAUH,KAAKC,KAAL,CAAWC,QAAQZ,MAAR,KAAmB,EAA9B,IAAoC,EAApD;AACA,iBAAOY,QAAQT,OAAR,CAAgB,MAAhB,EAAwBC,GAAxB,CAA4BS,OAA5B,EAAqC,QAArC,EAA+CN,IAA/C,EAAP;AACD,SARQ;AASTC,kBAAU,kBAACV,IAAD;AAAA,iBAAUP,OAAOkB,GAAP,CAAWX,IAAX,EAAiBM,GAAjB,CAAqB,EAArB,EAAyB,QAAzB,CAAV;AAAA;AATD,O,+BAWVV,I,EAAO;AACNE,eAAO,EADD;AAENC,wBAAgB,wBAACC,IAAD;AAAA,iBAAUA,KAAKC,IAAL,EAAV;AAAA,SAFV;AAGNE,iBAAS,iBAACH,IAAD,EAAOI,WAAP;AAAA,iBAAuBX,OAAOO,IAAP,EAAaK,OAAb,CAAqB,KAArB,EAA4BC,GAA5B,CAAgCF,WAAhC,EAA6C,MAA7C,CAAvB;AAAA,SAHH;AAING,mBAAW,mBAACC,SAAD;AAAA,iBAAef,OAAOe,SAAP,EAAkBH,OAAlB,CAA0B,MAA1B,EAAkCI,IAAlC,EAAf;AAAA,SAJL;AAKNC,kBAAU,kBAACV,IAAD;AAAA,iBAAUP,OAAOkB,GAAP,CAAWX,IAAX,EAAiBM,GAAjB,CAAqB,CAArB,EAAwB,MAAxB,CAAV;AAAA;AALJ,O;;8BASGU,Y,GAAe,CAC1B,EAAEC,MAAM,QAAR,EAAkBC,OAAOxB,MAAzB,EAD0B,EAE1B,EAAEuB,MAAM,YAAR,EAAsBC,OAAOvB,OAA7B,EAF0B,EAG1B,EAAEsB,MAAM,MAAR,EAAgBC,OAAOtB,IAAvB,EAH0B,C;;;;6BAMfuB,W,GAAc,SAAdA,WAAc,CAACC,YAAD;AAAA,eAAkBvB,UAAUuB,YAAV,CAAlB;AAAA,O;;;;yBAEZ;AACbxB,kBADa;AAEbD,wBAFa;AAGbD;AAHa,O","file":"fragments.js","sourcesContent":["import moment from 'moment';\r\n\r\nconst MINUTE = 'MINUTE';\r\nconst QUARTER = 'QUARTER';\r\nconst HOUR = 'HOUR';\r\n\r\nconst fragments = {\r\n  [MINUTE]: {\r\n    count: 1440,\r\n    getBucketIndex: (time) => time.hour() * 60 + time.minute(),\r\n    getTime: (time, bucketIndex) => moment(time).startOf('day').add(bucketIndex, 'minute'),\r\n    getBucket: (timestamp) => moment(timestamp).startOf('minute').unix(),\r\n    nextTime: (time) => moment.utc(time).add(1, 'minute')\r\n  },\r\n  [QUARTER]: {\r\n    count: 96,\r\n    getBucketIndex: (time) => time.hour() * 4 + Math.floor(time.minute() / 15),\r\n    getTime: (time, bucketIndex) => moment(time).startOf('day').add(15 * bucketIndex, 'minute'),\r\n    getBucket: (timestamp) => {\r\n      const timeUtc = moment(timestamp);\r\n      const minutes = Math.floor(timeUtc.minute() / 15) * 15;\r\n      return timeUtc.startOf('hour').add(minutes, 'minute').unix();\r\n    },\r\n    nextTime: (time) => moment.utc(time).add(15, 'minute')\r\n  },\r\n  [HOUR]: {\r\n    count: 24,\r\n    getBucketIndex: (time) => time.hour(),\r\n    getTime: (time, bucketIndex) => moment(time).startOf('day').add(bucketIndex, 'hour'),\r\n    getBucket: (timestamp) => moment(timestamp).startOf('hour').unix(),\r\n    nextTime: (time) => moment.utc(time).add(1, 'hour')\r\n  }\r\n};\r\n\r\nexport const fragmentsMap = [\r\n  { name: 'Minute', value: MINUTE },\r\n  { name: '15 minutes', value: QUARTER },\r\n  { name: 'Hour', value: HOUR }\r\n];\r\n\r\nexport const getFragment = (fragmentType) => fragments[fragmentType];\r\n\r\nexport default {\r\n  HOUR,\r\n  QUARTER,\r\n  MINUTE\r\n};"]}