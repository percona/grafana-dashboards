{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"moment\"","webpack:///external \"jquery\"","webpack:///external \"app/core/app_events\"","webpack:///external \"lodash\"","webpack:///./module.ts","webpack:///./canvas-metric.ts","webpack:///external \"app/plugins/sdk\"","webpack:///./distinct-points.ts","webpack:///external \"app/core/utils/kbn\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","_canvasMetric","_distinctPoints","f","a","h","setPrototypeOf","__proto__","Array","this","constructor","grafanaColors","DiscretePanelCtrl","_super","$scope","$injector","annotationsSrv","_this","defaults","display","rowHeight","valueMaps","op","text","rangeMaps","from","to","colorMaps","color","metricNameColor","valueTextColor","timeTextColor","crosshairColor","backgroundColor","lineColor","textSize","textSizeTime","extendLastValue","writeLastValue","writeAllValues","writeMetricNames","showTimeAxis","showLegend","showLegendNames","showLegendValues","showLegendPercent","highlightOnMouseover","expandFromQueryS","legendSortBy","units","timeOptions","timePrecision","useTimePrecision","annotations","data","legend","externalPT","isTimeline","isStacked","hoverPoint","colorMap","unitFormats","formatter","_colorsPaleteCash","_renderDimensions","_selectionMatrix","_lodash2","defaultsDeep","panel","events","on","onInitEditMode","onRender","onRefresh","onDataReceived","onDataSnapshotLoad","__extends","$inject","onPanelInitialized","updateColorInfo","onConfigChanged","snapshotData","onDataError","err","console","log","_kbn2","getUnitFormats","addEditorTab","editorTabIndex","refresh","context","_updateRenderDimensions","_updateSelectionMatrix","_updateCanvasSize","_renderRects","_renderTimeAxis","_renderLabels","_renderAnnotations","_renderSelection","_renderCrosshair","renderingCompleted","showLegandTooltip","pos","info","body","val","count","formatDuration","_moment2","duration","ms","$tooltip","html","place_tt","pageX","pageY","clearTT","detach","formatValue","isNumber","length","map","parseFloat","decimals","isNull","isNil","isString","toString","getColor","has","randomColor","letters","split","Math","floor","random","applyPanelTimeOverrides","range","subtract","raw","dataList","_jquery2","canvas","css","forEach","metric","type","columns","Error","res","DistinctPoints","j","rows","row","add","finish","push","res_1","target","datapoints","point","updateLegendMetrics","getAnnotations","dashboard","then","result","loading","notify","combineLegend","removeColorMap","index","indexOf","splice","cm","render","addColorMap","what","legendInfo","v","removeValueMap","addValueMap","removeRangeMap","rangeMap","addRangeMap","update","valueFormats","humanize","dir","hasValue","limit","_i","_a","parseInt","as","rs","keys","reduce","carry","replace","substr","getLegendDisplay","disp","showLegendCounts","showLegendTime","hassomething","dec","legendPercentDecimals","per","changes","percentunit","showTooltip","evt","isExternal","start","time","mouse","down","min","ts","position","max","formatDate","rect","getBoundingClientRect","top","panelRelY","height","window","innerHeight","scrollTop","elapsed","pX","x","left","width","onGraphHover","showTT","hover","y","rowsHeight","min_1","isUndefined","valueOf","max_1","width_1","anno","find","isRegion","timeEnd","annoX","mouseX","offsetX","onMouseClicked","where","event","metaKey","ctrlKey","pt","utc","timeSrv","setTime","clear","onMouseSelectedRange","_app_events2","emit","wrap","timeHeight","matrix","positions","predicate","all","crosshairHover","_selectedMetric","legendItem","_selectedLegendItem","_getVal","_devicePixelRatio","scale","metricIndex","rectIndex","ctx","fillStyle","fillRect","rowObj","currentX","nextX","globalAlphaTemp","globalAlpha","top_1","strokeStyle","beginPath","moveTo","lineTo","stroke","lineWidth","textBaseline","font","centerY","labelPositionMetricName","labelPositionLastValue","labelPositionValue","minTextSpot","maxTextSpot","textAlign","fillText","measureText","hoverTextStart","hoverTextEnd","txtinfo","save","clip","restore","xmin","xmax","strokeRect","setLineDash","lineDashOffset","estTimeInterval","timeResolution","getTimeResolution","pixelStep","nextPointInTime","roundDate","xPos","timeFormat","time_format","displayOffset","timezone","Date","getTimezoneOffset","date","dateStr","xOffset","arc","PI","fill","isAlert","source","iconColor","annotation","_drawVertical","xPosStart","xPosEnd","timeVal","headerColumnIndent","templateUrl","scrollable","CanvasPanelCtrl","devicePixelRatio","centerV","globalCompositeOperation","getMousePosition","clientY","yRel","link","scope","elem","attrs","ctrl","document","createElement","appendChild","getContext","addEventListener","panelRelX","xRel","buttons","up","isThis","id","sharedTooltipModeEnabled","otherPanelInFullscreenMode","gevt","sharedCrosshairModeOnly","secPerTick","timeIntInSecs","timeStamp","roundee","fmt","monthNames","dayNames","strftime","hours12","escape","hours","getHours","isAM","charAt","getDay","getMonth","leftPad","getDate","getMinutes","getSeconds","getFullYear","join","pad","MetricsPanelCtrl","u","obj","PointInfo","LegendValue","last","asc","transitionCount","distinctValuesCount","reverse","until","distinct","Map","set","size","orderBy","merged","leg"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","///<reference path=\"../node_modules/grafana-sdk-mocks/app/headers/common.d.ts\" />\n\nimport {CanvasPanelCtrl} from './canvas-metric';\nimport {DistinctPoints} from './distinct-points';\n\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\n\nimport appEvents from 'app/core/app_events';\n\nconst grafanaColors = [\n  '#7EB26D',\n  '#EAB839',\n  '#6ED0E0',\n  '#EF843C',\n  '#E24D42',\n  '#1F78C1',\n  '#BA43A9',\n  '#705DA0',\n  '#508642',\n  '#CCA300',\n  '#447EBC',\n  '#C15C17',\n  '#890F02',\n  '#0A437C',\n  '#6D1F62',\n  '#584477',\n  '#B7DBAB',\n  '#F4D598',\n  '#70DBED',\n  '#F9BA8F',\n  '#F29191',\n  '#82B5D8',\n  '#E5A8E2',\n  '#AEA2E0',\n  '#629E51',\n  '#E5AC0E',\n  '#64B0C8',\n  '#E0752D',\n  '#BF1B00',\n  '#0A50A1',\n  '#962D82',\n  '#614D93',\n  '#9AC48A',\n  '#F2C96D',\n  '#65C5DB',\n  '#F9934E',\n  '#EA6460',\n  '#5195CE',\n  '#D683CE',\n  '#806EB7',\n  '#3F6833',\n  '#967302',\n  '#2F575E',\n  '#99440A',\n  '#58140C',\n  '#052B51',\n  '#511749',\n  '#3F2B5B',\n  '#E0F9D7',\n  '#FCEACA',\n  '#CFFAFF',\n  '#F9E2D2',\n  '#FCE2DE',\n  '#BADFF4',\n  '#F9D9F9',\n  '#DEDAF7',\n]; // copied from public/app/core/utils/colors.ts because of changes in grafana 4.6.0\n//(https://github.com/grafana/grafana/blob/master/PLUGIN_DEV.md)\n\nclass DiscretePanelCtrl extends CanvasPanelCtrl {\n  static templateUrl = 'partials/module.html';\n  static scrollable = true;\n\n  defaults = {\n    display: 'timeline', // or 'stacked'\n    rowHeight: 50,\n    valueMaps: [{value: 'null', op: '=', text: 'N/A'}],\n    rangeMaps: [{from: 'null', to: 'null', text: 'N/A'}],\n    colorMaps: [{text: 'N/A', color: '#CCC'}],\n    metricNameColor: '#000000',\n    valueTextColor: '#000000',\n    timeTextColor: '#d8d9da',\n    crosshairColor: '#8F070C',\n    backgroundColor: 'rgba(128,128,128,0.1)',\n    lineColor: 'rgba(0,0,0,0.1)',\n    textSize: 24,\n    textSizeTime: 12,\n    extendLastValue: true,\n    writeLastValue: true,\n    writeAllValues: false,\n    writeMetricNames: false,\n    showTimeAxis: true,\n    showLegend: true,\n    showLegendNames: true,\n    showLegendValues: true,\n    showLegendPercent: true,\n    highlightOnMouseover: true,\n    expandFromQueryS: 0,\n    legendSortBy: '-ms',\n    units: 'short',\n    timeOptions: [\n      {\n        name: 'Years',\n        value: 'years',\n      },\n      {\n        name: 'Months',\n        value: 'months',\n      },\n      {\n        name: 'Weeks',\n        value: 'weeks',\n      },\n      {\n        name: 'Days',\n        value: 'days',\n      },\n      {\n        name: 'Hours',\n        value: 'hours',\n      },\n      {\n        name: 'Minutes',\n        value: 'minutes',\n      },\n      {\n        name: 'Seconds',\n        value: 'seconds',\n      },\n      {\n        name: 'Milliseconds',\n        value: 'milliseconds',\n      },\n    ],\n    timePrecision: {\n      name: 'Minutes',\n      value: 'minutes',\n    },\n    useTimePrecision: false,\n  };\n\n  annotations: any = [];\n  data: DistinctPoints[] = null;\n  legend: DistinctPoints[] = null;\n\n  externalPT = false;\n  isTimeline = true;\n  isStacked = false;\n  hoverPoint: any = null;\n  colorMap: any = {};\n  unitFormats: any = null; // only used for editor\n  formatter: any = null;\n\n  _colorsPaleteCash: any = null;\n  _renderDimensions: any = {};\n  _selectionMatrix: string[][] = [];\n\n  /** @ngInject */\n  constructor($scope, $injector, public annotationsSrv) {\n    super($scope, $injector);\n\n    // defaults configs\n    _.defaultsDeep(this.panel, this.defaults);\n    this.panel.display = 'timeline'; // Only supported version now\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  onPanelInitialized() {\n    this.updateColorInfo();\n    this.onConfigChanged();\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  onDataError(err) {\n    this.annotations = [];\n    console.log('onDataError', err);\n  }\n\n  onInitEditMode() {\n    this.unitFormats = kbn.getUnitFormats();\n\n    this.addEditorTab(\n      'Options',\n      'public/plugins/natel-discrete-panel/partials/editor.options.html',\n      1\n    );\n    this.addEditorTab(\n      'Legend',\n      'public/plugins/natel-discrete-panel/partials/editor.legend.html',\n      3\n    );\n    this.addEditorTab(\n      'Colors',\n      'public/plugins/natel-discrete-panel/partials/editor.colors.html',\n      4\n    );\n    this.addEditorTab(\n      'Mappings',\n      'public/plugins/natel-discrete-panel/partials/editor.mappings.html',\n      5\n    );\n    this.editorTabIndex = 1;\n    this.refresh();\n  }\n\n  onRender() {\n    if (this.data == null || !this.context) {\n      return;\n    }\n\n    this._updateRenderDimensions();\n    this._updateSelectionMatrix();\n    this._updateCanvasSize();\n    this._renderRects();\n    this._renderTimeAxis();\n    this._renderLabels();\n    this._renderAnnotations();\n    this._renderSelection();\n    this._renderCrosshair();\n\n    this.renderingCompleted();\n  }\n\n  showLegandTooltip(pos, info) {\n    let body = '<div class=\"graph-tooltip-time\">' + info.val + '</div>';\n\n    body += '<center>';\n    if (info.count > 1) {\n      body += info.count + ' times<br/>for<br/>';\n    }\n\n    body += this.formatDuration(moment.duration(info.ms));\n\n    if (info.count > 1) {\n      body += '<br/>total';\n    }\n    body += '</center>';\n\n    this.$tooltip.html(body).place_tt(pos.pageX + 20, pos.pageY);\n  }\n\n  clearTT() {\n    this.$tooltip.detach();\n  }\n\n  formatValue(val): string {\n    if (_.isNumber(val)) {\n      if (this.panel.rangeMaps) {\n        for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n          const map = this.panel.rangeMaps[i];\n\n          // value/number to range mapping\n          const from = parseFloat(map.from);\n          const to = parseFloat(map.to);\n          if (to >= val && from <= val) {\n            return map.text;\n          }\n        }\n      }\n\n      // Convert it to a string first\n      if (this.formatter) {\n        val = this.formatter(val, this.panel.decimals);\n      }\n    }\n\n    const isNull = _.isNil(val);\n    if (!isNull && !_.isString(val)) {\n      val = val.toString(); // convert everything to a string\n    }\n\n    for (let i = 0; i < this.panel.valueMaps.length; i++) {\n      const map = this.panel.valueMaps[i];\n      // special null case\n      if (map.value === 'null') {\n        if (isNull) {\n          return map.text;\n        }\n        continue;\n      }\n\n      if (val === map.value) {\n        return map.text;\n      }\n    }\n\n    if (isNull) {\n      return 'null';\n    }\n    return val;\n  }\n\n  getColor(val) {\n    if (_.has(this.colorMap, val)) {\n      return this.colorMap[val];\n    }\n    if (this._colorsPaleteCash[val] === undefined) {\n      const c = grafanaColors[this._colorsPaleteCash.length % grafanaColors.length];\n      this._colorsPaleteCash[val] = c;\n      this._colorsPaleteCash.length++;\n    }\n    return this._colorsPaleteCash[val];\n  }\n\n  randomColor() {\n    const letters = 'ABCDE'.split('');\n    let color = '#';\n    for (let i = 0; i < 3; i++) {\n      color += letters[Math.floor(Math.random() * letters.length)];\n    }\n    return color;\n  }\n\n  // Override the\n  applyPanelTimeOverrides() {\n    super.applyPanelTimeOverrides();\n\n    if (this.panel.expandFromQueryS && this.panel.expandFromQueryS > 0) {\n      const from = this.range.from.subtract(this.panel.expandFromQueryS, 's');\n      this.range.from = from;\n      this.range.raw.from = from;\n    }\n  }\n\n  onDataReceived(dataList) {\n    $(this.canvas).css('cursor', 'pointer');\n\n    const data: DistinctPoints[] = [];\n    _.forEach(dataList, metric => {\n      if ('table' === metric.type) {\n        if ('time' !== metric.columns[0].type) {\n          throw new Error('Expected a time column from the table format');\n        }\n        for (let i = 1; i < metric.columns.length; i++) {\n          const res = new DistinctPoints(metric.columns[i].text);\n          for (let j = 0; j < metric.rows.length; j++) {\n            const row = metric.rows[j];\n            res.add(row[0], this.formatValue(row[i]));\n          }\n          res.finish(this);\n          data.push(res);\n        }\n      } else {\n        const res = new DistinctPoints(metric.target);\n        _.forEach(metric.datapoints, point => {\n          res.add(point[1], this.formatValue(point[0]));\n        });\n        res.finish(this);\n        data.push(res);\n      }\n    });\n    this.data = data;\n    this.updateLegendMetrics();\n\n    // Annotations Query\n    this.annotationsSrv\n      .getAnnotations({\n        dashboard: this.dashboard,\n        panel: this.panel, // {id: 4}, //\n        range: this.range,\n      })\n      .then(\n        result => {\n          this.loading = false;\n          if (result.annotations && result.annotations.length > 0) {\n            this.annotations = result.annotations;\n          } else {\n            this.annotations = null;\n          }\n          this.onRender();\n        },\n        () => {\n          this.loading = false;\n          this.annotations = null;\n          this.onRender();\n          console.log('ERRR', this);\n        }\n      );\n  }\n\n  updateLegendMetrics(notify?: boolean) {\n    if (\n      !this.data ||\n      !this.panel.showLegend ||\n      this.panel.showLegendNames ||\n      this.data.length <= 1\n    ) {\n      this.legend = this.data;\n    } else {\n      this.legend = [DistinctPoints.combineLegend(this.data, this)];\n    }\n\n    if (notify) {\n      this.onConfigChanged();\n    }\n  }\n\n  removeColorMap(map) {\n    const index = _.indexOf(this.panel.colorMaps, map);\n    this.panel.colorMaps.splice(index, 1);\n    this.updateColorInfo();\n  }\n\n  updateColorInfo() {\n    const cm = {};\n    for (let i = 0; i < this.panel.colorMaps.length; i++) {\n      const m = this.panel.colorMaps[i];\n      if (m.text) {\n        cm[m.text] = m.color;\n      }\n    }\n    this._colorsPaleteCash = {};\n    this._colorsPaleteCash.length = 0;\n    this.colorMap = cm;\n    this.render();\n  }\n\n  addColorMap(what) {\n    if (what === 'curent') {\n      _.forEach(this.data, metric => {\n        if (metric.legendInfo) {\n          _.forEach(metric.legendInfo, info => {\n            if (!_.has(this.colorMap, info.val)) {\n              const v = {text: info.val, color: this.getColor(info.val)};\n              this.panel.colorMaps.push(v);\n              this.colorMap[info.val] = v;\n            }\n          });\n        }\n      });\n    } else {\n      this.panel.colorMaps.push({text: '???', color: this.randomColor()});\n    }\n    this.updateColorInfo();\n  }\n\n  removeValueMap(map) {\n    const index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({value: '', op: '=', text: ''});\n  }\n\n  removeRangeMap(rangeMap) {\n    const index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({from: '', to: '', text: ''});\n  }\n\n  onConfigChanged(update = false) {\n    this.isTimeline = this.panel.display === 'timeline';\n    this.isStacked = this.panel.display === 'stacked';\n\n    this.formatter = null;\n    if (this.panel.units && 'none' !== this.panel.units) {\n      this.formatter = kbn.valueFormats[this.panel.units];\n    }\n\n    if (update) {\n      this.refresh();\n    } else {\n      this.render();\n    }\n  }\n\n  formatDuration(duration) {\n    if (!this.panel.useTimePrecision) {\n      return duration.humanize();\n    }\n\n    const dir: any = {};\n    let hasValue = false;\n    let limit = false;\n\n    for (const o of this.panel.timeOptions) {\n      dir[o.value] = parseInt(duration.as(o.value), 10);\n      hasValue = dir[o.value] || hasValue;\n      duration.subtract(moment.duration(dir[o.value], o.value));\n      limit = this.panel.timePrecision.value === o.value || limit;\n\n      // always show a value in case it is less than the configured\n      // precision\n      if (limit && hasValue) {\n        break;\n      }\n    }\n\n    const rs = Object.keys(dir).reduce((carry, key) => {\n      const value = dir[key];\n      if (!value) {\n        return carry;\n      }\n      key = value < 2 ? key.replace(/s$/, '') : key;\n      return `${carry} ${value} ${key},`;\n    }, '');\n\n    return rs.substr(0, rs.length - 1);\n  }\n\n  getLegendDisplay(info, metric) {\n    let disp = info.val;\n    if (\n      this.panel.showLegendPercent ||\n      this.panel.showLegendCounts ||\n      this.panel.showLegendTime\n    ) {\n      disp += ' (';\n      let hassomething = false;\n      if (this.panel.showLegendTime) {\n        disp += this.formatDuration(moment.duration(info.ms));\n        hassomething = true;\n      }\n\n      if (this.panel.showLegendPercent) {\n        if (hassomething) {\n          disp += ', ';\n        }\n\n        let dec = this.panel.legendPercentDecimals;\n        if (_.isNil(dec)) {\n          if (info.per > 0.98 && metric.changes.length > 1) {\n            dec = 2;\n          } else if (info.per < 0.02) {\n            dec = 2;\n          } else {\n            dec = 0;\n          }\n        }\n        disp += kbn.valueFormats.percentunit(info.per, dec);\n        hassomething = true;\n      }\n\n      if (this.panel.showLegendCounts) {\n        if (hassomething) {\n          disp += ', ';\n        }\n        disp += info.count + 'x';\n      }\n      disp += ')';\n    }\n    return disp;\n  }\n\n  //------------------\n  // Mouse Events\n  //------------------\n\n  showTooltip(evt, point, isExternal) {\n    let from = point.start;\n    let to = point.start + point.ms;\n    let time = point.ms;\n    let val = point.val;\n\n    if (this.mouse.down != null) {\n      from = Math.min(this.mouse.down.ts, this.mouse.position.ts);\n      to = Math.max(this.mouse.down.ts, this.mouse.position.ts);\n      time = to - from;\n      val = 'Zoom To:';\n    }\n\n    let body = '<div class=\"graph-tooltip-time\">' + val + '</div>';\n\n    body += '<center>';\n    body += this.dashboard.formatDate(moment(from)) + '<br/>';\n    body += 'to<br/>';\n    body += this.dashboard.formatDate(moment(to)) + '<br/><br/>';\n    body += this.formatDuration(moment.duration(time)) + '<br/>';\n    body += '</center>';\n\n    let pageX = 0;\n    let pageY = 0;\n    if (isExternal) {\n      const rect = this.canvas.getBoundingClientRect();\n      pageY = rect.top + evt.pos.panelRelY * rect.height;\n      if (pageY < 0 || pageY > $(window).innerHeight()) {\n        // Skip Hidden tooltip\n        this.$tooltip.detach();\n        return;\n      }\n      pageY += $(window).scrollTop();\n\n      const elapsed = this.range.to - this.range.from;\n      const pX = (evt.pos.x - this.range.from) / elapsed;\n      pageX = rect.left + pX * rect.width;\n    } else {\n      pageX = evt.evt.pageX;\n      pageY = evt.evt.pageY;\n    }\n\n    this.$tooltip.html(body).place_tt(pageX + 20, pageY + 5);\n  }\n\n  onGraphHover(evt, showTT, isExternal) {\n    this.externalPT = false;\n    if (this.data && this.data.length) {\n      let hover = null;\n      let j = Math.floor(this.mouse.position.y / this.panel.rowHeight);\n      if (j < 0) {\n        j = 0;\n      }\n      if (j >= this.data.length) {\n        j = this.data.length - 1;\n      }\n\n      if (this.isTimeline) {\n        hover = this.data[j].changes[0];\n        for (let i = 0; i < this.data[j].changes.length; i++) {\n          if (this.data[j].changes[i].start > this.mouse.position.ts) {\n            break;\n          }\n          hover = this.data[j].changes[i];\n        }\n        this.hoverPoint = hover;\n\n        if (this.annotations && !isExternal && this._renderDimensions) {\n          if (evt.pos.y > this._renderDimensions.rowsHeight - 5) {\n            const min = _.isUndefined(this.range.from) ? null : this.range.from.valueOf();\n            const max = _.isUndefined(this.range.to) ? null : this.range.to.valueOf();\n            const width = this._renderDimensions.width;\n\n            const anno = _.find(this.annotations, a => {\n              if (a.isRegion) {\n                return evt.pos.x > a.time && evt.pos.x < a.timeEnd;\n              }\n              const annoX = ((a.time - min) / (max - min)) * width;\n              const mouseX = evt.evt.offsetX;\n              return annoX > mouseX - 5 && annoX < mouseX + 5;\n            });\n            if (anno) {\n              console.log('TODO, hover <annotation-tooltip>', anno);\n              // See: https://github.com/grafana/grafana/blob/master/public/app/plugins/panel/graph/jquery.flot.events.js#L10\n              this.$tooltip\n                .html(anno.text)\n                .place_tt(evt.evt.pageX + 20, evt.evt.pageY + 5);\n              return;\n            }\n          }\n        }\n\n        if (showTT) {\n          this.externalPT = isExternal;\n          this.showTooltip(evt, hover, isExternal);\n        }\n        this.onRender(); // refresh the view\n      } else if (!isExternal) {\n        if (this.isStacked) {\n          hover = this.data[j].legendInfo[0];\n          // for (let i = 0; i < this.data[j].legendInfo.length; i++) {\n          //   if (this.data[j].legendInfo[i].x > this.mouse.position.x) {\n          //     break;\n          //   }\n          //   hover = this.data[j].legendInfo[i];\n          // }\n          this.hoverPoint = hover;\n          this.onRender(); // refresh the view\n\n          if (showTT) {\n            this.externalPT = isExternal;\n            this.showLegandTooltip(evt.evt, hover);\n          }\n        }\n      }\n    } else {\n      this.$tooltip.detach(); // make sure it is hidden\n    }\n  }\n\n  onMouseClicked(where, event) {\n    if (event.metaKey === true || event.ctrlKey === true) {\n      console.log('TODO? Create Annotation?', where, event);\n      return;\n    }\n\n    const pt = this.hoverPoint;\n    if (pt && pt.start) {\n      const range = {from: moment.utc(pt.start), to: moment.utc(pt.start + pt.ms)};\n      this.timeSrv.setTime(range);\n      this.clear();\n    }\n  }\n\n  onMouseSelectedRange(range, event) {\n    if (event.metaKey === true || event.ctrlKey === true) {\n      console.log('TODO? Create range annotation?', range, event);\n      return;\n    }\n    this.timeSrv.setTime(range);\n    this.clear();\n  }\n\n  clear() {\n    this.mouse.position = null;\n    this.mouse.down = null;\n    this.hoverPoint = null;\n    $(this.canvas).css('cursor', 'wait');\n    appEvents.emit('graph-hover-clear');\n    this.render();\n  }\n\n  _updateRenderDimensions() {\n    this._renderDimensions = {};\n\n    const rect = (this._renderDimensions.rect = this.wrap.getBoundingClientRect());\n    const rows = (this._renderDimensions.rows = this.data.length);\n    const rowHeight = (this._renderDimensions.rowHeight = this.panel.rowHeight);\n    const rowsHeight = (this._renderDimensions.rowsHeight = rowHeight * rows);\n    const timeHeight = this.panel.showTimeAxis ? 14 + this.panel.textSizeTime : 0;\n    const height = (this._renderDimensions.height = rowsHeight + timeHeight);\n    const width = (this._renderDimensions.width = rect.width);\n    this._renderDimensions.height = height;\n\n    let top = 0;\n    const elapsed = this.range.to - this.range.from;\n\n    this._renderDimensions.matrix = [];\n    _.forEach(this.data, metric => {\n      const positions = [];\n\n      if (this.isTimeline) {\n        let point = metric.changes[0];\n        for (let i = 0; i < metric.changes.length; i++) {\n          point = metric.changes[i];\n          if (point.start <= this.range.to) {\n            const xt = Math.max(point.start - this.range.from, 0);\n            const x = (xt / elapsed) * width;\n            positions.push(x);\n          }\n        }\n      }\n\n      if (this.isStacked) {\n        let point = null;\n        let start = this.range.from;\n        for (let i = 0; i < metric.legendInfo.length; i++) {\n          point = metric.legendInfo[i];\n          const xt = Math.max(start - this.range.from, 0);\n          const x = (xt / elapsed) * width;\n          positions.push(x);\n          start += point.ms;\n        }\n      }\n\n      this._renderDimensions.matrix.push({\n        y: top,\n        positions: positions,\n      });\n\n      top += rowHeight;\n    });\n  }\n\n  _updateSelectionMatrix() {\n    const selectionPredicates = {\n      all: () => {\n        return true;\n      },\n      crosshairHover: function(i, j) {\n        if (j + 1 === this.data[i].changes.length) {\n          return this.data[i].changes[j].start <= this.mouse.position.ts;\n        }\n        return (\n          this.data[i].changes[j].start <= this.mouse.position.ts &&\n          this.mouse.position.ts < this.data[i].changes[j + 1].start\n        );\n      },\n      mouseX: function(i, j) {\n        const row = this._renderDimensions.matrix[i];\n        if (j + 1 === row.positions.length) {\n          return row.positions[j] <= this.mouse.position.x;\n        }\n        return (\n          row.positions[j] <= this.mouse.position.x &&\n          this.mouse.position.x < row.positions[j + 1]\n        );\n      },\n      metric: function(i) {\n        return this.data[i] === this._selectedMetric;\n      },\n      legendItem: function(i, j) {\n        if (this.data[i] !== this._selectedMetric) {\n          return false;\n        }\n        return this._selectedLegendItem.val === this._getVal(i, j);\n      },\n    };\n\n    function getPredicate() {\n      if (this._selectedLegendItem !== undefined) {\n        return 'legendItem';\n      }\n      if (this._selectedMetric !== undefined) {\n        return 'metric';\n      }\n      if (this.mouse.down !== null) {\n        return 'all';\n      }\n      if (this.panel.highlightOnMouseover && this.mouse.position != null) {\n        if (this.isTimeline) {\n          return 'crosshairHover';\n        }\n        if (this.isStacked) {\n          return 'mouseX';\n        }\n      }\n      return 'all';\n    }\n\n    const pn = getPredicate.bind(this)();\n    const predicate = selectionPredicates[pn].bind(this);\n    this._selectionMatrix = [];\n    for (let i = 0; i < this._renderDimensions.matrix.length; i++) {\n      const rs = [];\n      const r = this._renderDimensions.matrix[i];\n      for (let j = 0; j < r.positions.length; j++) {\n        rs.push(predicate(i, j));\n      }\n      this._selectionMatrix.push(rs);\n    }\n  }\n\n  _updateCanvasSize() {\n    this.canvas.width = this._renderDimensions.width * this._devicePixelRatio;\n    this.canvas.height = this._renderDimensions.height * this._devicePixelRatio;\n\n    $(this.canvas).css('width', this._renderDimensions.width + 'px');\n    $(this.canvas).css('height', this._renderDimensions.height + 'px');\n\n    this.context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  _getVal(metricIndex, rectIndex) {\n    let point = undefined;\n    if (this.isTimeline) {\n      point = this.data[metricIndex].changes[rectIndex];\n    }\n    if (this.isStacked) {\n      point = this.data[metricIndex].legendInfo[rectIndex];\n    }\n    return point.val;\n  }\n\n  _renderRects() {\n    const matrix = this._renderDimensions.matrix;\n    const ctx = this.context;\n\n    // Clear the background\n    ctx.fillStyle = this.panel.backgroundColor;\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    _.forEach(this.data, (metric, i) => {\n      const rowObj = matrix[i];\n      for (let j = 0; j < rowObj.positions.length; j++) {\n        const currentX = rowObj.positions[j];\n        let nextX = this._renderDimensions.width;\n        if (j + 1 !== rowObj.positions.length) {\n          nextX = rowObj.positions[j + 1];\n        }\n        ctx.fillStyle = this.getColor(this._getVal(i, j));\n        const globalAlphaTemp = ctx.globalAlpha;\n        if (!this._selectionMatrix[i][j]) {\n          ctx.globalAlpha = 0.3;\n        }\n        ctx.fillRect(\n          currentX,\n          matrix[i].y,\n          nextX - currentX,\n          this._renderDimensions.rowHeight\n        );\n        ctx.globalAlpha = globalAlphaTemp;\n      }\n\n      if (i > 0) {\n        const top = matrix[i].y;\n        ctx.strokeStyle = this.panel.lineColor;\n        ctx.beginPath();\n        ctx.moveTo(0, top);\n        ctx.lineTo(this._renderDimensions.width, top);\n        ctx.stroke();\n      }\n    });\n  }\n\n  _renderLabels() {\n    const ctx = this.context;\n    ctx.lineWidth = 1;\n    ctx.textBaseline = 'middle';\n    ctx.font = this.panel.textSize + 'px \"Open Sans\", Helvetica, Arial, sans-serif';\n\n    const offset = 2;\n    const rowHeight = this._renderDimensions.rowHeight;\n    _.forEach(this.data, (metric, i) => {\n      const {y, positions} = this._renderDimensions.matrix[i];\n\n      const centerY = y + rowHeight / 2;\n      // let labelPositionMetricName = y + rectHeight - this.panel.textSize / 2;\n      // let labelPositionLastValue = y + rectHeight - this.panel.textSize / 2;\n      // let labelPositionValue = y + this.panel.textSize / 2;\n      const labelPositionMetricName = centerY;\n      const labelPositionLastValue = centerY;\n      const labelPositionValue = centerY;\n\n      let minTextSpot = 0;\n      let maxTextSpot = this._renderDimensions.width;\n      if (this.panel.writeMetricNames) {\n        ctx.fillStyle = this.panel.metricNameColor;\n        ctx.textAlign = 'left';\n        ctx.fillText(metric.name, offset, labelPositionMetricName);\n        minTextSpot = offset + ctx.measureText(metric.name).width + 2;\n      }\n\n      let hoverTextStart = -1;\n      let hoverTextEnd = -1;\n\n      if (this.mouse.position) {\n        for (let j = 0; j < positions.length; j++) {\n          if (positions[j] <= this.mouse.position.x) {\n            if (j >= positions.length - 1 || positions[j + 1] >= this.mouse.position.x) {\n              let val = this._getVal(i, j);\n              ctx.fillStyle = this.panel.valueTextColor;\n              ctx.textAlign = 'left';\n              hoverTextStart = positions[j] + offset;\n              if (hoverTextStart < minTextSpot) {\n                hoverTextStart = minTextSpot + 2;\n                val = ': ' + val;\n              }\n\n              ctx.fillText(val, hoverTextStart, labelPositionValue);\n              const txtinfo = ctx.measureText(val);\n              hoverTextEnd = hoverTextStart + txtinfo.width + 4;\n              break;\n            }\n          }\n        }\n      }\n\n      if (this.panel.writeLastValue) {\n        const val = this._getVal(i, positions.length - 1);\n        ctx.fillStyle = this.panel.valueTextColor;\n        ctx.textAlign = 'right';\n        const txtinfo = ctx.measureText(val);\n        const xval = this._renderDimensions.width - offset - txtinfo.width;\n        if (xval > hoverTextEnd) {\n          ctx.fillText(\n            val,\n            this._renderDimensions.width - offset,\n            labelPositionLastValue\n          );\n          maxTextSpot = this._renderDimensions.width - ctx.measureText(val).width - 10;\n        }\n      }\n\n      if (this.panel.writeAllValues) {\n        ctx.fillStyle = this.panel.valueTextColor;\n        ctx.textAlign = 'left';\n        for (let j = 0; j < positions.length; j++) {\n          const val = this._getVal(i, j);\n          let nextX = this._renderDimensions.width;\n          if (j + 1 !== positions.length) {\n            nextX = positions[j + 1];\n          }\n\n          const x = positions[j];\n          if (x > minTextSpot) {\n            const width = nextX - x;\n            if (maxTextSpot > x + width) {\n              // This clips the text within the given bounds\n              ctx.save();\n              ctx.rect(x, y, width, rowHeight);\n              ctx.clip();\n\n              ctx.fillText(val, x + offset, labelPositionValue);\n              ctx.restore();\n            }\n          }\n        }\n      }\n    });\n  }\n\n  _renderSelection() {\n    if (this.mouse.down === null) {\n      return;\n    }\n    if (this.mouse.position === null) {\n      return;\n    }\n    if (!this.isTimeline) {\n      return;\n    }\n\n    const ctx = this.context;\n    const height = this._renderDimensions.height;\n\n    const xmin = Math.min(this.mouse.position.x, this.mouse.down.x);\n    const xmax = Math.max(this.mouse.position.x, this.mouse.down.x);\n\n    ctx.fillStyle = 'rgba(110, 110, 110, 0.5)';\n    ctx.strokeStyle = 'rgba(110, 110, 110, 0.5)';\n    ctx.beginPath();\n    ctx.fillRect(xmin, 0, xmax - xmin, height);\n    ctx.strokeRect(xmin, 0, xmax - xmin, height);\n  }\n\n  _renderTimeAxis() {\n    if (!this.panel.showTimeAxis) {\n      return;\n    }\n\n    const ctx = this.context;\n    // const rows = this.data.length;\n    // const rowHeight = this.panel.rowHeight;\n    // const height = this._renderDimensions.height;\n    const width = this._renderDimensions.width;\n    const top = this._renderDimensions.rowsHeight;\n\n    const headerColumnIndent = 0; // header inset (zero for now)\n\n    ctx.font = this.panel.textSizeTime + 'px \"Open Sans\", Helvetica, Arial, sans-serif';\n    ctx.fillStyle = this.panel.timeTextColor;\n    ctx.textAlign = 'left';\n    ctx.strokeStyle = this.panel.timeTextColor;\n    ctx.textBaseline = 'top';\n    ctx.setLineDash([7, 5]); // dashes are 5px and spaces are 3px\n    ctx.lineDashOffset = 0;\n\n    const min = _.isUndefined(this.range.from) ? null : this.range.from.valueOf();\n    const max = _.isUndefined(this.range.to) ? null : this.range.to.valueOf();\n    const minPxInterval = ctx.measureText('12/33 24:59').width * 2;\n    const estNumTicks = width / minPxInterval;\n    const estTimeInterval = (max - min) / estNumTicks;\n    const timeResolution = this.getTimeResolution(estTimeInterval);\n    const pixelStep = (timeResolution / (max - min)) * width;\n    let nextPointInTime = this.roundDate(min, timeResolution) + timeResolution;\n    let xPos = headerColumnIndent + ((nextPointInTime - min) / (max - min)) * width;\n\n    const timeFormat = this.time_format(max - min, timeResolution / 1000);\n    let displayOffset = 0;\n    if (this.dashboard.timezone === 'utc') {\n      displayOffset = new Date().getTimezoneOffset() * 60000;\n    }\n\n    while (nextPointInTime < max) {\n      // draw ticks\n      ctx.beginPath();\n      ctx.moveTo(xPos, top + 5);\n      ctx.lineTo(xPos, 0);\n      ctx.lineWidth = 1;\n      ctx.stroke();\n\n      // draw time label\n      const date = new Date(nextPointInTime + displayOffset);\n      const dateStr = this.formatDate(date, timeFormat);\n      const xOffset = ctx.measureText(dateStr).width / 2;\n      ctx.fillText(dateStr, xPos - xOffset, top + 10);\n\n      nextPointInTime += timeResolution;\n      xPos += pixelStep;\n    }\n  }\n\n  _renderCrosshair() {\n    if (this.mouse.down != null) {\n      return;\n    }\n    if (this.mouse.position === null) {\n      return;\n    }\n    if (!this.isTimeline) {\n      return;\n    }\n\n    const ctx = this.context;\n    const rows = this.data.length;\n    //let rowHeight = this.panel.rowHeight;\n    const height = this._renderDimensions.height;\n\n    ctx.beginPath();\n    ctx.moveTo(this.mouse.position.x, 0);\n    ctx.lineTo(this.mouse.position.x, height);\n    ctx.strokeStyle = this.panel.crosshairColor;\n    ctx.setLineDash([]);\n    ctx.lineWidth = 1;\n    ctx.stroke();\n\n    // Draw a Circle around the point if showing a tooltip\n    if (this.externalPT && rows > 1) {\n      ctx.beginPath();\n      ctx.arc(this.mouse.position.x, this.mouse.position.y, 3, 0, 2 * Math.PI, false);\n      ctx.fillStyle = this.panel.crosshairColor;\n      ctx.fill();\n      ctx.lineWidth = 1;\n    }\n  }\n\n  _renderAnnotations() {\n    if (!this.panel.showTimeAxis) {\n      return;\n    }\n    if (!this.annotations) {\n      return;\n    }\n\n    const ctx = this.context;\n    //const rows = this.data.length;\n    const rowHeight = this.panel.rowHeight;\n    //const height = this._renderDimensions.height;\n    const width = this._renderDimensions.width;\n    const top = this._renderDimensions.rowsHeight;\n\n    const headerColumnIndent = 0; // header inset (zero for now)\n    ctx.font = this.panel.textSizeTime + 'px \"Open Sans\", Helvetica, Arial, sans-serif';\n    ctx.fillStyle = '#7FE9FF';\n    ctx.textAlign = 'left';\n    ctx.strokeStyle = '#7FE9FF';\n\n    ctx.textBaseline = 'top';\n    ctx.setLineDash([3, 3]);\n    ctx.lineDashOffset = 0;\n    ctx.lineWidth = 2;\n\n    const min = _.isUndefined(this.range.from) ? null : this.range.from.valueOf();\n    const max = _.isUndefined(this.range.to) ? null : this.range.to.valueOf();\n    //let xPos = headerColumnIndent;\n\n    _.forEach(this.annotations, anno => {\n      ctx.setLineDash([3, 3]);\n\n      let isAlert = false;\n      if (anno.source.iconColor) {\n        ctx.fillStyle = anno.source.iconColor;\n        ctx.strokeStyle = anno.source.iconColor;\n      } else if (anno.annotation === undefined) {\n        // grafana annotation\n        ctx.fillStyle = '#7FE9FF';\n        ctx.strokeStyle = '#7FE9FF';\n      } else {\n        isAlert = true;\n        ctx.fillStyle = '#EA0F3B'; //red\n        ctx.strokeStyle = '#EA0F3B';\n      }\n\n      this._drawVertical(\n        ctx,\n        anno.time,\n        min,\n        max,\n        headerColumnIndent,\n        top,\n        width,\n        isAlert\n      );\n\n      //do the TO rangeMap\n      if (anno.isRegion) {\n        this._drawVertical(\n          ctx,\n          anno.timeEnd,\n          min,\n          max,\n          headerColumnIndent,\n          top,\n          width,\n          isAlert\n        );\n\n        //draw horizontal line at bottom\n        const xPosStart = headerColumnIndent + ((anno.time - min) / (max - min)) * width;\n        const xPosEnd = headerColumnIndent + ((anno.timeEnd - min) / (max - min)) * width;\n\n        // draw ticks\n        ctx.beginPath();\n        ctx.moveTo(xPosStart, top + 5);\n        ctx.lineTo(xPosEnd, top + 5);\n\n        ctx.lineWidth = 4;\n        ctx.setLineDash([]);\n        ctx.stroke();\n        //end horizontal\n        //do transparency\n        if (isAlert === false) {\n          ctx.save();\n          ctx.fillStyle = '#7FE9FF';\n          ctx.globalAlpha = 0.2;\n          ctx.fillRect(xPosStart, 0, xPosEnd - xPosStart, rowHeight);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    });\n  }\n\n  _drawVertical(ctx, timeVal, min, max, headerColumnIndent, top, width, isAlert) {\n    const xPos = headerColumnIndent + ((timeVal - min) / (max - min)) * width;\n\n    // draw ticks\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(xPos, top + 5);\n    ctx.lineTo(xPos, 0);\n    ctx.stroke();\n\n    // draw triangle\n    ctx.moveTo(xPos + 0, top);\n    ctx.lineTo(xPos - 5, top + 7);\n    ctx.lineTo(xPos + 5, top + 7);\n    ctx.fill();\n\n    // draw alert label\n    if (isAlert === true) {\n      const dateStr = '\\u25B2';\n      const xOffset = ctx.measureText(dateStr).width / 2;\n      ctx.fillText(dateStr, xPos - xOffset, top + 10);\n    }\n  }\n}\n\nexport {DiscretePanelCtrl as PanelCtrl};\n","import {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nimport moment from 'moment';\nimport $ from 'jquery';\n\nimport appEvents from 'app/core/app_events';\n\n// Expects a template with:\n// <div class=\"canvas-spot\"></div>\nexport class CanvasPanelCtrl extends MetricsPanelCtrl {\n  data: any;\n  mouse: any;\n  $tooltip: any;\n  wrap: any;\n  canvas: any;\n  context: any;\n  _devicePixelRatio: number;\n\n  /** @ngInject */\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.data = null;\n    this.mouse = {\n      position: null,\n      down: null,\n    };\n    this.$tooltip = $('<div class=\"graph-tooltip\">');\n\n    this.events.on('panel-initialized', this.onPanelInitialized.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n\n    this._devicePixelRatio = 1;\n    if (window.devicePixelRatio !== undefined) {\n      this._devicePixelRatio = window.devicePixelRatio;\n    }\n  }\n\n  onPanelInitialized() {\n    //console.log(\"onPanelInitalized()\");\n    this.render();\n  }\n\n  onRefresh() {\n    //console.log(\"onRefresh()\");\n    this.render();\n  }\n\n  // Typically you will override this\n  onRender() {\n    if (!this.context) {\n      console.log('No context!');\n      return;\n    }\n    console.log('canvas render', this.mouse);\n\n    const rect = this.wrap.getBoundingClientRect();\n\n    const height = Math.max(this.height, 100);\n    const width = rect.width;\n    this.canvas.width = width;\n    this.canvas.height = height;\n\n    const centerV = height / 2;\n\n    const ctx = this.context;\n    ctx.lineWidth = 1;\n    ctx.textBaseline = 'middle';\n\n    let time = '';\n    if (this.mouse.position != null) {\n      time = this.dashboard.formatDate(moment(this.mouse.position.ts));\n    }\n\n    ctx.fillStyle = '#999999';\n    ctx.fillRect(0, 0, width, height);\n    ctx.fillStyle = '#111111';\n    ctx.font = '24px \"Open Sans\", Helvetica, Arial, sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Mouse @ ' + time, 10, centerV);\n\n    if (this.mouse.position != null) {\n      if (this.mouse.down != null) {\n        const xmin = Math.min(this.mouse.position.x, this.mouse.down.x);\n        const xmax = Math.max(this.mouse.position.x, this.mouse.down.x);\n\n        // Fill canvas using 'destination-out' and alpha at 0.05\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n        ctx.beginPath();\n        ctx.fillRect(0, 0, xmin, height);\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.fillRect(xmax, 0, width, height);\n        ctx.fill();\n        ctx.globalCompositeOperation = 'source-over';\n      } else {\n        ctx.strokeStyle = '#111';\n        ctx.beginPath();\n        ctx.moveTo(this.mouse.position.x, 0);\n        ctx.lineTo(this.mouse.position.x, height);\n        ctx.lineWidth = 3;\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(this.mouse.position.x, 0);\n        ctx.lineTo(this.mouse.position.x, height);\n        ctx.strokeStyle = '#e22c14';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    }\n  }\n\n  clearTT() {\n    this.$tooltip.detach();\n  }\n\n  getMousePosition(evt) {\n    const elapsed = this.range.to - this.range.from;\n    const rect = this.canvas.getBoundingClientRect();\n    const x = evt.offsetX; // - rect.left;\n    const ts = this.range.from + elapsed * (x / parseFloat(rect.width));\n    const y = evt.clientY - rect.top;\n\n    return {\n      x: x,\n      y: y,\n      yRel: y / parseFloat(rect.height),\n      ts: ts,\n      evt: evt,\n    };\n  }\n\n  onGraphHover(evt, showTT, isExternal) {\n    console.log('HOVER', evt, showTT, isExternal);\n  }\n\n  onMouseClicked(where, event) {\n    console.log('CANVAS CLICKED', where, event);\n    this.render();\n  }\n\n  onMouseSelectedRange(range, event) {\n    console.log('CANVAS Range', range, event);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.wrap = elem.find('.canvas-spot')[0];\n    this.canvas = document.createElement('canvas');\n    this.wrap.appendChild(this.canvas);\n\n    $(this.canvas).css('cursor', 'pointer');\n    $(this.wrap).css('width', '100%');\n\n    //  console.log( 'link', this );\n\n    this.context = this.canvas.getContext('2d');\n    this.canvas.addEventListener(\n      'mousemove',\n      evt => {\n        if (!this.range) {\n          return; // skip events before we have loaded\n        }\n\n        this.mouse.position = this.getMousePosition(evt);\n        const info = {\n          pos: {\n            pageX: evt.pageX,\n            pageY: evt.pageY,\n            x: this.mouse.position.ts,\n            y: this.mouse.position.y,\n            panelRelY: this.mouse.position.yRel,\n            panelRelX: this.mouse.position.xRel,\n          },\n          evt: evt,\n          panel: this.panel,\n        };\n        appEvents.emit('graph-hover', info);\n        if (this.mouse.down != null) {\n          $(this.canvas).css('cursor', 'col-resize');\n        }\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'mouseout',\n      evt => {\n        if (this.mouse.down == null) {\n          this.mouse.position = null;\n          this.onRender();\n          this.$tooltip.detach();\n          appEvents.emit('graph-hover-clear');\n        }\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'mousedown',\n      evt => {\n        this.mouse.down = this.getMousePosition(evt);\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'mouseenter',\n      evt => {\n        if (this.mouse.down && !evt.buttons) {\n          this.mouse.position = null;\n          this.mouse.down = null;\n          this.onRender();\n          this.$tooltip.detach();\n          appEvents.emit('graph-hover-clear');\n        }\n        $(this.canvas).css('cursor', 'pointer');\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'mouseup',\n      evt => {\n        this.$tooltip.detach();\n        const up = this.getMousePosition(evt);\n        if (this.mouse.down != null) {\n          if (up.x === this.mouse.down.x && up.y === this.mouse.down.y) {\n            this.mouse.position = null;\n            this.mouse.down = null;\n            this.onMouseClicked(up, evt);\n          } else {\n            const min = Math.min(this.mouse.down.ts, up.ts);\n            const max = Math.max(this.mouse.down.ts, up.ts);\n            const range = {from: moment.utc(min), to: moment.utc(max)};\n            this.mouse.position = up;\n            this.onMouseSelectedRange(range, evt);\n          }\n        }\n        this.mouse.down = null;\n        this.mouse.position = null;\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'dblclick',\n      evt => {\n        this.mouse.position = null;\n        this.mouse.down = null;\n        this.onRender();\n        this.$tooltip.detach();\n        appEvents.emit('graph-hover-clear');\n\n        console.log('TODO, ZOOM OUT');\n      },\n      true\n    );\n\n    // global events\n    appEvents.on(\n      'graph-hover',\n      event => {\n        // ignore other graph hover events if shared tooltip is disabled\n        const isThis = event.panel.id === this.panel.id;\n        if (!this.dashboard.sharedTooltipModeEnabled() && !isThis) {\n          return;\n        }\n\n        // ignore if other panels are fullscreen\n        if (this.otherPanelInFullscreenMode()) {\n          return;\n        }\n\n        // Calculate the mouse position when it came from somewhere else\n        if (!isThis) {\n          if (!event.pos.x || !this.range) {\n            // NOTE, this happens when a panel has no data\n            // console.log('Invalid hover point', event);\n            return;\n          }\n\n          const ts = event.pos.x;\n          const rect = this.canvas.getBoundingClientRect();\n          const elapsed = this.range.to - this.range.from;\n          const x = ((ts - this.range.from) / elapsed) * rect.width;\n\n          this.mouse.position = {\n            x: x,\n            y: event.pos.panelRelY * rect.height,\n            yRel: event.pos.panelRelY,\n            ts: ts,\n            gevt: event,\n          };\n          //console.log( \"Calculate mouseInfo\", event, this.mouse.position);\n        }\n\n        this.onGraphHover(\n          event,\n          isThis || !this.dashboard.sharedCrosshairModeOnly(),\n          !isThis\n        );\n      },\n      scope\n    );\n\n    appEvents.on(\n      'graph-hover-clear',\n      (event, info) => {\n        this.mouse.position = null;\n        this.mouse.down = null;\n        this.render();\n        this.$tooltip.detach();\n      },\n      scope\n    );\n\n    // scope.$on('$destroy', () => {\n    //   this.$tooltip.destroy();\n    //   elem.off();\n    //   elem.remove();\n    // });\n  }\n\n  // Utility Functions for time axis\n  //---------------------------------\n\n  time_format(range: number, secPerTick: number): string {\n    const oneDay = 86400000;\n    const oneYear = 31536000000;\n\n    if (secPerTick <= 45) {\n      return '%H:%M:%S';\n    }\n    if (secPerTick <= 7200 || range <= oneDay) {\n      return '%H:%M';\n    }\n    if (secPerTick <= 80000) {\n      return '%m/%d %H:%M';\n    }\n    if (secPerTick <= 2419200 || range <= oneYear) {\n      return '%m/%d';\n    }\n    return '%Y-%m';\n  }\n\n  getTimeResolution(estTimeInterval: number): number {\n    const timeIntInSecs = estTimeInterval / 1000;\n\n    if (timeIntInSecs <= 30) {\n      return 30 * 1000;\n    }\n\n    if (timeIntInSecs <= 60) {\n      return 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 5) {\n      return 5 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 10) {\n      return 10 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 30) {\n      return 30 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 60) {\n      return 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 60) {\n      return 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 2 * 60 * 60) {\n      return 2 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 6 * 60 * 60) {\n      return 6 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 12 * 60 * 60) {\n      return 12 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 24 * 60 * 60) {\n      return 24 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 2 * 24 * 60 * 60) {\n      return 2 * 24 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 7 * 24 * 60 * 60) {\n      return 7 * 24 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 30 * 24 * 60 * 60) {\n      return 30 * 24 * 60 * 60 * 1000;\n    }\n\n    return 6 * 30 * 24 * 60 * 60 * 1000;\n  }\n\n  roundDate(timeStamp, roundee) {\n    timeStamp -= timeStamp % roundee; //subtract amount of time since midnight\n    return timeStamp;\n  }\n\n  formatDate(d, fmt) {\n    const monthNames = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n    const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    if (typeof d.strftime === 'function') {\n      return d.strftime(fmt);\n    }\n\n    const r = [];\n    let escape = false;\n    const hours = d.getHours();\n    const isAM = hours < 12;\n    let hours12;\n\n    if (hours > 12) {\n      hours12 = hours - 12;\n    } else if (hours === 0) {\n      hours12 = 12;\n    } else {\n      hours12 = hours;\n    }\n\n    for (let i = 0; i < fmt.length; ++i) {\n      let c = fmt.charAt(i);\n\n      if (escape) {\n        switch (c) {\n          case 'a':\n            c = '' + dayNames[d.getDay()];\n            break;\n          case 'b':\n            c = '' + monthNames[d.getMonth()];\n            break;\n          case 'd':\n            c = this.leftPad(d.getDate(), '');\n            break;\n          case 'e':\n            c = this.leftPad(d.getDate(), ' ');\n            break;\n          case 'h': // For back-compat with 0.7; remove in 1.0\n          case 'H':\n            c = this.leftPad(hours, null);\n            break;\n          case 'I':\n            c = this.leftPad(hours12, null);\n            break;\n          case 'l':\n            c = this.leftPad(hours12, ' ');\n            break;\n          case 'm':\n            c = this.leftPad(d.getMonth() + 1, '');\n            break;\n          case 'M':\n            c = this.leftPad(d.getMinutes(), null);\n            break;\n          // quarters not in Open Group's strftime specification\n          case 'q':\n            c = '' + (Math.floor(d.getMonth() / 3) + 1);\n            break;\n          case 'S':\n            c = this.leftPad(d.getSeconds(), null);\n            break;\n          case 'y':\n            c = this.leftPad(d.getFullYear() % 100, null);\n            break;\n          case 'Y':\n            c = '' + d.getFullYear();\n            break;\n          case 'p':\n            c = isAM ? '' + 'am' : '' + 'pm';\n            break;\n          case 'P':\n            c = isAM ? '' + 'AM' : '' + 'PM';\n            break;\n          case 'w':\n            c = '' + d.getDay();\n            break;\n        }\n        r.push(c);\n        escape = false;\n      } else {\n        if (c === '%') {\n          escape = true;\n        } else {\n          r.push(c);\n        }\n      }\n    }\n\n    return r.join('');\n  }\n\n  leftPad(n, pad) {\n    n = '' + n;\n    pad = '' + (pad == null ? '0' : pad);\n    return n.length === 1 ? pad + n : n;\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import _ from 'lodash';\n\nexport class PointInfo {\n  val: string;\n  start: number; // timestamp\n  ms = 0; // elapsed time\n\n  constructor(val: string, start: number) {\n    this.val = val;\n    this.start = start;\n  }\n}\n\nexport class LegendValue {\n  val: string;\n  ms = 0; // elapsed time\n  count = 0;\n  per = 0;\n\n  constructor(val: string) {\n    this.val = val;\n  }\n}\n\nexport class DistinctPoints {\n  changes: PointInfo[] = [];\n  legendInfo: LegendValue[] = [];\n  last: PointInfo = null;\n  asc = false;\n  transitionCount = 0;\n  distinctValuesCount = 0;\n  elapsed = 0;\n\n  constructor(public name) {}\n\n  // ts numeric ms,\n  // val is the normalized value\n  add(ts: number, val: string) {\n    if (this.last == null) {\n      this.last = {\n        val: val,\n        start: ts,\n        ms: 0,\n      };\n      this.changes.push(this.last);\n    } else if (ts === this.last.start) {\n      console.log('skip point with duplicate timestamp', ts, val);\n      return;\n    } else {\n      if (this.changes.length === 1) {\n        this.asc = ts > this.last.start;\n      }\n\n      if (ts > this.last.start !== this.asc) {\n        console.log('skip out of order point', ts, val);\n        return;\n      }\n\n      // Same value\n      if (val === this.last.val) {\n        if (!this.asc) {\n          this.last.start = ts;\n        }\n      } else {\n        this.last = {\n          val: val,\n          start: ts,\n          ms: 0,\n        };\n        this.changes.push(this.last);\n      }\n    }\n  }\n\n  finish(ctrl) {\n    if (this.changes.length < 1) {\n      console.log('no points found!');\n      return;\n    }\n\n    if (!this.asc) {\n      this.last = this.changes[0];\n      _.reverse(this.changes);\n    }\n\n    // Add a point beyond the controls\n    if (this.last.start < ctrl.range.to) {\n      const until = ctrl.range.to + 1;\n      // let now = Date.now();\n      // if(this.last.start < now && ctrl.range.to > now) {\n      //   until = now;\n      // }\n\n      // This won't be shown, but will keep the count consistent\n      this.changes.push({\n        val: this.last.val,\n        start: until,\n        ms: 0,\n      });\n    }\n\n    this.transitionCount = 0;\n    const distinct = new Map<string, LegendValue>();\n    let last: PointInfo = this.changes[0];\n    for (let i = 1; i < this.changes.length; i++) {\n      const pt = this.changes[i];\n\n      let s = last.start;\n      let e = pt.start;\n      if (s < ctrl.range.from) {\n        s = ctrl.range.from;\n      } else if (s < ctrl.range.to) {\n        this.transitionCount++;\n      }\n\n      if (e > ctrl.range.to) {\n        e = ctrl.range.to;\n      }\n\n      last.ms = e - s;\n      if (last.ms > 0) {\n        if (distinct.has(last.val)) {\n          const v = distinct.get(last.val);\n          v.ms += last.ms;\n          v.count++;\n        } else {\n          distinct.set(last.val, {val: last.val, ms: last.ms, count: 1, per: 0});\n        }\n      }\n      last = pt;\n    }\n\n    const elapsed = ctrl.range.to - ctrl.range.from;\n    this.elapsed = elapsed;\n\n    distinct.forEach((value: LegendValue, key: any) => {\n      value.per = value.ms / elapsed;\n      this.legendInfo.push(value);\n    });\n    this.distinctValuesCount = _.size(this.legendInfo);\n\n    if (!ctrl.isTimeline) {\n      this.legendInfo = _.orderBy(this.legendInfo, ['ms'], ['desc']);\n    }\n  }\n\n  static combineLegend(data: DistinctPoints[], ctrl: any): DistinctPoints {\n    if (data.length === 1) {\n      return data[0];\n    }\n\n    const merged: DistinctPoints = new DistinctPoints('merged');\n    let elapsed = 0;\n    const distinct = new Map<string, LegendValue>();\n    _.forEach(data, (m: DistinctPoints) => {\n      merged.transitionCount += m.transitionCount;\n      elapsed += m.elapsed;\n\n      _.forEach(m.legendInfo, (leg: LegendValue) => {\n        if (distinct.has(leg.val)) {\n          const v = distinct.get(leg.val);\n          v.ms += leg.ms;\n          v.count += leg.count;\n          // per gets recalculated at the end\n        } else {\n          distinct.set(leg.val, {val: leg.val, ms: leg.ms, count: leg.count, per: 0});\n        }\n      });\n    });\n\n    merged.elapsed = elapsed;\n    distinct.forEach((value: LegendValue, key: any) => {\n      value.per = value.ms / elapsed;\n      merged.legendInfo.push(value);\n    });\n    merged.distinctValuesCount = _.size(merged.legendInfo);\n    return merged;\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;"],"sourceRoot":""}