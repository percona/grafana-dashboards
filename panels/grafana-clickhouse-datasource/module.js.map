{"version":3,"file":"module.js","mappings":"mJAAA,MAyEIA,EAAY,WAChB,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,CAAC,EAAEG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,CAAC,EAAEK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC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GC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,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AGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAA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","sources":["webpack:///../node_modules/js-sql-parser/dist/parser/sqlParser.js","webpack:///../node_modules/lodash/_Symbol.js","webpack:///../node_modules/lodash/_baseGetTag.js","webpack:///../node_modules/lodash/_freeGlobal.js","webpack:///../node_modules/lodash/_getRawTag.js","webpack:///../node_modules/lodash/_objectToString.js","webpack:///../node_modules/lodash/_root.js","webpack:///../node_modules/lodash/isArray.js","webpack:///../node_modules/lodash/isObjectLike.js","webpack:///../node_modules/lodash/isString.js","webpack:///../node_modules/moo/moo.js","webpack:///../node_modules/nearley/lib/nearley.js","webpack:///../node_modules/pgsql-ast-parser/index.js","webpack:///../node_modules/semver/classes/comparator.js","webpack:///../node_modules/semver/classes/range.js","webpack:///../node_modules/semver/classes/semver.js","webpack:///../node_modules/semver/functions/clean.js","webpack:///../node_modules/semver/functions/cmp.js","webpack:///../node_modules/semver/functions/coerce.js","webpack:///../node_modules/semver/functions/compare-build.js","webpack:///../node_modules/semver/functions/compare-loose.js","webpack:///../node_modules/semver/functions/compare.js","webpack:///../node_modules/semver/functions/diff.js","webpack:///../node_modules/semver/functions/eq.js","webpack:///../node_modules/semver/functions/gt.js","webpack:///../node_modules/semver/functions/gte.js","webpack:///../node_modules/semver/functions/inc.js","webpack:///../node_modules/semver/functions/lt.js","webpack:///../node_modules/semver/functions/lte.js","webpack:///../node_modules/semver/functions/major.js","webpack:///../node_modules/semver/functions/minor.js","webpack:///../node_modules/semver/functions/neq.js","webpack:///../node_modules/semver/functions/parse.js","webpack:///../node_modules/semver/functions/patch.js","webpack:///../node_modules/semver/functions/prerelease.js","webpack:///../node_modules/semver/functions/rcompare.js","webpack:///../node_modules/semver/functions/rsort.js","webpack:///../node_modules/semver/functions/satisfies.js","webpack:///../node_modules/semver/functions/sort.js","webpack:///../node_modules/semver/functions/valid.js","webpack:///../node_modules/semver/index.js","webpack:///../node_modules/semver/internal/constants.js","webpack:///../node_modules/semver/internal/debug.js","webpack:///../node_modules/semver/internal/identifiers.js","webpack:///../node_modules/semver/internal/lrucache.js","webpack:///../node_modules/semver/internal/parse-options.js","webpack:///../node_modules/semver/internal/re.js","webpack:///../node_modules/semver/ranges/gtr.js","webpack:///../node_modules/semver/ranges/intersects.js","webpack:///../node_modules/semver/ranges/ltr.js","webpack:///../node_modules/semver/ranges/max-satisfying.js","webpack:///../node_modules/semver/ranges/min-satisfying.js","webpack:///../node_modules/semver/ranges/min-version.js","webpack:///../node_modules/semver/ranges/outside.js","webpack:///../node_modules/semver/ranges/simplify.js","webpack:///../node_modules/semver/ranges/subset.js","webpack:///../node_modules/semver/ranges/to-comparators.js","webpack:///../node_modules/semver/ranges/valid.js","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"lodash\"","webpack:///external amd \"react\"","webpack:///external amd \"rxjs\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./types/queryBuilder.ts","webpack:///./types/sql.ts","webpack:///./data/ast.ts","webpack:///./data/adHocFilter.ts","webpack:///../node_modules/@grafana/schema/dist/esm/common/common.gen.js","webpack:///./data/logs.ts","webpack:///./otel.ts","webpack:///./data/sqlGenerator.ts","webpack:///./utils/version.ts","webpack:///./data/utils.ts","webpack:///./data/CHDatasource.ts","webpack:///./components/ui/CertificationKey.tsx","webpack:///./types/config.ts","webpack:///./components/experimental/ConfigSection/GenericConfigSection.tsx","webpack:///./components/experimental/ConfigSection/ConfigSection.tsx","webpack:///./components/experimental/ConfigSection/ConfigSubSection.tsx","webpack:///./components/experimental/ConfigSection/DataSourceDescription.tsx","webpack:///./components/Divider.tsx","webpack:///./labels.ts","webpack:///./components/configEditor/DefaultDatabaseTableConfig.tsx","webpack:///./components/configEditor/QuerySettingsConfig.tsx","webpack:///./components/queryBuilder/OtelVersionSelect.tsx","webpack:///./components/configEditor/LabeledInput.tsx","webpack:///./components/configEditor/LogsConfig.tsx","webpack:///./styles.ts","webpack:///./components/queryBuilder/DurationUnitSelect.tsx","webpack:///./components/configEditor/TracesConfig.tsx","webpack:///./selectors.ts","webpack:///./components/configEditor/HttpHeadersConfig.tsx","webpack:///./views/CHConfigEditorHooks.ts","webpack:///./components/configEditor/AliasTableConfig.tsx","webpack:///./components/queryBuilder/utils.ts","webpack:///./components/queryBuilder/EditorTypeSwitcher.tsx","webpack:///./components/queryBuilder/ColumnsEditor.tsx","webpack:///./components/queryBuilder/ColumnSelect.tsx","webpack:///./components/queryBuilder/OrderByEditor.tsx","webpack:///./components/queryBuilder/LimitEditor.tsx","webpack:///./components/queryBuilder/FilterEditor.tsx","webpack:///./hooks/useUniqueMapKeys.ts","webpack:///./data/columnFilters.ts","webpack:///./hooks/useBuilderOptionChanges.ts","webpack:///./hooks/useColumns.ts","webpack:///./hooks/useBuilderOptionsState.ts","webpack:///./hooks/useIsNewQuery.ts","webpack:///./components/queryBuilder/views/LogsQueryBuilder.tsx","webpack:///./components/queryBuilder/views/logsQueryBuilderHooks.ts","webpack:///./components/queryBuilder/ModeSwitch.tsx","webpack:///./components/queryBuilder/AggregateEditor.tsx","webpack:///./components/queryBuilder/GroupByEditor.tsx","webpack:///./components/queryBuilder/views/TimeSeriesQueryBuilder.tsx","webpack:///./components/queryBuilder/views/timeSeriesQueryBuilderHooks.ts","webpack:///./components/queryBuilder/views/TableQueryBuilder.tsx","webpack:///./components/queryBuilder/SqlPreview.tsx","webpack:///./components/queryBuilder/DatabaseTableSelect.tsx","webpack:///./hooks/useDatabases.ts","webpack:///./hooks/useTables.ts","webpack:///./components/queryBuilder/QueryTypeSwitcher.tsx","webpack:///./components/queryBuilder/TraceIdInput.tsx","webpack:///./components/queryBuilder/views/TraceQueryBuilder.tsx","webpack:///./components/queryBuilder/views/traceQueryBuilderHooks.ts","webpack:///./components/queryBuilder/QueryBuilder.tsx","webpack:///./components/sqlProvider.ts","webpack:///./components/suggestions.ts","webpack:///./data/validate.ts","webpack:///./components/SqlEditor.tsx","webpack:///./data/migration.ts","webpack:///./views/CHQueryEditor.tsx","webpack:///./module.ts","webpack:///./views/CHConfigEditor.tsx","webpack:///./tracking.ts"],"sourcesContent":["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar sqlParser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,4],$V2=[2,4],$V3=[1,11],$V4=[1,10],$V5=[2,16],$V6=[1,14],$V7=[1,15],$V8=[1,16],$V9=[6,8],$Va=[2,146],$Vb=[1,19],$Vc=[1,20],$Vd=[16,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Ve=[16,18,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vf=[2,160],$Vg=[1,29],$Vh=[6,8,14,17,146,150,152,154],$Vi=[1,42],$Vj=[1,60],$Vk=[1,52],$Vl=[1,59],$Vm=[1,61],$Vn=[1,62],$Vo=[1,63],$Vp=[1,64],$Vq=[1,65],$Vr=[1,58],$Vs=[1,53],$Vt=[1,54],$Vu=[1,55],$Vv=[1,56],$Vw=[1,57],$Vx=[1,43],$Vy=[1,44],$Vz=[1,45],$VA=[1,34],$VB=[1,66],$VC=[16,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$VD=[6,8,14,17,150,152,154],$VE=[2,143],$VF=[1,75],$VG=[1,76],$VH=[6,8,14,17,43,133,138,144,146,150,152,154],$VI=[1,81],$VJ=[1,78],$VK=[1,79],$VL=[1,80],$VM=[1,82],$VN=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,107,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VO=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,107,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VP=[1,103],$VQ=[1,101],$VR=[1,102],$VS=[1,97],$VT=[1,98],$VU=[1,99],$VV=[1,100],$VW=[1,104],$VX=[1,105],$VY=[1,106],$VZ=[1,107],$V_=[1,108],$V$=[1,109],$V01=[2,103],$V11=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V21=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V31=[1,110],$V41=[1,117],$V51=[2,64],$V61=[1,118],$V71=[16,35,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$V81=[16,29,35,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,119,195],$V91=[1,164],$Va1=[17,43],$Vb1=[2,59],$Vc1=[1,173],$Vd1=[1,171],$Ve1=[1,172],$Vf1=[6,8,138,146],$Vg1=[16,35,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vh1=[6,8,14,17,138,144,146,150,152,154],$Vi1=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vj1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vk1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,79,81,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vl1=[16,35,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vm1=[16,35,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vn1=[16,35,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vo1=[71,74,77],$Vp1=[16,35,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vq1=[1,233],$Vr1=[1,234],$Vs1=[6,8,14,17],$Vt1=[6,8,14,17,43,157],$Vu1=[1,251],$Vv1=[1,247],$Vw1=[2,197],$Vx1=[1,256],$Vy1=[1,257],$Vz1=[6,8,14,17,43,129,135,138,144,146,150,152,154,182],$VA1=[1,259],$VB1=[1,262],$VC1=[1,263],$VD1=[1,264],$VE1=[1,265],$VF1=[2,174],$VG1=[1,261],$VH1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182],$VI1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],$VJ1=[2,199],$VK1=[1,271],$VL1=[6,8,14,17,135,138,144,146,150,152,154],$VM1=[1,280],$VN1=[2,179],$VO1=[170,173],$VP1=[2,210],$VQ1=[1,290],$VR1=[1,291],$VS1=[1,292],$VT1=[1,302],$VU1=[1,311],$VV1=[1,312],$VW1=[6,8,14,17,138,146,150,152,154],$VX1=[1,322],$VY1=[2,204],$VZ1=[1,328],$V_1=[16,152],$V$1=[6,8,14,17,152,154],$V02=[1,354];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"main\":3,\"selectClause\":4,\"semicolonOpt\":5,\"EOF\":6,\"unionClause\":7,\";\":8,\"unionClauseNotParenthesized\":9,\"unionClauseParenthesized\":10,\"order_by_opt\":11,\"limit_opt\":12,\"selectClauseParenthesized\":13,\"UNION\":14,\"distinctOpt\":15,\"(\":16,\")\":17,\"SELECT\":18,\"highPriorityOpt\":19,\"maxStateMentTimeOpt\":20,\"straightJoinOpt\":21,\"sqlSmallResultOpt\":22,\"sqlBigResultOpt\":23,\"sqlBufferResultOpt\":24,\"sqlCacheOpt\":25,\"sqlCalcFoundRowsOpt\":26,\"selectExprList\":27,\"selectDataSetOpt\":28,\"ALL\":29,\"DISTINCT\":30,\"DISTINCTROW\":31,\"HIGH_PRIORITY\":32,\"MAX_STATEMENT_TIME\":33,\"=\":34,\"NUMERIC\":35,\"STRAIGHT_JOIN\":36,\"SQL_SMALL_RESULT\":37,\"SQL_BIG_RESULT\":38,\"SQL_BUFFER_RESULT\":39,\"SQL_CACHE\":40,\"SQL_NO_CACHE\":41,\"SQL_CALC_FOUND_ROWS\":42,\",\":43,\"selectExpr\":44,\"*\":45,\"SELECT_EXPR_STAR\":46,\"expr\":47,\"selectExprAliasOpt\":48,\"AS\":49,\"IDENTIFIER\":50,\"STRING\":51,\"string\":52,\"number\":53,\"EXPONENT_NUMERIC\":54,\"HEX_NUMERIC\":55,\"boolean\":56,\"TRUE\":57,\"FALSE\":58,\"null\":59,\"NULL\":60,\"literal\":61,\"place_holder\":62,\"function_call\":63,\"function_call_param_list\":64,\"function_call_param\":65,\"identifier\":66,\"DOT\":67,\"identifier_list\":68,\"case_expr_opt\":69,\"when_then_list\":70,\"WHEN\":71,\"THEN\":72,\"case_when_else\":73,\"ELSE\":74,\"case_when\":75,\"CASE\":76,\"END\":77,\"simple_expr_prefix\":78,\"+\":79,\"simple_expr\":80,\"-\":81,\"~\":82,\"!\":83,\"BINARY\":84,\"expr_list\":85,\"ROW\":86,\"EXISTS\":87,\"{\":88,\"}\":89,\"bit_expr\":90,\"|\":91,\"&\":92,\"<<\":93,\">>\":94,\"/\":95,\"DIV\":96,\"MOD\":97,\"%\":98,\"^\":99,\"not_opt\":100,\"NOT\":101,\"escape_opt\":102,\"ESCAPE\":103,\"predicate\":104,\"IN\":105,\"BETWEEN\":106,\"AND\":107,\"SOUNDS\":108,\"LIKE\":109,\"REGEXP\":110,\"comparison_operator\":111,\">=\":112,\">\":113,\"<=\":114,\"<\":115,\"<>\":116,\"!=\":117,\"sub_query_data_set_opt\":118,\"ANY\":119,\"boolean_primary\":120,\"IS\":121,\"boolean_extra\":122,\"UNKNOWN\":123,\"&&\":124,\"||\":125,\"OR\":126,\"XOR\":127,\"where_opt\":128,\"WHERE\":129,\"group_by_opt\":130,\"group_by\":131,\"roll_up_opt\":132,\"WITH\":133,\"ROLLUP\":134,\"GROUP_BY\":135,\"group_by_order_by_item_list\":136,\"order_by\":137,\"ORDER_BY\":138,\"group_by_order_by_item\":139,\"sort_opt\":140,\"ASC\":141,\"DESC\":142,\"having_opt\":143,\"HAVING\":144,\"limit\":145,\"LIMIT\":146,\"OFFSET\":147,\"procedure_opt\":148,\"procedure\":149,\"PROCEDURE\":150,\"for_update_lock_in_share_mode_opt\":151,\"FOR\":152,\"UPDATE\":153,\"LOCK\":154,\"SHARE\":155,\"MODE\":156,\"FROM\":157,\"table_references\":158,\"partitionOpt\":159,\"escaped_table_reference\":160,\"table_reference\":161,\"OJ\":162,\"join_inner_cross\":163,\"INNER\":164,\"CROSS\":165,\"left_right\":166,\"LEFT\":167,\"RIGHT\":168,\"out_opt\":169,\"OUTER\":170,\"left_right_out_opt\":171,\"join_table\":172,\"JOIN\":173,\"table_factor\":174,\"join_condition\":175,\"on_join_condition\":176,\"NATURAL\":177,\"join_condition_opt\":178,\"ON\":179,\"USING\":180,\"partition_names\":181,\"PARTITION\":182,\"aliasOpt\":183,\"index_or_key\":184,\"INDEX\":185,\"KEY\":186,\"for_opt\":187,\"identifier_list_opt\":188,\"index_hint_list_opt\":189,\"index_hint_list\":190,\"index_hint\":191,\"USE\":192,\"IGNORE\":193,\"FORCE\":194,\"PLACE_HOLDER\":195,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\";\",14:\"UNION\",16:\"(\",17:\")\",18:\"SELECT\",29:\"ALL\",30:\"DISTINCT\",31:\"DISTINCTROW\",32:\"HIGH_PRIORITY\",33:\"MAX_STATEMENT_TIME\",34:\"=\",35:\"NUMERIC\",36:\"STRAIGHT_JOIN\",37:\"SQL_SMALL_RESULT\",38:\"SQL_BIG_RESULT\",39:\"SQL_BUFFER_RESULT\",40:\"SQL_CACHE\",41:\"SQL_NO_CACHE\",42:\"SQL_CALC_FOUND_ROWS\",43:\",\",45:\"*\",46:\"SELECT_EXPR_STAR\",49:\"AS\",50:\"IDENTIFIER\",51:\"STRING\",54:\"EXPONENT_NUMERIC\",55:\"HEX_NUMERIC\",57:\"TRUE\",58:\"FALSE\",60:\"NULL\",67:\"DOT\",71:\"WHEN\",72:\"THEN\",74:\"ELSE\",76:\"CASE\",77:\"END\",79:\"+\",81:\"-\",82:\"~\",83:\"!\",84:\"BINARY\",86:\"ROW\",87:\"EXISTS\",88:\"{\",89:\"}\",91:\"|\",92:\"&\",93:\"<<\",94:\">>\",95:\"/\",96:\"DIV\",97:\"MOD\",98:\"%\",99:\"^\",101:\"NOT\",103:\"ESCAPE\",105:\"IN\",106:\"BETWEEN\",107:\"AND\",108:\"SOUNDS\",109:\"LIKE\",110:\"REGEXP\",112:\">=\",113:\">\",114:\"<=\",115:\"<\",116:\"<>\",117:\"!=\",119:\"ANY\",121:\"IS\",123:\"UNKNOWN\",124:\"&&\",125:\"||\",126:\"OR\",127:\"XOR\",129:\"WHERE\",133:\"WITH\",134:\"ROLLUP\",135:\"GROUP_BY\",138:\"ORDER_BY\",141:\"ASC\",142:\"DESC\",144:\"HAVING\",146:\"LIMIT\",147:\"OFFSET\",150:\"PROCEDURE\",152:\"FOR\",153:\"UPDATE\",154:\"LOCK\",155:\"SHARE\",156:\"MODE\",157:\"FROM\",162:\"OJ\",164:\"INNER\",165:\"CROSS\",167:\"LEFT\",168:\"RIGHT\",170:\"OUTER\",173:\"JOIN\",177:\"NATURAL\",179:\"ON\",180:\"USING\",182:\"PARTITION\",185:\"INDEX\",186:\"KEY\",192:\"USE\",193:\"IGNORE\",194:\"FORCE\",195:\"PLACE_HOLDER\"},\nproductions_: [0,[3,3],[3,3],[5,1],[5,0],[7,1],[7,3],[10,4],[10,4],[13,3],[9,4],[9,4],[4,12],[15,1],[15,1],[15,1],[15,0],[19,1],[19,0],[20,3],[20,0],[21,1],[21,0],[22,1],[22,0],[23,1],[23,0],[24,1],[24,0],[25,0],[25,1],[25,1],[26,1],[26,0],[27,3],[27,1],[44,1],[44,1],[44,2],[48,0],[48,2],[48,1],[48,2],[48,1],[52,1],[53,1],[53,1],[53,1],[56,1],[56,1],[59,1],[61,1],[61,1],[61,1],[61,1],[61,1],[63,4],[64,3],[64,1],[65,0],[65,1],[65,1],[65,2],[65,1],[66,1],[66,3],[68,1],[68,3],[69,0],[69,1],[70,4],[70,5],[73,0],[73,2],[75,5],[78,2],[78,2],[78,2],[78,2],[78,2],[80,1],[80,1],[80,1],[80,1],[80,3],[80,4],[80,3],[80,4],[80,4],[80,1],[90,1],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[100,0],[100,1],[102,0],[102,2],[104,1],[104,6],[104,6],[104,6],[104,4],[104,5],[104,4],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[118,1],[118,1],[120,1],[120,4],[120,3],[120,6],[122,1],[122,1],[47,1],[47,4],[47,2],[47,3],[47,3],[47,3],[47,3],[47,3],[85,1],[85,3],[128,0],[128,2],[130,0],[130,1],[132,0],[132,2],[131,3],[11,0],[11,1],[137,3],[136,1],[136,3],[139,2],[140,0],[140,1],[140,1],[143,0],[143,2],[145,2],[145,4],[145,4],[12,0],[12,1],[148,0],[148,1],[149,2],[151,0],[151,2],[151,4],[28,0],[28,10],[158,1],[158,3],[160,1],[160,4],[163,0],[163,1],[163,1],[166,1],[166,1],[169,0],[169,1],[171,0],[171,2],[172,4],[172,5],[172,4],[172,6],[172,5],[178,0],[178,1],[176,2],[175,1],[175,4],[161,1],[161,1],[181,1],[181,3],[159,0],[159,4],[183,0],[183,2],[183,1],[184,1],[184,1],[187,0],[187,2],[187,2],[187,2],[188,0],[188,1],[189,0],[189,1],[190,1],[190,3],[191,6],[191,6],[191,6],[174,4],[174,4],[174,3],[174,3],[62,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\n return {nodeType: 'Main', value: $$[$0-2], hasSemicolon: $$[$0-1]}; \nbreak;\ncase 3: case 144:\n this.$ = true \nbreak;\ncase 4:\n this.$ = false \nbreak;\ncase 5: case 13: case 14: case 15: case 17: case 19: case 21: case 23: case 25: case 27: case 30: case 31: case 32: case 51: case 52: case 53: case 54: case 55: case 60: case 61: case 63: case 69: case 73: case 80: case 81: case 82: case 83: case 89: case 90: case 104: case 106: case 107: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122: case 123: case 127: case 129: case 140: case 142: case 147: case 153: case 154: case 156: case 161: case 163: case 164: case 175: case 176: case 177: case 178: case 180: case 189: case 191: case 193: case 194: case 202: case 203: case 209: case 211:\n this.$ = $$[$0] \nbreak;\ncase 6:\n this.$ = $$[$0-2], this.$.orderBy = $$[$0-1], this.$.limit = $$[$0]; \nbreak;\ncase 7: case 8:\n this.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] }; \nbreak;\ncase 9:\n this.$ = { type: 'SelectParenthesized', value: $$[$0-1] }; \nbreak;\ncase 10: case 11:\n this.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] } \nbreak;\ncase 12:\n\n        this.$ = {\n          type: 'Select',\n          distinctOpt: $$[$0-10],\n          highPriorityOpt: $$[$0-9],\n          maxStateMentTimeOpt: $$[$0-8],\n          straightJoinOpt: $$[$0-7],\n          sqlSmallResultOpt: $$[$0-6],\n          sqlBigResultOpt: $$[$0-5],\n          sqlBufferResultOpt: $$[$0-4],\n          sqlCacheOpt: $$[$0-3],\n          sqlCalcFoundRowsOpt: $$[$0-2],\n          selectItems: $$[$0-1],\n          from: $$[$0].from,\n          partition: $$[$0].partition,\n          where: $$[$0].where,\n          groupBy: $$[$0].groupBy,\n          having: $$[$0].having,\n          orderBy: $$[$0].orderBy,\n          limit: $$[$0].limit,\n          procedure: $$[$0].procedure,\n          updateLockMode: $$[$0].updateLockMode\n        }\n      \nbreak;\ncase 16: case 18: case 20: case 22: case 24: case 26: case 28: case 29: case 33: case 59: case 68: case 72: case 103: case 105: case 139: case 141: case 143: case 146: case 152: case 155: case 160: case 162: case 165: case 174: case 179: case 188: case 197: case 204: case 208: case 210:\n this.$ = null \nbreak;\ncase 34:\n $$[$0-2].value.push($$[$0]); \nbreak;\ncase 35:\n this.$ = { type: 'SelectExpr', value: [ $$[$0] ] } \nbreak;\ncase 36: case 37: case 64:\n this.$ = { type: 'Identifier', value: $$[$0] } \nbreak;\ncase 38:\n this.$ = $$[$0-1]; this.$.alias = $$[$0].alias; this.$.hasAs = $$[$0].hasAs; \nbreak;\ncase 39: case 199:\n this.$ = {alias: null, hasAs: null} \nbreak;\ncase 40: case 42:\n this.$ = {alias: $$[$0], hasAs: true} \nbreak;\ncase 41:\n this.$ = {alias: $$[$0], hasAs: false} \nbreak;\ncase 43:\n this.$ = {alias: $$[$01], hasAs: false} \nbreak;\ncase 44:\n this.$ = { type: 'String', value: $$[$0] } \nbreak;\ncase 45: case 46: case 47:\n this.$ = { type: 'Number', value: $$[$0] } \nbreak;\ncase 48:\n this.$ = { type: 'Boolean', value: 'TRUE' } \nbreak;\ncase 49:\n this.$ = { type: 'Boolean', value: 'FALSE' } \nbreak;\ncase 50:\n this.$ = { type: 'Null', value: 'null' } \nbreak;\ncase 56:\n this.$ = {type: 'FunctionCall', name: $$[$0-3], params: $$[$0-1]} \nbreak;\ncase 57:\n $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; \nbreak;\ncase 58:\n this.$ = [$$[$0]]; \nbreak;\ncase 62:\n this.$ = { type: 'FunctionCallParam', distinctOpt: $$[$0-1], value: $$[$0] } \nbreak;\ncase 65:\n this.$ = $$[$0-2]; $$[$0-2].value += '.' + $$[$0] \nbreak;\ncase 66:\n this.$ = { type: 'IdentifierList', value: [ $$[$0] ] } \nbreak;\ncase 67: case 171:\n this.$ = $$[$0-2]; $$[$0-2].value.push($$[$0]); \nbreak;\ncase 70:\n this.$ = { type: 'WhenThenList', value: [ { when: $$[$0-2], then: $$[$0] } ] }; \nbreak;\ncase 71:\n this.$ = $$[$0-4]; this.$.value.push({ when: $$[$0-2], then: $$[$0] }); \nbreak;\ncase 74:\n this.$ = { type: 'CaseWhen', caseExprOpt: $$[$0-3], whenThenList: $$[$0-2], else: $$[$0-1] } \nbreak;\ncase 75: case 76: case 77: case 78: case 79:\n this.$ = { type: 'Prefix', prefix: $$[$0-1], value: $$[$0] } \nbreak;\ncase 84:\n this.$ = { type: 'SimpleExprParentheses', value: $$[$0-1] } \nbreak;\ncase 85:\n this.$ = { type: 'SimpleExprParentheses', value: $$[$0-2], hasRow: true } \nbreak;\ncase 86:\n this.$ = { type: 'SubQuery', value: $$[$0-1] } \nbreak;\ncase 87:\n this.$ = { type: 'SubQuery', value: $$[$0-1], hasExists: true } \nbreak;\ncase 88:\n this.$ = { type: 'IdentifierExpr', identifier: $$[$0-2], value: $$[$0-1] } \nbreak;\ncase 91:\n this.$ = { type: 'BitExpression', operator: '|', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 92:\n this.$ = { type: 'BitExpression', operator: '&', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 93:\n this.$ = { type: 'BitExpression', operator: '<<', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 94:\n this.$ = { type: 'BitExpression', operator: '>>', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 95:\n this.$ = { type: 'BitExpression', operator: '+', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 96:\n this.$ = { type: 'BitExpression', operator: '-', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 97:\n this.$ = { type: 'BitExpression', operator: '*', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 98:\n this.$ = { type: 'BitExpression', operator: '/', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 99:\n this.$ = { type: 'BitExpression', operator: 'DIV', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 100:\n this.$ = { type: 'BitExpression', operator: 'MOD', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 101:\n this.$ = { type: 'BitExpression', operator: '%', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 102:\n this.$ = { type: 'BitExpression', operator: '^', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 108:\n this.$ = { type: 'InSubQueryPredicate', hasNot: $$[$0-4], left: $$[$0-5] ,right: $$[$0-1] } \nbreak;\ncase 109:\n this.$ = { type: 'InExpressionListPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: $$[$0-1] } \nbreak;\ncase 110:\n this.$ = { type: 'BetweenPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: { left: $$[$0-2], right: $$[$0] } } \nbreak;\ncase 111:\n this.$ = { type: 'SoundsLikePredicate', hasNot: false, left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 112:\n this.$ = { type: 'LikePredicate', hasNot: $$[$0-3], left: $$[$0-4], right: $$[$0-1], escape: $$[$0] } \nbreak;\ncase 113:\n this.$ = { type: 'RegexpPredicate', hasNot: $$[$0-2], left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 124:\n this.$ = { type: 'IsNullBooleanPrimary', hasNot: $$[$0-1] , value: $$[$0-3] } \nbreak;\ncase 125:\n this.$ = { type: 'ComparisonBooleanPrimary', left: $$[$0-2], operator: $$[$0-1], right: $$[$0] } \nbreak;\ncase 126:\n this.$ = { type: 'ComparisonSubQueryBooleanPrimary', operator: $$[$0-4], subQueryOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1] } \nbreak;\ncase 128:\n this.$ = { type: 'BooleanExtra', value: $$[$0] } \nbreak;\ncase 130:\n this.$ = { type: 'IsExpression', hasNot: $$[$0-1], left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 131:\n this.$ = { type: 'NotExpression', value: $$[$0] } \nbreak;\ncase 132: case 135:\n this.$ = { type: 'AndExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 133: case 134:\n this.$ = { type: 'OrExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 136:\n this.$ = { type: 'XORExpression', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 137:\n this.$ = { type: 'ExpressionList', value: [ $$[$0] ] } \nbreak;\ncase 138: case 213:\n this.$ = $$[$0-2]; this.$.value.push($$[$0]); \nbreak;\ncase 145:\n this.$ = { type: 'GroupBy', value: $$[$0-1], rollUp: $$[$0] } \nbreak;\ncase 148:\n this.$ = { type: 'OrderBy', value: $$[$0-1], rollUp: $$[$0] } \nbreak;\ncase 149: case 195:\n this.$ = [ $$[$0] ] \nbreak;\ncase 150:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]); \nbreak;\ncase 151:\n this.$ = { type: 'GroupByOrderByItem', value: $$[$0-1], sortOpt: $$[$0] } \nbreak;\ncase 157:\n this.$ = { type: 'Limit', value: [ $$[$0] ] } \nbreak;\ncase 158:\n this.$ = { type: 'Limit', value: [ $$[$0-2], $$[$0] ] } \nbreak;\ncase 159:\n this.$ = { type: 'Limit', value: [ $$[$0], $$[$0-2] ], offsetMode: true } \nbreak;\ncase 166:\n this.$ = $$[$0-1] + ' ' + $$[$0] \nbreak;\ncase 167:\n this.$ = $$[$0-3] + ' ' + $$[$0-2] + ' ' + $$[$0-1] + ' ' + $$[$0] \nbreak;\ncase 168:\n this.$ = {} \nbreak;\ncase 169:\n this.$ = { from: $$[$0-8], partition: $$[$0-7], where: $$[$0-6], groupBy: $$[$0-5], having: $$[$0-4], orderBy: $$[$0-3], limit: $$[$0-2], procedure: $$[$0-1], updateLockMode: $$[$0] } \nbreak;\ncase 170:\n this.$ = { type: 'TableReferences', value: [ $$[$0] ] } \nbreak;\ncase 172:\n this.$ = { type: 'TableReference', value: $$[$0] } \nbreak;\ncase 173:\n this.$ = { type: 'TableReference', hasOj: true, value: $$[$0-1] } \nbreak;\ncase 181:\n this.$ = { leftRight: null, outOpt: null } \nbreak;\ncase 182:\n this.$ = { leftRight: $$[$0-1], outOpt: $$[$0] } \nbreak;\ncase 183:\n this.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-2], left: $$[$0-3], right: $$[$0], condition: null } \nbreak;\ncase 184:\n this.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-3], left: $$[$0-4], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 185:\n this.$ = { type: 'StraightJoinTable', left: $$[$0-3], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 186:\n this.$ = { type: 'LeftRightJoinTable', leftRight: $$[$0-4], outOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 187:\n this.$ = { type: 'NaturalJoinTable', leftRight: $$[$0-2].leftRight, outOpt: $$[$0-2].outOpt, left: $$[$0-4], right: $$[$0] } \nbreak;\ncase 190:\n this.$ = { type: 'OnJoinCondition', value: $$[$0] } \nbreak;\ncase 192:\n this.$ = { type: 'UsingJoinCondition', value: $$[$0-1] } \nbreak;\ncase 196:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]) \nbreak;\ncase 198:\n this.$ = { type: 'Partitions', value: $$[$0-1] } \nbreak;\ncase 200:\n this.$ = { hasAs: true, alias: $$[$0] } \nbreak;\ncase 201:\n this.$ = { hasAs: false, alias: $$[$0] } \nbreak;\ncase 205: case 206: case 207:\n this.$ = { type: 'ForOptIndexHint', value: $$[$0] } \nbreak;\ncase 212:\n this.$ = { type: 'IndexHintList', value: [ $$[$0] ] } \nbreak;\ncase 214:\n this.$ = { type: 'UseIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 215:\n this.$ = { type: 'IgnoreIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 216:\n this.$ = { type: 'ForceIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 217:\n this.$ = { type: 'TableFactor', value: $$[$0-3], partition: $$[$0-2], alias: $$[$0-1].alias, hasAs: $$[$0-1].hasAs, indexHintOpt: $$[$0] } \nbreak;\ncase 218:\n this.$ = { type: 'TableFactor', value: { type: 'SubQuery', value: $$[$0-2] }, alias: $$[$0].alias, hasAs: $$[$0].hasAs} \nbreak;\ncase 219:\n this.$ = $$[$0-1]; this.$.hasParentheses = true \nbreak;\ncase 220:\n this.$ = { type: 'TableFactor', value: $$[$0-2], alias: $$[$0-1].alias, hasAs: $$[$0-1].hasAs, indexHintOpt: $$[$0] } \nbreak;\ncase 221:\n this.$ = { type: 'PlaceHolder', value: $$[$0], param: $$[$0].slice(2, -1)} \nbreak;\n}\n},\ntable: [{3:1,4:2,7:3,9:5,10:6,13:7,16:$V0,18:$V1},{1:[3]},{5:9,6:$V2,8:$V3,14:$V4},{5:12,6:$V2,8:$V3},o([16,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$V5,{15:13,29:$V6,30:$V7,31:$V8}),o($V9,[2,5]),o([6,8,146],$Va,{11:17,137:18,138:$Vb}),{14:$Vc},{4:21,18:$V1},{6:[1,22]},{15:23,18:$V5,29:$V6,30:$V7,31:$V8},{6:[2,3]},{6:[1,24]},o($Vd,[2,18],{19:25,32:[1,26]}),o($Ve,[2,13]),o($Ve,[2,14]),o($Ve,[2,15]),o($V9,$Vf,{12:27,145:28,146:$Vg}),o($Vh,[2,147]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,136:30,139:31,195:$VB},{15:67,16:$V5,29:$V6,30:$V7,31:$V8},{17:[1,68]},{1:[2,1]},{4:69,9:70,18:$V1},{1:[2,2]},o($VC,[2,20],{20:71,33:[1,72]}),o($Vd,[2,17]),o($V9,[2,6]),o($VD,[2,161]),{35:[1,73]},o($Vh,$VE,{132:74,43:$VF,133:$VG}),o($VH,[2,149]),o($VH,[2,152],{140:77,107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM,141:[1,83],142:[1,84]}),o($VN,[2,129],{111:86,34:[1,87],112:[1,88],113:[1,89],114:[1,90],115:[1,91],116:[1,92],117:[1,93],121:[1,85]}),{16:$Vi,35:$Vj,47:94,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($VO,[2,123]),o($VO,[2,107],{100:95,45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_,101:$V$,105:$V01,106:$V01,109:$V01,110:$V01,108:[1,96]}),o($V11,[2,90]),o($V21,[2,80]),o($V21,[2,81],{67:$V31}),o($V21,[2,82]),o($V21,[2,83]),{4:112,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:111,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:[1,114]},{16:[1,115]},{50:$V41,66:116},o($V21,[2,89]),o($V21,[2,51]),o($V21,[2,52]),o($V21,[2,53]),o($V21,[2,54]),o($V21,[2,55]),o([6,8,14,17,34,36,43,45,49,50,51,67,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194],$V51,{16:$V61}),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:119,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:120,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:121,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:122,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:123,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,47:125,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,69:124,71:[2,68],75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($V21,[2,44]),o($V21,[2,45]),o($V21,[2,46]),o($V21,[2,47]),o($V21,[2,48]),o($V21,[2,49]),o($V21,[2,50]),o($V21,[2,221]),{10:127,13:126,16:$V0},o([6,8,14,138,146],[2,9]),o($V9,[2,10],{14:$V4}),o($V9,[2,11]),o($V71,[2,22],{21:128,36:[1,129]}),{34:[1,130]},o($VD,[2,157],{43:[1,131],147:[1,132]}),o($Vh,[2,148]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,139:133,195:$VB},{134:[1,134]},o($VH,[2,151]),{16:$Vi,35:$Vj,47:135,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:136,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:137,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:138,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:139,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($VH,[2,153]),o($VH,[2,154]),o([57,58,60,123],$V01,{100:140,101:$V$}),{16:$Vi,29:[1,143],35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,104:141,118:142,119:[1,144],195:$VB},o($V81,[2,114]),o($V81,[2,115]),o($V81,[2,116]),o($V81,[2,117]),o($V81,[2,118]),o($V81,[2,119]),o($V81,[2,120]),o($VN,[2,131]),{105:[1,145],106:[1,146],109:[1,147],110:[1,148]},{109:[1,149]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:150,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:151,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:152,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:153,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:154,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:155,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:156,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:157,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:158,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:159,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:160,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:161,195:$VB},o([57,58,60,105,106,109,110,123],[2,104]),{50:[1,162]},{17:[1,163],43:$V91},{17:[1,165]},o($Va1,[2,137],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{16:$Vi,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:166,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{4:167,18:$V1},{16:$Vi,35:$Vj,47:168,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,67:$V31,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o([6,8,14,16,17,35,36,43,50,51,54,55,57,58,60,67,76,79,81,82,83,84,86,87,88,89,101,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194,195],$V51),o($Va1,$Vb1,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,64:169,65:170,47:174,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,101:$VA,195:$VB}),o($V21,[2,75]),o($V21,[2,76]),o($V21,[2,77]),o($V21,[2,78]),o($V21,[2,79]),{70:175,71:[1,176]},{71:[2,69],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},o($Vf1,[2,7],{14:$Vc}),o($Vf1,[2,8]),o($Vg1,[2,24],{22:177,37:[1,178]}),o($V71,[2,21]),{35:[1,179]},{35:[1,180]},{35:[1,181]},o($VH,[2,150]),o($Vh1,[2,144]),o($VN,[2,132]),o($Vi1,[2,133],{107:$VI,124:$VJ}),o($Vi1,[2,134],{107:$VI,124:$VJ}),o($VN,[2,135]),o($Vi1,[2,136],{107:$VI,124:$VJ}),{56:184,57:$Vo,58:$Vp,60:[1,183],122:182,123:[1,185]},o($VO,[2,125]),{16:[1,186]},{16:[2,121]},{16:[2,122]},{16:[1,187]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:188,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:189,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:190,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:191,195:$VB},o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,91],{45:$VP,79:$VQ,81:$VR,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,92],{45:$VP,79:$VQ,81:$VR,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vj1,[2,93],{45:$VP,79:$VQ,81:$VR,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vj1,[2,94],{45:$VP,79:$VQ,81:$VR,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vk1,[2,95],{45:$VP,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vk1,[2,96],{45:$VP,95:$VW,96:$VX,97:$VY,98:$VZ}),o($V11,[2,97]),o($V11,[2,98]),o($V11,[2,99]),o($V11,[2,100]),o($V11,[2,101]),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,102],{45:$VP,79:$VQ,81:$VR,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ}),o([6,8,14,16,17,34,35,36,43,45,49,50,51,54,55,57,58,60,67,71,72,74,76,77,79,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194,195],[2,65]),o($V21,[2,84]),{16:$Vi,35:$Vj,47:192,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($V21,[2,86]),{17:[1,193],43:$V91},{17:[1,194]},{89:[1,195],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{17:[1,196],43:[1,197]},o($Va1,[2,58]),o($Va1,[2,60]),o($Va1,[2,61]),{16:$Vi,35:$Vj,47:198,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Va1,[2,63],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{71:[1,200],73:199,74:[1,201],77:[2,72]},{16:$Vi,35:$Vj,47:202,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vl1,[2,26],{23:203,38:[1,204]}),o($Vg1,[2,23]),o($VC,[2,19]),o($VD,[2,158]),o($VD,[2,159]),o($VN,[2,130]),o($VO,[2,124]),o($VN,[2,127]),o($VN,[2,128]),{4:205,18:$V1},{4:206,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:207,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_,107:[1,208]},o($VO,[2,105],{102:209,103:[1,210]}),o($VO,[2,113],{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o($VO,[2,111],{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o($Va1,[2,138],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($V21,[2,85]),o($V21,[2,87]),o($V21,[2,88]),o([6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194],[2,56]),o($Va1,$Vb1,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,47:174,65:211,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,101:$VA,195:$VB}),o($Va1,[2,62],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{77:[1,212]},{16:$Vi,35:$Vj,47:213,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:214,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{72:[1,215],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},o($Vm1,[2,28],{24:216,39:[1,217]}),o($Vl1,[2,25]),{17:[1,218]},{17:[1,219]},{17:[1,220],43:$V91},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,104:221,195:$VB},o($VO,[2,112]),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:222,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},o($Va1,[2,57]),o($V21,[2,74]),{72:[1,223],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{77:[2,73],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{16:$Vi,35:$Vj,47:224,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vn1,[2,29],{25:225,40:[1,226],41:[1,227]}),o($Vm1,[2,27]),o($VO,[2,126]),o($VO,[2,108]),o($VO,[2,109]),o($VO,[2,110]),o($VO,[2,106]),{16:$Vi,35:$Vj,47:228,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vo1,[2,70],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vp1,[2,33],{26:229,42:[1,230]}),o($Vn1,[2,30]),o($Vn1,[2,31]),o($Vo1,[2,71],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{16:$Vi,27:231,35:$Vj,44:232,45:$Vq1,46:$Vr1,47:235,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vp1,[2,32]),o($Vs1,[2,168],{28:236,43:[1,237],157:[1,238]}),o($Vt1,[2,35]),o($Vt1,[2,36]),o($Vt1,[2,37]),o($Vt1,[2,39],{48:239,49:[1,240],50:[1,241],51:[1,242],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vs1,[2,12]),{16:$Vi,35:$Vj,44:243,45:$Vq1,46:$Vr1,47:235,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vu1,50:$Vk,63:252,66:250,88:$Vv1,158:244,160:245,161:246,172:249,174:248},o($Vt1,[2,38]),{50:[1,253],51:[1,254]},o($Vt1,[2,41]),o($Vt1,[2,43]),o($Vt1,[2,34]),o([6,8,14,17,129,135,138,144,146,150,152,154],$Vw1,{159:255,43:$Vx1,182:$Vy1}),o($Vz1,[2,170]),o($Vz1,[2,172],{163:258,166:260,36:$VA1,164:$VB1,165:$VC1,167:$VD1,168:$VE1,173:$VF1,177:$VG1}),{162:[1,266]},o($VH1,[2,193]),o($VH1,[2,194]),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,192,193,194],$Vw1,{159:267,67:$V31,182:$Vy1}),{4:268,16:$Vu1,18:$V1,50:$Vk,63:252,66:250,88:$Vv1,158:269,160:245,161:246,172:249,174:248},o($VI1,$VJ1,{183:270,66:272,49:$VK1,50:$V41}),o($Vt1,[2,40]),o($Vt1,[2,42]),o($VL1,[2,139],{128:273,129:[1,274]}),{16:$Vu1,50:$Vk,63:252,66:250,88:$Vv1,160:275,161:246,172:249,174:248},{16:[1,276]},{173:[1,277]},{16:$Vu1,50:$Vk,63:252,66:250,174:278},{169:279,170:$VM1,173:$VN1},{166:282,167:$VD1,168:$VE1,171:281,173:[2,181]},{173:[2,175]},{173:[2,176]},o($VO1,[2,177]),o($VO1,[2,178]),{16:$Vu1,50:$Vk,63:252,66:250,161:283,172:249,174:248},o($VI1,$VJ1,{66:272,183:284,49:$VK1,50:$V41}),{17:[1,285]},{17:[1,286],43:$Vx1},o($VH1,$VP1,{189:287,190:288,191:289,192:$VQ1,193:$VR1,194:$VS1}),{50:$V41,66:293},o($VI1,[2,201],{67:$V31}),o($Vh1,[2,141],{130:294,131:295,135:[1,296]}),{16:$Vi,35:$Vj,47:297,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vz1,[2,171]),{50:$V41,66:299,181:298},{16:$Vu1,50:$Vk,63:252,66:250,174:300},{176:301,179:$VT1},{173:[1,303]},{173:[2,180]},{173:[1,304]},{169:305,170:$VM1,173:$VN1},{36:$VA1,89:[1,306],163:258,164:$VB1,165:$VC1,166:260,167:$VD1,168:$VE1,173:$VF1,177:$VG1},o($VH1,$VP1,{190:288,191:289,189:307,192:$VQ1,193:$VR1,194:$VS1}),o($VH1,$VJ1,{66:272,183:308,49:$VK1,50:$V41}),o($VH1,[2,219]),o($VH1,[2,220]),o($VH1,[2,211]),o($VH1,[2,212]),{184:310,185:$VU1,186:$VV1},{184:313,185:$VU1,186:$VV1},{184:314,185:$VU1,186:$VV1},o($VI1,[2,200],{67:$V31}),o($VW1,[2,155],{143:315,144:[1,316]}),o($Vh1,[2,142]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,136:317,139:31,195:$VB},o($VL1,[2,140],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{17:[1,318],43:[1,319]},o($Va1,[2,195],{67:$V31}),o([6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,182],[2,183],{175:320,176:321,179:$VT1,180:$VX1}),o($VH1,[2,185]),{16:$Vi,35:$Vj,47:323,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vu1,50:$Vk,63:252,66:250,161:324,172:249,174:248},{16:$Vu1,50:$Vk,63:252,66:250,174:325},{173:[2,182]},o($Vz1,[2,173]),o($VH1,[2,217]),o($VH1,[2,218]),{191:326,192:$VQ1,193:$VR1,194:$VS1},{16:$VY1,152:$VZ1,187:327},o($V_1,[2,202]),o($V_1,[2,203]),{16:$VY1,152:$VZ1,187:329},{16:$VY1,152:$VZ1,187:330},o($Vh,$Va,{137:18,11:331,138:$Vb}),{16:$Vi,35:$Vj,47:332,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vh1,$VE,{132:333,43:$VF,133:$VG}),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],[2,198]),{50:$V41,66:334},o($VH1,[2,184]),o($VH1,[2,191]),{16:[1,335]},o($VH1,[2,190],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{36:$VA1,163:258,164:$VB1,165:$VC1,166:260,167:$VD1,168:$VE1,173:$VF1,175:336,176:321,177:$VG1,179:$VT1,180:$VX1},o($VH1,[2,187]),o($VH1,[2,213]),{16:[1,337]},{135:[1,340],138:[1,339],173:[1,338]},{16:[1,341]},{16:[1,342]},o($VD,$Vf,{145:28,12:343,146:$Vg}),o($VW1,[2,156],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vh1,[2,145]),o($Va1,[2,196],{67:$V31}),{50:$V41,66:345,68:344},o($VH1,[2,186]),{17:[2,208],50:$V41,66:345,68:347,188:346},{16:[2,205]},{16:[2,206]},{16:[2,207]},{50:$V41,66:345,68:348},{50:$V41,66:345,68:349},o($V$1,[2,162],{148:350,149:351,150:[1,352]}),{17:[1,353],43:$V02},o($Va1,[2,66],{67:$V31}),{17:[1,355]},{17:[2,209],43:$V02},{17:[1,356],43:$V02},{17:[1,357],43:$V02},o($Vs1,[2,165],{151:358,152:[1,359],154:[1,360]}),o($V$1,[2,163]),{50:[1,362],63:361},o($VH1,[2,192]),{50:$V41,66:363},o($VH1,[2,214]),o($VH1,[2,215]),o($VH1,[2,216]),o($Vs1,[2,169]),{153:[1,364]},{105:[1,365]},o($V$1,[2,164]),{16:$V61},o($Va1,[2,67],{67:$V31}),o($Vs1,[2,166]),{155:[1,366]},{156:[1,367]},o($Vs1,[2,167])],\ndefaultActions: {11:[2,3],22:[2,1],24:[2,2],143:[2,121],144:[2,122],262:[2,175],263:[2,176],280:[2,180],305:[2,182],338:[2,205],339:[2,206],340:[2,207]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip comments */\nbreak;\ncase 1:/* skip sql comments */\nbreak;\ncase 2:/* skip sql comments */\nbreak;\ncase 3:/* skip whitespace */\nbreak;\ncase 4:return 195\nbreak;\ncase 5:return 50\nbreak;\ncase 6:return 50\nbreak;\ncase 7:return 50\nbreak;\ncase 8:return 18\nbreak;\ncase 9:return 29\nbreak;\ncase 10:return 119\nbreak;\ncase 11:return 30\nbreak;\ncase 12:return 31\nbreak;\ncase 13:return 32\nbreak;\ncase 14:return 33\nbreak;\ncase 15:return 36\nbreak;\ncase 16:return 37\nbreak;\ncase 17:return 38\nbreak;\ncase 18:return 39\nbreak;\ncase 19:return 40\nbreak;\ncase 20:return 41\nbreak;\ncase 21:return 42\nbreak;\ncase 22:return 46\nbreak;\ncase 23:return 49\nbreak;\ncase 24:return 57\nbreak;\ncase 25:return 58\nbreak;\ncase 26:return 60\nbreak;\ncase 27:return 'COLLATE'\nbreak;\ncase 28:return 84\nbreak;\ncase 29:return 86\nbreak;\ncase 30:return 87\nbreak;\ncase 31:return 76\nbreak;\ncase 32:return 71\nbreak;\ncase 33:return 72\nbreak;\ncase 34:return 74\nbreak;\ncase 35:return 77\nbreak;\ncase 36:return 96\nbreak;\ncase 37:return 97\nbreak;\ncase 38:return 101\nbreak;\ncase 39:return 106\nbreak;\ncase 40:return 105\nbreak;\ncase 41:return 108\nbreak;\ncase 42:return 109\nbreak;\ncase 43:return 103\nbreak;\ncase 44:return 110\nbreak;\ncase 45:return 121\nbreak;\ncase 46:return 123\nbreak;\ncase 47:return 107\nbreak;\ncase 48:return 126\nbreak;\ncase 49:return 127\nbreak;\ncase 50:return 157\nbreak;\ncase 51:return 182\nbreak;\ncase 52:return 192\nbreak;\ncase 53:return 185\nbreak;\ncase 54:return 186\nbreak;\ncase 55:return 152\nbreak;\ncase 56:return 173\nbreak;\ncase 57:return 138\nbreak;\ncase 58:return 135\nbreak;\ncase 59:return 193\nbreak;\ncase 60:return 194\nbreak;\ncase 61:return 164\nbreak;\ncase 62:return 165\nbreak;\ncase 63:return 179\nbreak;\ncase 64:return 180\nbreak;\ncase 65:return 167\nbreak;\ncase 66:return 168\nbreak;\ncase 67:return 170\nbreak;\ncase 68:return 177\nbreak;\ncase 69:return 129\nbreak;\ncase 70:return 141\nbreak;\ncase 71:return 142\nbreak;\ncase 72:return 133\nbreak;\ncase 73:return 134\nbreak;\ncase 74:return 144\nbreak;\ncase 75:return 147\nbreak;\ncase 76:return 150\nbreak;\ncase 77:return 153\nbreak;\ncase 78:return 154\nbreak;\ncase 79:return 155\nbreak;\ncase 80:return 156\nbreak;\ncase 81:return 162\nbreak;\ncase 82:return 146\nbreak;\ncase 83:return 14\nbreak;\ncase 84:return 43\nbreak;\ncase 85:return 34\nbreak;\ncase 86:return 16\nbreak;\ncase 87:return 17\nbreak;\ncase 88:return 82\nbreak;\ncase 89:return 117\nbreak;\ncase 90:return 83\nbreak;\ncase 91:return 91\nbreak;\ncase 92:return 92\nbreak;\ncase 93:return 79\nbreak;\ncase 94:return 81\nbreak;\ncase 95:return 45\nbreak;\ncase 96:return 95\nbreak;\ncase 97:return 98\nbreak;\ncase 98:return 99\nbreak;\ncase 99:return 94\nbreak;\ncase 100:return 112\nbreak;\ncase 101:return 113\nbreak;\ncase 102:return 93\nbreak;\ncase 103:return '<=>'\nbreak;\ncase 104:return 114\nbreak;\ncase 105:return 116\nbreak;\ncase 106:return 115\nbreak;\ncase 107:return 88\nbreak;\ncase 108:return 89\nbreak;\ncase 109:return 8\nbreak;\ncase 110:return 51\nbreak;\ncase 111:return 51\nbreak;\ncase 112:return 55\nbreak;\ncase 113:return 35\nbreak;\ncase 114:return 54\nbreak;\ncase 115:return 50\nbreak;\ncase 116:return 67\nbreak;\ncase 117:return 51\nbreak;\ncase 118:return 51\nbreak;\ncase 119:return 50\nbreak;\ncase 120:return 6\nbreak;\ncase 121:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:[/][*](.|\\n)*?[*][/])/i,/^(?:[-][-]\\s.*\\n)/i,/^(?:[#]\\s.*\\n)/i,/^(?:\\s+)/i,/^(?:[$][{](.+?)[}])/i,/^(?:[`][a-zA-Z0-9_\\u0080-\\uFFFF]*[`])/i,/^(?:[\\w]+[\\u0080-\\uFFFF]+[0-9a-zA-Z_\\u0080-\\uFFFF]*)/i,/^(?:[\\u0080-\\uFFFF][0-9a-zA-Z_\\u0080-\\uFFFF]*)/i,/^(?:SELECT\\b)/i,/^(?:ALL\\b)/i,/^(?:ANY\\b)/i,/^(?:DISTINCT\\b)/i,/^(?:DISTINCTROW\\b)/i,/^(?:HIGH_PRIORITY\\b)/i,/^(?:MAX_STATEMENT_TIME\\b)/i,/^(?:STRAIGHT_JOIN\\b)/i,/^(?:SQL_SMALL_RESULT\\b)/i,/^(?:SQL_BIG_RESULT\\b)/i,/^(?:SQL_BUFFER_RESULT\\b)/i,/^(?:SQL_CACHE\\b)/i,/^(?:SQL_NO_CACHE\\b)/i,/^(?:SQL_CALC_FOUND_ROWS\\b)/i,/^(?:([a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*\\.){1,2}\\*)/i,/^(?:AS\\b)/i,/^(?:TRUE\\b)/i,/^(?:FALSE\\b)/i,/^(?:NULL\\b)/i,/^(?:COLLATE\\b)/i,/^(?:BINARY\\b)/i,/^(?:ROW\\b)/i,/^(?:EXISTS\\b)/i,/^(?:CASE\\b)/i,/^(?:WHEN\\b)/i,/^(?:THEN\\b)/i,/^(?:ELSE\\b)/i,/^(?:END\\b)/i,/^(?:DIV\\b)/i,/^(?:MOD\\b)/i,/^(?:NOT\\b)/i,/^(?:BETWEEN\\b)/i,/^(?:IN\\b)/i,/^(?:SOUNDS\\b)/i,/^(?:LIKE\\b)/i,/^(?:ESCAPE\\b)/i,/^(?:REGEXP\\b)/i,/^(?:IS\\b)/i,/^(?:UNKNOWN\\b)/i,/^(?:AND\\b)/i,/^(?:OR\\b)/i,/^(?:XOR\\b)/i,/^(?:FROM\\b)/i,/^(?:PARTITION\\b)/i,/^(?:USE\\b)/i,/^(?:INDEX\\b)/i,/^(?:KEY\\b)/i,/^(?:FOR\\b)/i,/^(?:JOIN\\b)/i,/^(?:ORDER\\s+BY\\b)/i,/^(?:GROUP\\s+BY\\b)/i,/^(?:IGNORE\\b)/i,/^(?:FORCE\\b)/i,/^(?:INNER\\b)/i,/^(?:CROSS\\b)/i,/^(?:ON\\b)/i,/^(?:USING\\b)/i,/^(?:LEFT\\b)/i,/^(?:RIGHT\\b)/i,/^(?:OUTER\\b)/i,/^(?:NATURAL\\b)/i,/^(?:WHERE\\b)/i,/^(?:ASC\\b)/i,/^(?:DESC\\b)/i,/^(?:WITH\\b)/i,/^(?:ROLLUP\\b)/i,/^(?:HAVING\\b)/i,/^(?:OFFSET\\b)/i,/^(?:PROCEDURE\\b)/i,/^(?:UPDATE\\b)/i,/^(?:LOCK\\b)/i,/^(?:SHARE\\b)/i,/^(?:MODE\\b)/i,/^(?:OJ\\b)/i,/^(?:LIMIT\\b)/i,/^(?:UNION\\b)/i,/^(?:,)/i,/^(?:=)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:\\|)/i,/^(?:&)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:\\^)/i,/^(?:>>)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<<)/i,/^(?:<=>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:;)/i,/^(?:['](\\\\.|[^'])*['])/i,/^(?:[\"](\\\\.|[^\"])*[\"])/i,/^(?:[0][x][0-9a-fA-F]+)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?[eE][-][0-9]+(\\.[0-9]+)?)/i,/^(?:[a-zA-Z_\\u0080-\\uFFFF][a-zA-Z0-9_\\u0080-\\uFFFF]*)/i,/^(?:\\.)/i,/^(?:[\"][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[\"])/i,/^(?:['][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*['])/i,/^(?:([`])(?:(?=(\\\\?))\\2.)*?\\1)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();if (!sqlParser) {\n  sqlParser = {};\n}\n\nfunction Sql() {\n  this.buffer = '';\n}\n\nsqlParser.stringify = function(ast) {\n  var sql = new Sql();\n  sql.travelMain(ast);\n  return sql.buffer;\n};\n\nSql.prototype.travel = function(ast) {\n  if (!ast) return;\n\n  if (typeof ast === 'string') {\n    return this.append(ast);\n  }\n\n  var processor = this['travel' + ast.type];\n  processor.call(this, ast);\n};\n\nvar noSuffixFlag = false;\nSql.prototype.appendKeyword = function(keyword, noPrefix, noSuffix) {\n  if (noSuffixFlag) {\n    noPrefix = true;\n    noSuffixFlag = false;\n  }\n  if (noPrefix) {\n    this.buffer += keyword.toUpperCase();\n  } else {\n    this.buffer += ' ' + keyword.toUpperCase();\n  }\n\n  if (noSuffix) {\n    noSuffixFlag = true;\n  }\n};\nSql.prototype.append = function(word, noPrefix, noSuffix) {\n  if (noSuffixFlag) {\n    noPrefix = true;\n    noSuffixFlag = false;\n  }\n  if (noPrefix) {\n    this.buffer += word;\n  } else {\n    this.buffer += ' ' + word;\n  }\n\n  if (noSuffix) {\n    noSuffixFlag = true;\n  }\n};\nSql.prototype.travelMain = function(ast) {\n  this.travel(ast.value);\n  if (ast.hasSemicolon) {\n    this.append(';', true);\n  }\n};\nSql.prototype.travelSelect = function(ast) {\n  this.appendKeyword('select');\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  if (ast.highPriorityOpt) {\n    this.appendKeyword(ast.highPriorityOpt);\n  }\n  if (ast.maxStateMentTimeOpt) {\n    this.append('MAX_STATEMENT_TIME = ' + ast.maxStateMentTimeOpt);\n  }\n  if (ast.straightJoinOpt) {\n    this.appendKeyword(ast.straightJoinOpt);\n  }\n  if (ast.sqlSmallResultOpt) {\n    this.appendKeyword(ast.sqlSmallResultOpt);\n  }\n  if (ast.sqlBigResultOpt) {\n    this.appendKeyword(ast.sqlBigResultOpt);\n  }\n  if (ast.sqlBufferResultOpt) {\n    this.appendKeyword(ast.sqlBufferResultOpt);\n  }\n  if (ast.sqlCacheOpt) {\n    this.appendKeyword(ast.sqlCacheOpt);\n  }\n  if (ast.sqlCalcFoundRowsOpt) {\n    this.appendKeyword(ast.sqlCalcFoundRowsOpt);\n  }\n  if (ast.selectItems) {\n    this.travelSelectExpr(ast.selectItems);\n  }\n  if (ast.from) {\n    this.appendKeyword('from');\n    this.travel(ast.from);\n  }\n  if (ast.partition) {\n    this.travel(ast.partition);\n  }\n  if (ast.where) {\n    this.appendKeyword('where');\n    this.travel(ast.where);\n  }\n  if (ast.groupBy) {\n    this.travel(ast.groupBy);\n  }\n  if (ast.having) {\n    this.appendKeyword('having');\n    this.travel(ast.having);\n  }\n  if (ast.orderBy) {\n    this.travel(ast.orderBy);\n  }\n  if (ast.limit) {\n    this.travel(ast.limit);\n  }\n  if (ast.procedure) {\n    this.appendKeyword('procedure');\n    this.travel(ast.procedure);\n  }\n  if (ast.updateLockMode) {\n    this.appendKeyword(ast.updateLockMode);\n  }\n};\nSql.prototype.travelSelectExpr = function(ast) {\n  var exprList = ast.value;\n  for (var i = 0; i < exprList.length; i++) {\n    if (typeof ast === 'string') {\n      this.append(exprList[i]);\n    } else {\n      this.travel(exprList[i]);\n      if (exprList[i].alias) {\n        if (exprList[i].hasAs) {\n          this.appendKeyword('as');\n        }\n        this.travel(exprList[i].alias);\n      }\n    }\n    if (i !== exprList.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelIsExpression = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('in');\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.append(ast.right);\n};\nSql.prototype.travelNotExpression = function(ast) {\n  this.appendKeyword('not');\n  this.travel(ast.value);\n};\nSql.prototype.travelOrExpression = Sql.prototype.travelAndExpression = Sql.prototype.travelXORExpression = function(\n  ast\n) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelNull = Sql.prototype.travelBoolean = Sql.prototype.travelBooleanExtra = function(\n  ast\n) {\n  this.appendKeyword(ast.value);\n};\nSql.prototype.travelNumber = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelString = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelFunctionCall = function(ast) {\n  this.append(ast.name);\n  this.append('(', true, true);\n  var params = ast.params;\n  for (var i = 0; i < params.length; i++) {\n    var param = params[i];\n    this.travel(param);\n    if (i !== params.length - 1) {\n      this.append(',', true);\n    }\n  }\n  this.append(')', true);\n};\nSql.prototype.travelFunctionCallParam = function(ast) {\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  this.travel(ast.value);\n};\nSql.prototype.travelIdentifier = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelIdentifierList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelWhenThenList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.appendKeyword('when');\n    this.travel(list[i].when);\n    this.appendKeyword('then');\n    this.travel(list[i].then);\n  }\n};\nSql.prototype.travelCaseWhen = function(ast) {\n  this.appendKeyword('case');\n  if (ast.caseExprOpt) {\n    this.travel(ast.caseExprOpt);\n  }\n  this.travel(ast.whenThenList);\n  if (ast.else) {\n    this.appendKeyword('else');\n    this.travel(ast.else);\n  }\n  this.appendKeyword('end');\n};\nSql.prototype.travelPrefix = function(ast) {\n  this.appendKeyword(ast.prefix);\n  this.travel(ast.value);\n};\nSql.prototype.travelSimpleExprParentheses = function(ast) {\n  if (ast.hasRow) {\n    this.appendKeyword('row');\n  }\n  this.append('(', false, true);\n  this.travel(ast.value);\n  this.append(')', true);\n};\nSql.prototype.travelSubQuery = function(ast) {\n  if (ast.hasExists) {\n    this.appendKeyword('exists');\n  }\n  this.append('(', false, true);\n  this.travel(ast.value);\n  this.append(')', true);\n};\nSql.prototype.travelIdentifierExpr = function(ast) {\n  this.append('{');\n  this.travel(ast.identifier);\n  this.travel(ast.value);\n  this.append('}');\n};\nSql.prototype.travelBitExpression = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelInSubQueryPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('in');\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelInExpressionListPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('in');\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelBetweenPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('between');\n  this.travel(ast.right.left);\n  this.appendKeyword('and');\n  this.travel(ast.right.right);\n};\nSql.prototype.travelSoundsLikePredicate = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('sounds');\n  this.appendKeyword('like');\n  this.travel(ast.right);\n};\nSql.prototype.travelLikePredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('like');\n  this.travel(ast.right);\n  if (ast.escape) {\n    this.appendKeyword('escape');\n    this.travel(ast.escape);\n  }\n};\nSql.prototype.travelRegexpPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('regexp');\n  this.travel(ast.right);\n};\nSql.prototype.travelIsNullBooleanPrimary = function(ast) {\n  this.travel(ast.value);\n  this.appendKeyword('is');\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('null');\n};\nSql.prototype.travelComparisonBooleanPrimary = function(ast) {\n  this.travel(ast.left);\n  this.append(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelComparisonSubQueryBooleanPrimary = function(ast) {\n  this.travel(ast.left);\n  this.append(ast.operator);\n  this.appendKeyword(ast.subQueryOpt);\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelExpressionList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelGroupBy = function(ast) {\n  this.appendKeyword('group by');\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelOrderBy = function(ast) {\n  this.appendKeyword('order by');\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  if (ast.rollUp) {\n    this.appendKeyword('with rollup');\n  }\n};\nSql.prototype.travelGroupByOrderByItem = function(ast) {\n  this.travel(ast.value);\n  if (ast.sortOpt) {\n    this.appendKeyword(ast.sortOpt);\n  }\n};\nSql.prototype.travelLimit = function(ast) {\n  this.appendKeyword('limit');\n  var list = ast.value;\n  if (list.length === 1) {\n    this.append(list[0]);\n  } else if (list.length === 2) {\n    if (ast.offsetMode) {\n      this.append(list[1]);\n      this.append('offset');\n      this.append(list[0]);\n    } else {\n      this.append(list[0]);\n      this.append(',', true);\n      this.append(list[1]);\n    }\n  }\n};\nSql.prototype.travelTableReferences = function(ast) {\n  var list = ast.value;\n  if (ast.TableReferences) {\n    this.append('(', false, true);\n  }\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  if (ast.TableReferences) {\n    this.append(')');\n  }\n};\nSql.prototype.travelTableReference = function(ast) {\n  if (ast.hasOj) {\n    this.append('{');\n    this.appendKeyword('oj');\n    this.travel(ast.value);\n    this.append('}');\n  } else {\n    this.travel(ast.value);\n  }\n};\nSql.prototype.travelInnerCrossJoinTable = function(ast) {\n  this.travel(ast.left);\n  if (ast.innerCrossOpt) {\n    this.appendKeyword(ast.innerCrossOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n  if (ast.condition) {\n    this.travel(ast.condition);\n  }\n};\nSql.prototype.travelStraightJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('straight_join');\n  this.travel(ast.right);\n  this.travel(ast.condition);\n};\nSql.prototype.travelLeftRightJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.leftRight);\n  if (ast.outOpt) {\n    this.appendKeyword(ast.outOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n  this.travel(ast.condition);\n};\nSql.prototype.travelNaturalJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('natural');\n  if (ast.leftRight) {\n    this.appendKeyword(ast.leftRight);\n  }\n  if (ast.outOpt) {\n    this.appendKeyword(ast.outOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n};\nSql.prototype.travelOnJoinCondition = function(ast) {\n  this.appendKeyword('on');\n  this.travel(ast.value);\n};\nSql.prototype.travelUsingJoinCondition = function(ast) {\n  this.appendKeyword('using');\n  this.appendKeyword('(', false, true);\n  this.travel(ast.value);\n  this.appendKeyword(')');\n};\nSql.prototype.travelPartitions = function(ast) {\n  this.appendKeyword('partition');\n  this.appendKeyword('(', false, true);\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelForOptIndexHint = function(ast) {\n  this.appendKeyword('for');\n  this.appendKeyword(ast.value);\n};\nSql.prototype.travelIndexList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelUseIndexHint = function(ast) {\n  this.appendKeyword('use');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelIgnoreIndexHint = function(ast) {\n  this.appendKeyword('ignore');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelForceIndexHint = function(ast) {\n  this.appendKeyword('force');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelTableFactor = function(ast) {\n  this.travel(ast.value);\n  if (ast.partition) {\n    this.travel(ast.partition);\n  }\n  if (ast.alias) {\n    if (ast.hasAs) {\n      this.appendKeyword('as');\n    }\n    this.travel(ast.alias);\n  }\n  if (ast.indexHintOpt) {\n    this.travel(ast.indexHintOpt);\n  }\n};\nSql.prototype.travelUnion = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('UNION');\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  this.travel(ast.right);\n};\nSql.prototype.travelSelectParenthesized = function(ast) {\n  this.appendKeyword('(');\n  this.travel(ast.value);\n  this.appendKeyword(')');\n};\nSql.prototype.travelPlaceHolder = function (ast) {\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n};var root = this\n// AMD / RequireJS\nif (typeof define !== 'undefined' && define.amd) {\n    define([], function () {\n        return sqlParser;\n    });\n}\n// Node.js\nelse if (typeof module !== 'undefined' && module.exports) {\n    module.exports = sqlParser;\n}\n// included directly via <script> tag\nelse {\n    root.sqlParser = sqlParser;\n}\n\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory) /* global define */\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory()\n  } else {\n    root.moo = factory()\n  }\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n  var toString = Object.prototype.toString\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }\n  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    if (!regexps.length) return '(?!)'\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')\n      if (obj.global) throw new Error('RegExp /g flag is implied')\n      if (obj.sticky) throw new Error('RegExp /y flag is implied')\n      if (obj.multiline) throw new Error('RegExp /m flag is implied')\n      return obj.source\n\n    } else {\n      throw new Error('Not a pattern: ' + obj)\n    }\n  }\n\n  function pad(s, length) {\n    if (s.length > length) {\n      return s\n    }\n    return Array(length - s.length + 1).join(\" \") + s\n  }\n\n  function lastNLines(string, numLines) {\n    var position = string.length\n    var lineBreaks = 0;\n    while (true) {\n      var idx = string.lastIndexOf(\"\\n\", position - 1)\n      if (idx === -1) {\n        break;\n      } else {\n        lineBreaks++\n      }\n      position = idx\n      if (lineBreaks === numLines) {\n        break;\n      }\n      if (position === 0) {\n        break;\n      }\n    }\n    var startPosition = \n      lineBreaks < numLines ?\n      0 : \n      position + 1\n    return string.substring(startPosition).split(\"\\n\")\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = [].concat(thing)\n      if (key === 'include') {\n        for (var j = 0; j < rules.length; j++) {\n          result.push({include: rules[j]})\n        }\n        continue\n      }\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i = 0; i < array.length; i++) {\n      var obj = array[i]\n      if (obj.include) {\n        var include = [].concat(obj.include)\n        for (var j = 0; j < include.length; j++) {\n          result.push({include: include[j]})\n        }\n        continue\n      }\n      if (!obj.type) {\n        throw new Error('Rule has no type: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.type, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(type, obj) {\n    if (!isObject(obj)) {\n      obj = { match: obj }\n    }\n    if (obj.include) {\n      throw new Error('Matching rules cannot also include states')\n    }\n\n    // nb. error and fallback imply lineBreaks\n    var options = {\n      defaultType: type,\n      lineBreaks: !!obj.error || !!obj.fallback,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      fallback: false,\n      value: null,\n      type: null,\n      shouldThrow: false,\n    }\n\n    // Avoid Object.assign(), so we support IE9+\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        options[key] = obj[key]\n      }\n    }\n\n    // type transform cannot be a string\n    if (typeof options.type === 'string' && type !== options.type) {\n      throw new Error(\"Type transform cannot be a string (type '\" + options.type + \"' for token '\" + type + \"')\")\n    }\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    return options\n  }\n\n  function toRules(spec) {\n    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)\n  }\n\n  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})\n  function compileRules(rules, hasStates) {\n    var errorRule = null\n    var fast = Object.create(null)\n    var fastAllowed = true\n    var unicodeFlag = null\n    var groups = []\n    var parts = []\n\n    // If there is a fallback rule, then disable fast matching\n    for (var i = 0; i < rules.length; i++) {\n      if (rules[i].fallback) {\n        fastAllowed = false\n      }\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var options = rules[i]\n\n      if (options.include) {\n        // all valid inclusions are removed by states() preprocessor\n        throw new Error('Inheritance is not allowed in stateless lexers')\n      }\n\n      if (options.error || options.fallback) {\n        // errorRule can only be set once\n        if (errorRule) {\n          if (!options.fallback === !errorRule.fallback) {\n            throw new Error(\"Multiple \" + (options.fallback ? \"fallback\" : \"error\") + \" rules not allowed (for token '\" + options.defaultType + \"')\")\n          } else {\n            throw new Error(\"fallback and error are mutually exclusive (for token '\" + options.defaultType + \"')\")\n          }\n        }\n        errorRule = options\n      }\n\n      var match = options.match.slice()\n      if (fastAllowed) {\n        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\n          var word = match.shift()\n          fast[word.charCodeAt(0)] = options\n        }\n      }\n\n      // Warn about inappropriate state-switching options\n      if (options.pop || options.push || options.next) {\n        if (!hasStates) {\n          throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.defaultType + \"')\")\n        }\n        if (options.fallback) {\n          throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\" + options.defaultType + \"')\")\n        }\n      }\n\n      // Only rules with a .match are included in the RegExp\n      if (match.length === 0) {\n        continue\n      }\n      fastAllowed = false\n\n      groups.push(options)\n\n      // Check unicode flag is used everywhere or nowhere\n      for (var j = 0; j < match.length; j++) {\n        var obj = match[j]\n        if (!isRegExp(obj)) {\n          continue\n        }\n\n        if (unicodeFlag === null) {\n          unicodeFlag = obj.unicode\n        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {\n          throw new Error('If one rule is /u then all must be')\n        }\n      }\n\n      // convert to RegExp\n      var pat = reUnion(match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: … ) instead\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n\n    // If there's no fallback rule, use the sticky flag so we only look for\n    // matches at the current index.\n    //\n    // If we don't support the sticky flag, then fake it using an irrefutable\n    // match (i.e. an empty pattern).\n    var fallbackRule = errorRule && errorRule.fallback\n    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'\n    var suffix = hasSticky || fallbackRule ? '' : '|'\n\n    if (unicodeFlag === true) flags += \"u\"\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(toRules(rules))\n    return new Lexer({start: result}, 'start')\n  }\n\n  function checkStateGroup(g, name, map) {\n    var state = g && (g.push || g.next)\n    if (state && !map[state]) {\n      throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n    if (g && g.pop && +g.pop !== 1) {\n      throw new Error(\"pop must be 1 (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n  }\n  function compileStates(states, start) {\n    var all = states.$all ? toRules(states.$all) : []\n    delete states.$all\n\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var ruleMap = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      ruleMap[key] = toRules(states[key]).concat(all)\n    }\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var rules = ruleMap[key]\n      var included = Object.create(null)\n      for (var j = 0; j < rules.length; j++) {\n        var rule = rules[j]\n        if (!rule.include) continue\n        var splice = [j, 1]\n        if (rule.include !== key && !included[rule.include]) {\n          included[rule.include] = true\n          var newRules = ruleMap[rule.include]\n          if (!newRules) {\n            throw new Error(\"Cannot include nonexistent state '\" + rule.include + \"' (in state '\" + key + \"')\")\n          }\n          for (var k = 0; k < newRules.length; k++) {\n            var newRule = newRules[k]\n            if (rules.indexOf(newRule) !== -1) continue\n            splice.push(newRule)\n          }\n        }\n        rules.splice.apply(rules, splice)\n        j--\n      }\n    }\n\n    var map = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(ruleMap[key], true)\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i]\n      var state = map[name]\n      var groups = state.groups\n      for (var j = 0; j < groups.length; j++) {\n        checkStateGroup(groups[j], name, map)\n      }\n      var fastKeys = Object.getOwnPropertyNames(state.fast)\n      for (var j = 0; j < fastKeys.length; j++) {\n        checkStateGroup(state.fast[fastKeys[j]], name, map)\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n\n    // Use a JavaScript Map to map keywords to their corresponding token type\n    // unless Map is unsupported, then fall back to using an Object:\n    var isMap = typeof Map !== 'undefined'\n    var reverseMap = isMap ? new Map : Object.create(null)\n\n    var types = Object.getOwnPropertyNames(map)\n    for (var i = 0; i < types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        if (isMap) {\n          reverseMap.set(keyword, tokenType)\n        } else {\n          reverseMap[keyword] = tokenType\n        }\n      })\n    }\n    return function(k) {\n      return isMap ? reverseMap.get(k) : reverseMap[k]\n    }\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.queuedToken = info ? info.queuedToken : null\n    this.queuedText = info ? info.queuedText: \"\";\n    this.queuedThrow = info ? info.queuedThrow : null\n    this.setState(info ? info.state : this.startState)\n    this.stack = info && info.stack ? info.stack.slice() : []\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n      stack: this.stack.slice(),\n      queuedToken: this.queuedToken,\n      queuedText: this.queuedText,\n      queuedThrow: this.queuedThrow,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error\n    this.re = info.regexp\n    this.fast = info.fast\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  var eat = hasSticky ? function(re, buffer) { // assume re is /y\n    return re.exec(buffer)\n  } : function(re, buffer) { // assume re is /g\n    var match = re.exec(buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return this.groups[i]\n      }\n    }\n    throw new Error('Cannot find token type for matched text')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var index = this.index\n\n    // If a fallback token matched, we don't need to re-run the RegExp\n    if (this.queuedGroup) {\n      var token = this._token(this.queuedGroup, this.queuedText, index)\n      this.queuedGroup = null\n      this.queuedText = \"\"\n      return token\n    }\n\n    var buffer = this.buffer\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    // Fast matching for single characters\n    var group = this.fast[buffer.charCodeAt(index)]\n    if (group) {\n      return this._token(group, buffer.charAt(index), index)\n    }\n\n    // Execute RegExp\n    var re = this.re\n    re.lastIndex = index\n    var match = eat(re, buffer)\n\n    // Error tokens match the remaining buffer\n    var error = this.error\n    if (match == null) {\n      return this._token(error, buffer.slice(index, buffer.length), index)\n    }\n\n    var group = this._getGroup(match)\n    var text = match[0]\n\n    if (error.fallback && match.index !== index) {\n      this.queuedGroup = group\n      this.queuedText = text\n\n      // Fallback tokens contain the unmatched portion of the buffer\n      return this._token(error, buffer.slice(index, match.index), index)\n    }\n\n    return this._token(group, text, index)\n  }\n\n  Lexer.prototype._token = function(group, text, offset) {\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\n      value: typeof group.value === 'function' ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: offset,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      var err = new Error(this.formatError(token, \"invalid syntax\"))\n      throw err;\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    if (token == null) {\n      // An undefined token indicates EOF\n      var text = this.buffer.slice(this.index)\n      var token = {\n        text: text,\n        offset: this.index,\n        lineBreaks: text.indexOf('\\n') === -1 ? 0 : 1,\n        line: this.line,\n        col: this.col,\n      }\n    }\n    \n    var numLinesAround = 2\n    var firstDisplayedLine = Math.max(token.line - numLinesAround, 1)\n    var lastDisplayedLine = token.line + numLinesAround\n    var lastLineDigits = String(lastDisplayedLine).length\n    var displayedLines = lastNLines(\n        this.buffer, \n        (this.line - token.line) + numLinesAround + 1\n      )\n      .slice(0, 5)\n    var errorLines = []\n    errorLines.push(message + \" at line \" + token.line + \" col \" + token.col + \":\")\n    errorLines.push(\"\")\n    for (var i = 0; i < displayedLines.length; i++) {\n      var line = displayedLines[i]\n      var lineNo = firstDisplayedLine + i\n      errorLines.push(pad(String(lineNo), lastLineDigits) + \"  \" + line);\n      if (lineNo === token.line) {\n        errorLines.push(pad(\"\", lastLineDigits + token.col + 1) + \"^\")\n      }\n    }\n    return errorLines.join(\"\\n\")\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    return true\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n    fallback: Object.freeze({fallback: true}),\n    keywords: keywordTransform,\n  }\n\n}));\n","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n","(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"moo\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unbox = exports.doubleQuoted = exports.box = exports.track = exports.tracking = exports.trackingComments = exports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\nconst keywords_1 = __webpack_require__(3);\n// build keywords\nconst keywordsMap = {};\nfor (const k of keywords_1.sqlKeywords) {\n    keywordsMap['kw_' + k.toLowerCase()] = k;\n}\nconst caseInsensitiveKeywords = (map) => {\n    const transform = (0, moo_1.keywords)(map);\n    return (text) => transform(text.toUpperCase());\n};\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    word: {\n        match: /[eE](?!')[A-Za-z0-9_]*|[a-df-zA-DF-Z_][A-Za-z0-9_]*/,\n        type: caseInsensitiveKeywords(keywordsMap),\n        value: x => x.toLowerCase(),\n    },\n    wordQuoted: {\n        match: /\"(?:[^\"\\*]|\"\")+\"/,\n        type: () => 'quoted_word',\n        value: x => x.substring(1, x.length - 1),\n    },\n    string: {\n        match: /'(?:[^']|\\'\\')*'/,\n        value: x => {\n            return x.substring(1, x.length - 1)\n                .replace(/''/g, '\\'');\n        },\n    },\n    eString: {\n        match: /\\b(?:e|E)'(?:[^'\\\\]|[\\r\\n\\s]|(?:\\\\\\s)|(?:\\\\\\n)|(?:\\\\.)|(?:\\'\\'))+'/,\n        value: x => {\n            return x.substring(2, x.length - 1)\n                .replace(/''/g, '\\'')\n                .replace(/\\\\([\\s\\n])/g, (_, x) => x)\n                .replace(/\\\\./g, m => JSON.parse('\"' + m + '\"'));\n        },\n    },\n    qparam: {\n        match: /\\$\\d+/,\n    },\n    commentLine: /\\-\\-.*?$[\\s\\r\\n]*/,\n    commentFullOpen: /\\/\\*/,\n    commentFullClose: /\\*\\/[\\s\\r\\n]*/,\n    star: '*',\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    // word: /[a-zA-Z][A-Za-z0-9_\\-]*/,\n    lparen: '(',\n    rparen: ')',\n    lbracket: '[',\n    rbracket: ']',\n    semicolon: ';',\n    dot: /\\.(?!\\d)/,\n    op_cast: '::',\n    op_colon: ':',\n    op_plus: '+',\n    op_eq: '=',\n    op_neq: {\n        match: /(?:!=)|(?:\\<\\>)/,\n        value: () => '!=',\n    },\n    op_membertext: '->>',\n    op_member: '->',\n    op_minus: '-',\n    op_div: /\\//,\n    op_not_ilike: /\\!~~\\*/,\n    op_not_like: /\\!~~/,\n    op_ilike: /~~\\*/,\n    op_like: /~~/,\n    op_mod: '%',\n    op_exp: '^',\n    op_additive: {\n        // group other additive operators\n        match: ['||', '-', '#-', '&&'],\n    },\n    op_compare: {\n        // group other comparison operators\n        // ... to add: \"IN\" and \"NOT IN\" that are matched by keywords\n        match: ['>', '>=', '<', '<=', '@>', '<@', '?', '?|', '?&', '#>>', '>>', '<<', '~', '~*', '!~', '!~*', '@@'],\n    },\n    ops_others: {\n        // referenced as (any other operator) in https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-PRECEDENCE\n        // see also https://www.postgresql.org/docs/9.0/functions-math.html\n        match: ['|', '&', '^', '#'],\n    },\n    codeblock: {\n        match: /\\$\\$(?:.|[\\s\\t\\n\\v\\f\\r])*?\\$\\$/s,\n        lineBreaks: true,\n        value: (x) => x.substring(2, x.length - 2),\n    },\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    let commentFull = null;\n    while (tok = next.call(exports.lexer)) {\n        // js regex can't be recursive, so we'll keep track of nested opens (/*) and closes (*/).\n        if (tok.type === 'commentFullOpen') {\n            if (commentFull === null) { // initial open - start collecting content\n                commentFull = {\n                    nested: 0,\n                    offset: tok.offset,\n                    text: tok.text\n                };\n                continue;\n            }\n            commentFull.nested++;\n        }\n        if (commentFull != null) {\n            // collect comment content\n            commentFull.text += tok.text;\n            if (tok.type === 'commentFullClose') {\n                if (commentFull.nested === 0) { // finish comment, if not nested\n                    comments === null || comments === void 0 ? void 0 : comments.push(makeComment(commentFull));\n                    commentFull = null;\n                    continue;\n                }\n                commentFull.nested--;\n            }\n            continue;\n        }\n        if (tok.type === 'space') {\n            continue;\n        }\n        if (tok.type === 'commentLine') {\n            comments === null || comments === void 0 ? void 0 : comments.push(makeComment(tok));\n            continue;\n        }\n        break;\n    }\n    if (trackingLoc && tok) {\n        const start = tok.offset;\n        const loc = {\n            start,\n            end: start + tok.text.length,\n        };\n        tok._location = loc;\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\nlet comments = null;\nconst makeComment = ({ offset, text }) => ({\n    _location: { start: offset, end: offset + text.length },\n    comment: text,\n});\nfunction trackingComments(act) {\n    if (comments) {\n        throw new Error('WAT ? Recursive comments tracking 🤔🤨 ?');\n    }\n    try {\n        comments = [];\n        const ast = act();\n        return { comments, ast };\n    }\n    finally {\n        comments = null;\n    }\n}\nexports.trackingComments = trackingComments;\nlet trackingLoc = false;\nfunction tracking(act) {\n    if (trackingLoc) {\n        return act();\n    }\n    try {\n        trackingLoc = true;\n        return act();\n    }\n    finally {\n        trackingLoc = false;\n    }\n}\nexports.tracking = tracking;\nfunction track(xs, ret) {\n    if (!trackingLoc || !ret || typeof ret !== 'object') {\n        return ret;\n    }\n    const start = seek(xs, true);\n    const end = seek(xs, false);\n    if (!start || !end) {\n        return ret;\n    }\n    if (start === end) {\n        ret._location = start;\n    }\n    else {\n        const loc = {\n            start: start.start,\n            end: end.end,\n        };\n        ret._location = loc;\n    }\n    return ret;\n}\nexports.track = track;\nconst literal = Symbol('_literal');\nconst doubleQuotedSym = Symbol('_doublequoted');\nfunction box(xs, value, doubleQuoted) {\n    if (!trackingLoc && !doubleQuoted) {\n        return value;\n    }\n    return track(xs, { [literal]: value, [doubleQuotedSym]: doubleQuoted });\n}\nexports.box = box;\nfunction unwrapNoBox(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrapNoBox(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return e;\n}\nfunction doubleQuoted(value) {\n    const uw = unwrapNoBox(value);\n    if (typeof value === 'object' && (uw === null || uw === void 0 ? void 0 : uw[doubleQuotedSym])) {\n        return { doubleQuoted: true };\n    }\n    return undefined;\n}\nexports.doubleQuoted = doubleQuoted;\nfunction unbox(value) {\n    var _a;\n    if (typeof value === 'object') {\n        return (_a = value === null || value === void 0 ? void 0 : value[literal]) !== null && _a !== void 0 ? _a : value;\n    }\n    return value;\n}\nexports.unbox = unbox;\nfunction seek(xs, start) {\n    if (!xs) {\n        return null;\n    }\n    if (Array.isArray(xs)) {\n        const diff = start ? 1 : -1;\n        for (let i = start ? 0 : xs.length - 1; i >= 0 && i < xs.length; i += diff) {\n            const v = seek(xs[i], start);\n            if (v) {\n                return v;\n            }\n        }\n        return null;\n    }\n    if (typeof xs !== 'object') {\n        return null;\n    }\n    return xs._location;\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AstDefaultMapper = exports.arrayNilMap = exports.assignChanged = exports.astMapper = void 0;\nconst utils_1 = __webpack_require__(6);\n/**\n * Builds an AST modifier based on the default implementation, merged with the one you provide.\n *\n * Example of a modifier that renames all reference to columns 'foo' to 'bar'\n * ```ts\n *  const mapper = astMapper(b => ({\n *       ref: a => assignChanged(a, {\n *           name: a.name === 'foo'\n *               ? 'bar'\n *               : a.name\n *       })\n *   }));\n *\n * const modified = mapper.statement(myStatementToModify);\n * ```\n */\nfunction astMapper(modifierBuilder) {\n    const instance = new AstDefaultMapper();\n    instance.wrapped = modifierBuilder(instance);\n    return instance;\n}\nexports.astMapper = astMapper;\n/**\n * An helper function that returns a copy of an object with modified properties\n * (similar to Object.assign()), but ONLY if thos properties have changed.\n * Will return the original object if not.\n */\nfunction assignChanged(orig, assign) {\n    if (!orig) {\n        return orig;\n    }\n    let changed = false;\n    for (const k of Object.keys(assign)) {\n        if (orig[k] !== assign[k]) {\n            changed = true;\n            break;\n        }\n    }\n    if (!changed) {\n        return orig;\n    }\n    return (0, utils_1.trimNullish)({\n        ...orig,\n        ...assign,\n    }, 0);\n}\nexports.assignChanged = assignChanged;\n/**\n * An helper function that returns a map of an array, but:\n * - It will return the original array if it is null-ish\n * - It will remove all null-ish entries\n * - It will return the original array if nothing has changed\n */\nfunction arrayNilMap(collection, mapper) {\n    if (!(collection === null || collection === void 0 ? void 0 : collection.length)) {\n        return collection;\n    }\n    let changed = false;\n    let ret = collection;\n    for (let i = 0; i < collection.length; i++) {\n        const orig = collection[i];\n        const val = mapper(orig);\n        if (!changed && (!val || val !== orig)) {\n            changed = true;\n            ret = collection.slice(0, i);\n        }\n        if (!val) {\n            continue;\n        }\n        if (changed) {\n            ret.push(val);\n        }\n    }\n    return ret;\n}\nexports.arrayNilMap = arrayNilMap;\nfunction withAccepts(val) {\n    switch (val === null || val === void 0 ? void 0 : val.type) {\n        case 'select':\n        case 'delete':\n        case 'insert':\n        case 'update':\n        case 'union':\n        case 'union all':\n        case 'with':\n            return true;\n        default:\n            return false;\n    }\n}\n/**\n * Can be used to modify an AST.\n *\n * You will have to override functions that you're interested in to use this class.\n *\n * Example: Will remove all references in\n */\nclass AstDefaultMapper {\n    super() {\n        return new SkipModifier(this);\n    }\n    statement(val) {\n        switch (val.type) {\n            case 'alter table':\n                return this.alterTable(val);\n            case 'alter index':\n                return this.alterIndex(val);\n            case 'commit':\n            case 'start transaction':\n            case 'rollback':\n                return this.transaction(val);\n            case 'create index':\n                return this.createIndex(val);\n            case 'create table':\n                return this.createTable(val);\n            case 'truncate table':\n                return this.truncateTable(val);\n            case 'delete':\n                return this.delete(val);\n            case 'insert':\n                return this.insert(val);\n            case 'with':\n                return this.with(val);\n            case 'with recursive':\n                return this.withRecursive(val);\n            case 'select':\n                return this.selection(val);\n            case 'update':\n                return this.update(val);\n            case 'create extension':\n                return this.createExtension(val);\n            case 'tablespace':\n                return this.tablespace(val);\n            case 'set':\n                return this.setGlobal(val);\n            case 'set timezone':\n                return this.setTimezone(val);\n            case 'set names':\n                return this.setNames(val);\n            case 'create sequence':\n                return this.createSequence(val);\n            case 'alter sequence':\n                return this.alterSequence(val);\n            case 'begin':\n                return this.begin(val);\n            case 'drop table':\n            case 'drop index':\n            case 'drop sequence':\n            case 'drop type':\n            case 'drop trigger':\n                return this.drop(val);\n            case 'create enum':\n                return this.createEnum(val);\n            case 'alter enum':\n                return this.alterEnum(val);\n            case 'create composite type':\n                return this.createCompositeType(val);\n            case 'union':\n            case 'union all':\n                return this.union(val);\n            case 'show':\n                return this.show(val);\n            case 'prepare':\n                return this.prepare(val);\n            case 'deallocate':\n                return this.deallocate(val);\n            case 'create view':\n                return this.createView(val);\n            case 'create materialized view':\n                return this.createMaterializedView(val);\n            case 'refresh materialized view':\n                return this.refreshMaterializedView(val);\n            case 'create schema':\n                return this.createSchema(val);\n            case 'raise':\n                return this.raise(val);\n            case 'comment':\n                return this.comment(val);\n            case 'do':\n                return this.do(val);\n            case 'create function':\n                return this.createFunction(val);\n            case 'drop function':\n                return this.dropFunction(val);\n            case 'values':\n                return this.values(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    comment(val) {\n        // not really supported :/\n        return val;\n    }\n    createView(val) {\n        const query = this.select(val.query);\n        if (!query) {\n            return null;\n        }\n        const ref = this.tableRef(val.name);\n        if (!ref) {\n            return null;\n        }\n        return assignChanged(val, {\n            query,\n            name: ref,\n        });\n    }\n    createMaterializedView(val) {\n        const query = this.select(val.query);\n        if (!query) {\n            return null;\n        }\n        const ref = this.tableRef(val.name);\n        if (!ref) {\n            return null;\n        }\n        return assignChanged(val, {\n            query,\n            name: ref,\n        });\n    }\n    refreshMaterializedView(val) {\n        return val;\n    }\n    do(val) {\n        return val;\n    }\n    createFunction(val) {\n        // process arguments\n        const args = arrayNilMap(val.arguments, a => {\n            const type = this.dataType(a.type);\n            return assignChanged(a, { type });\n        });\n        // process return type\n        let returns;\n        if (val.returns) {\n            switch (val.returns.kind) {\n                case 'table':\n                    returns = assignChanged(val.returns, {\n                        columns: arrayNilMap(val.returns.columns, v => {\n                            const type = this.dataType(v.type);\n                            return type && assignChanged(v, { type });\n                        })\n                    });\n                    break;\n                case undefined:\n                case null:\n                case 'array':\n                    returns = this.dataType(val.returns);\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(val.returns);\n            }\n        }\n        return assignChanged(val, {\n            returns,\n            arguments: args,\n        });\n    }\n    dropFunction(val) {\n        const args = arrayNilMap(val.arguments, a => {\n            const type = this.dataType(a.type);\n            return assignChanged(a, { type });\n        });\n        return assignChanged(val, {\n            arguments: args,\n        });\n    }\n    show(val) {\n        return val;\n    }\n    createEnum(val) {\n        return val;\n    }\n    alterEnum(val) {\n        return val;\n    }\n    createCompositeType(val) {\n        const attributes = arrayNilMap(val.attributes, a => assignChanged(a, {\n            dataType: this.dataType(a.dataType),\n        }));\n        return assignChanged(val, { attributes });\n    }\n    drop(val) {\n        return val;\n    }\n    alterSequence(seq) {\n        if (seq.change.type === 'set options') {\n            if (seq.change.as) {\n                this.dataType(seq.change.as);\n            }\n        }\n        return seq;\n    }\n    begin(begin) {\n        return begin;\n    }\n    createSequence(seq) {\n        if (seq.options.as) {\n            this.dataType(seq.options.as);\n        }\n        return seq;\n    }\n    tablespace(val) {\n        return val;\n    }\n    setGlobal(val) {\n        return val;\n    }\n    setTimezone(val) {\n        return val;\n    }\n    setNames(val) {\n        return val;\n    }\n    update(val) {\n        if (!val) {\n            return val;\n        }\n        const table = this.tableRef(val.table);\n        if (!table) {\n            return null; // nothing to update\n        }\n        const from = val.from && this.from(val.from);\n        const where = val.where && this.expr(val.where);\n        const sets = arrayNilMap(val.sets, x => this.set(x));\n        if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {\n            return null; // nothing to update\n        }\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        return assignChanged(val, {\n            table,\n            where,\n            sets,\n            from,\n            returning,\n        });\n    }\n    insert(val) {\n        var _a, _b;\n        const into = this.tableRef(val.into);\n        if (!into) {\n            return null; // nowhere to insert into\n        }\n        const select = val.insert && this.select(val.insert);\n        if (!select) {\n            // nothing to insert\n            return null;\n        }\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        let on = (_a = val.onConflict) === null || _a === void 0 ? void 0 : _a.on;\n        switch (on === null || on === void 0 ? void 0 : on.type) {\n            case 'on constraint':\n                // nothing to do\n                break;\n            case 'on expr':\n                on = assignChanged(on, {\n                    exprs: arrayNilMap(on.exprs, e => this.expr(e)),\n                });\n                break;\n            case null:\n            case undefined:\n                break;\n            default:\n                throw utils_1.NotSupported.never(on);\n        }\n        let ocdo = (_b = val.onConflict) === null || _b === void 0 ? void 0 : _b.do;\n        if (ocdo && ocdo !== 'do nothing') {\n            const sets = arrayNilMap(ocdo.sets, x => this.set(x));\n            if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {\n                ocdo = 'do nothing';\n            }\n            else if (ocdo.sets !== sets) {\n                ocdo = { sets };\n            }\n        }\n        return assignChanged(val, {\n            into,\n            insert: select,\n            returning,\n            onConflict: !ocdo ? val.onConflict : assignChanged(val.onConflict, {\n                do: ocdo,\n                on,\n            }),\n        });\n    }\n    raise(val) {\n        return assignChanged(val, {\n            formatExprs: val.formatExprs && arrayNilMap(val.formatExprs, x => this.expr(x)),\n            using: val.using && arrayNilMap(val.using, u => {\n                return assignChanged(u, {\n                    value: this.expr(u.value),\n                });\n            }),\n        });\n    }\n    delete(val) {\n        const from = this.tableRef(val.from);\n        if (!from) {\n            return null; // nothing to delete\n        }\n        const where = val.where && this.expr(val.where);\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        return assignChanged(val, {\n            where,\n            returning,\n            from,\n        });\n    }\n    createSchema(val) {\n        return val;\n    }\n    createTable(val) {\n        const columns = arrayNilMap(val.columns, col => {\n            switch (col.kind) {\n                case 'column':\n                    return this.createColumn(col);\n                case 'like table':\n                    return this.likeTable(col);\n                default:\n                    throw utils_1.NotSupported.never(col);\n            }\n        });\n        if (!(columns === null || columns === void 0 ? void 0 : columns.length)) {\n            return null; // no column to create\n        }\n        return assignChanged(val, {\n            columns,\n        });\n    }\n    likeTable(col) {\n        const like = this.tableRef(col.like);\n        if (!like) {\n            return null;\n        }\n        return assignChanged(col, { like });\n    }\n    truncateTable(val) {\n        return val;\n    }\n    constraint(c) {\n        switch (c.type) {\n            case 'not null':\n            case 'null':\n            case 'primary key':\n            case 'unique':\n            case 'add generated':\n                return c;\n            case 'default': {\n                const def = this.expr(c.default);\n                if (!def) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    default: def,\n                });\n            }\n            case 'check': {\n                const def = this.expr(c.expr);\n                if (!def) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    expr: def,\n                });\n            }\n            case 'reference': {\n                const foreignTable = this.tableRef(c.foreignTable);\n                if (!foreignTable) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    foreignTable,\n                });\n            }\n            default:\n                throw utils_1.NotSupported.never(c);\n        }\n    }\n    set(st) {\n        const value = this.expr(st.value);\n        if (!value) {\n            return null;\n        }\n        return assignChanged(st, {\n            value,\n        });\n    }\n    // =========================================\n    // ================ STUFF ==================\n    // =========================================\n    /** Called when a data type definition is encountered */\n    dataType(dataType) {\n        return dataType;\n    }\n    /** Called when an alias of a table is created */\n    tableRef(st) {\n        return st;\n    }\n    transaction(val) {\n        return val;\n    }\n    createExtension(val) {\n        return val;\n    }\n    createIndex(val) {\n        const expressions = arrayNilMap(val.expressions, e => {\n            const expression = this.expr(e.expression);\n            if (expression === e.expression) {\n                return e;\n            }\n            if (!expression) {\n                return null; // no more index expression\n            }\n            return {\n                ...e,\n                expression,\n            };\n        });\n        if (!(expressions === null || expressions === void 0 ? void 0 : expressions.length)) {\n            return null; // no columns to create index on\n        }\n        return assignChanged(val, {\n            expressions,\n        });\n    }\n    prepare(st) {\n        const statement = this.statement(st.statement);\n        if (!statement) {\n            return null;\n        }\n        return assignChanged(st, {\n            args: arrayNilMap(st.args, a => this.dataType(a)),\n            statement,\n        });\n    }\n    deallocate(st) {\n        return st;\n    }\n    // =========================================\n    // ============== ALTER INDEX ==============\n    // =========================================\n    alterIndex(st) {\n        // not much as of today...might improve this in the future\n        return st;\n    }\n    // =========================================\n    // ============== ALTER TABLE ==============\n    // =========================================\n    alterTable(st) {\n        var _a;\n        const table = this.tableRef(st.table);\n        if (!table) {\n            return null; // no table\n        }\n        let changes = [];\n        let hasChanged = false;\n        for (let i = 0; i < (((_a = st.changes) === null || _a === void 0 ? void 0 : _a.length) || 0); i++) {\n            const currentChange = st.changes[i];\n            const change = this.tableAlteration(currentChange, st.table);\n            hasChanged = hasChanged || (change != currentChange);\n            if (!!change) {\n                changes.push(change);\n            }\n        }\n        if (!changes.length) {\n            return null; // no change left\n        }\n        if (!hasChanged) {\n            return st;\n        }\n        return assignChanged(st, {\n            table,\n            changes,\n        });\n    }\n    tableAlteration(change, table) {\n        switch (change.type) {\n            case 'add column':\n                return this.addColumn(change, table);\n            case 'add constraint':\n                return this.addConstraint(change, table);\n            case 'alter column':\n                return this.alterColumn(change, table);\n            case 'rename':\n                return this.renameTable(change, table);\n            case 'rename column':\n                return this.renameColumn(change, table);\n            case 'rename constraint':\n                return this.renameConstraint(change, table);\n            case 'drop column':\n                return this.dropColumn(change, table);\n            case 'drop constraint':\n                return this.dropConstraint(change, table);\n            case 'owner':\n                return this.setTableOwner(change, table);\n            default:\n                throw utils_1.NotSupported.never(change);\n        }\n    }\n    dropColumn(change, table) {\n        return change;\n    }\n    dropConstraint(change, table) {\n        return change;\n    }\n    setTableOwner(change, table) {\n        return change;\n    }\n    renameConstraint(change, table) {\n        return change;\n    }\n    renameColumn(change, table) {\n        return change;\n    }\n    renameTable(change, table) {\n        return change;\n    }\n    alterColumn(change, inTable) {\n        let alter;\n        switch (change.alter.type) {\n            case 'set default':\n                alter = this.setColumnDefault(change.alter, inTable, change.column);\n                break;\n            case 'set type':\n                alter = this.setColumnType(change.alter, inTable, change.column);\n                break;\n            case 'drop default':\n            case 'set not null':\n            case 'drop not null':\n                alter = this.alterColumnSimple(change.alter, inTable, change.column);\n                break;\n            case 'add generated':\n                alter = this.alterColumnAddGenerated(change.alter, inTable, change.column);\n                break;\n            default:\n                throw utils_1.NotSupported.never(change.alter);\n        }\n        if (!alter) {\n            return null; // no more alter\n        }\n        return assignChanged(change, {\n            alter,\n        });\n    }\n    setColumnType(alter, inTable, inColumn) {\n        const dataType = this.dataType(alter.dataType);\n        return assignChanged(alter, {\n            dataType,\n        });\n    }\n    alterColumnAddGenerated(alter, inTable, inColumn) {\n        return alter;\n    }\n    alterColumnSimple(alter, inTable, inColumn) {\n        return alter;\n    }\n    setColumnDefault(alter, inTable, inColumn) {\n        const def = this.expr(alter.default);\n        if (!def) {\n            return null; // no more default to set\n        }\n        return assignChanged(alter, {\n            default: def,\n        });\n    }\n    addConstraint(change, inTable) {\n        return change;\n    }\n    addColumn(change, inTable) {\n        const column = this.createColumn(change.column);\n        if (!column) {\n            return null; // no more column to add\n        }\n        return assignChanged(change, {\n            column,\n        });\n    }\n    createColumn(col) {\n        var _a;\n        // to be overriden\n        const dataType = this.dataType(col.dataType);\n        if (!dataType) {\n            return null; // no data type => remove column\n        }\n        const constraints = (_a = arrayNilMap(col.constraints, m => this.constraint(m))) !== null && _a !== void 0 ? _a : undefined;\n        return assignChanged(col, {\n            dataType,\n            constraints,\n        });\n    }\n    // =========================================\n    // ============== SELECTIONS ==============\n    // =========================================\n    select(val) {\n        switch (val.type) {\n            case 'select':\n                return this.selection(val);\n            case 'union':\n            case 'union all':\n                return this.union(val);\n            case 'with':\n                return this.with(val);\n            case 'values':\n                return this.values(val);\n            case 'with recursive':\n                return this.withRecursive(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    selection(val) {\n        var _a, _b;\n        const from = arrayNilMap(val.from, c => this.from(c));\n        const columns = arrayNilMap(val.columns, c => this.selectionColumn(c));\n        const where = val.where && this.expr(val.where);\n        const groupBy = arrayNilMap(val.groupBy, c => this.expr(c));\n        const having = val.having && this.expr(val.having);\n        const orderBy = this.orderBy(val.orderBy);\n        const limit = assignChanged(val.limit, {\n            limit: this.expr((_a = val.limit) === null || _a === void 0 ? void 0 : _a.limit),\n            offset: this.expr((_b = val.limit) === null || _b === void 0 ? void 0 : _b.offset),\n        });\n        return assignChanged(val, {\n            from,\n            columns,\n            where,\n            groupBy,\n            having,\n            orderBy,\n            limit,\n        });\n    }\n    orderBy(orderBy) {\n        return arrayNilMap(orderBy, c => {\n            const by = this.expr(c.by);\n            if (!by) {\n                return null;\n            }\n            if (by === c.by) {\n                return c;\n            }\n            return {\n                ...c,\n                by,\n            };\n        });\n    }\n    union(val) {\n        const left = this.select(val.left);\n        const right = this.select(val.right);\n        if (!left || !right) {\n            return left !== null && left !== void 0 ? left : right;\n        }\n        return assignChanged(val, {\n            left,\n            right\n        });\n    }\n    with(val) {\n        const bind = arrayNilMap(val.bind, s => {\n            const statement = this.statement(s.statement);\n            return withAccepts(statement)\n                ? assignChanged(s, { statement })\n                : null;\n        });\n        // no bindngs\n        if (!bind) {\n            return null;\n        }\n        const _in = this.statement(val.in);\n        if (!withAccepts(_in)) {\n            return null;\n        }\n        return assignChanged(val, {\n            bind,\n            in: _in,\n        });\n    }\n    withRecursive(val) {\n        const statement = this.union(val.bind);\n        if (!statement) {\n            return null;\n        }\n        // 'with recursive' only accepts unions\n        if (statement.type !== 'union' && statement.type !== 'union all') {\n            return null;\n        }\n        const _in = this.statement(val.in);\n        if (!withAccepts(_in)) {\n            return null;\n        }\n        return assignChanged(val, {\n            bind: statement,\n            in: _in,\n        });\n    }\n    from(from) {\n        switch (from.type) {\n            case 'table':\n                return this.fromTable(from);\n            case 'statement':\n                return this.fromStatement(from);\n            case 'call':\n                return this.fromCall(from);\n            default:\n                throw utils_1.NotSupported.never(from);\n        }\n    }\n    fromCall(from) {\n        const call = this.call(from);\n        if (!call || call.type !== 'call') {\n            return null;\n        }\n        return assignChanged(from, call);\n    }\n    fromStatement(from) {\n        const statement = this.select(from.statement);\n        if (!statement) {\n            return null; // nothing to select from\n        }\n        const join = from.join && this.join(from.join);\n        return assignChanged(from, {\n            statement,\n            join,\n        });\n    }\n    values(from) {\n        const values = arrayNilMap(from.values, x => arrayNilMap(x, y => this.expr(y)));\n        if (!(values === null || values === void 0 ? void 0 : values.length)) {\n            return null; // nothing to select from\n        }\n        return assignChanged(from, {\n            values,\n        });\n    }\n    join(join) {\n        const on = join.on && this.expr(join.on);\n        if (!on && !join.using) {\n            return join;\n        }\n        return assignChanged(join, {\n            on,\n        });\n    }\n    fromTable(from) {\n        const nfrom = this.tableRef(from.name);\n        if (!nfrom) {\n            return null; // nothing to select from\n        }\n        const join = from.join && this.join(from.join);\n        return assignChanged(from, {\n            name: nfrom,\n            join,\n        });\n    }\n    selectionColumn(val) {\n        const expr = this.expr(val.expr);\n        if (!expr) {\n            return null; // not selected anymore\n        }\n        return assignChanged(val, {\n            expr,\n        });\n    }\n    // =========================================\n    // ============== EXPRESSIONS ==============\n    // =========================================\n    expr(val) {\n        if (!val) {\n            return val;\n        }\n        switch (val.type) {\n            case 'binary':\n                return this.binary(val);\n            case 'unary':\n                return this.unary(val);\n            case 'ref':\n                return this.ref(val);\n            case 'string':\n            case 'numeric':\n            case 'integer':\n            case 'boolean':\n            case 'constant':\n            case 'null':\n                return this.constant(val);\n            case 'list':\n            case 'array':\n                return this.array(val);\n            case 'array select':\n                return this.arraySelect(val);\n            case 'call':\n                return this.call(val);\n            case 'cast':\n                return this.cast(val);\n            case 'case':\n                return this.case(val);\n            case 'member':\n                return this.member(val);\n            case 'arrayIndex':\n                return this.arrayIndex(val);\n            case 'ternary':\n                return this.ternary(val);\n            case 'select':\n            case 'union':\n            case 'union all':\n            case 'with':\n            case 'with recursive':\n                return this.select(val);\n            case 'keyword':\n                return this.valueKeyword(val);\n            case 'parameter':\n                return this.parameter(val);\n            case 'extract':\n                return this.extract(val);\n            case 'overlay':\n                return this.callOverlay(val);\n            case 'substring':\n                return this.callSubstring(val);\n            case 'values':\n                return this.values(val);\n            case 'default':\n                return this.default(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    arraySelect(val) {\n        const select = this.select(val.select);\n        if (!select) {\n            return null;\n        }\n        return assignChanged(val, { select });\n    }\n    extract(st) {\n        const from = this.expr(st.from);\n        if (!from) {\n            return null;\n        }\n        return assignChanged(st, { from });\n    }\n    valueKeyword(val) {\n        return val;\n    }\n    ternary(val) {\n        const value = this.expr(val.value);\n        const lo = this.expr(val.lo);\n        const hi = this.expr(val.hi);\n        if (!value || !lo || !hi) {\n            return null; // missing a branch\n        }\n        return assignChanged(val, {\n            value,\n            lo,\n            hi,\n        });\n    }\n    parameter(st) {\n        return st;\n    }\n    arrayIndex(val) {\n        const array = this.expr(val.array);\n        const index = this.expr(val.index);\n        if (!array || !index) {\n            return null;\n        }\n        return assignChanged(val, {\n            array,\n            index,\n        });\n    }\n    member(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    case(val) {\n        const value = val.value && this.expr(val.value);\n        const whens = arrayNilMap(val.whens, w => {\n            const when = this.expr(w.when);\n            const value = this.expr(w.value);\n            if (!when || !value) {\n                return null;\n            }\n            return assignChanged(w, {\n                value,\n                when,\n            });\n        });\n        if (!(whens === null || whens === void 0 ? void 0 : whens.length)) {\n            return null; // no case\n        }\n        const els = val.else && this.expr(val.else);\n        return assignChanged(val, {\n            value,\n            whens,\n            else: els,\n        });\n    }\n    cast(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    call(val) {\n        var _a;\n        const args = arrayNilMap(val.args, a => this.expr(a));\n        if (!args) {\n            return null;\n        }\n        const orderBy = this.orderBy(val.orderBy);\n        const filter = this.expr(val.filter);\n        const withinGroupList = val.withinGroup ? [val.withinGroup] : undefined;\n        const withinGroup = (_a = this.orderBy(withinGroupList)) === null || _a === void 0 ? void 0 : _a[0];\n        return assignChanged(val, {\n            args,\n            orderBy,\n            filter,\n            withinGroup,\n        });\n    }\n    callSubstring(val) {\n        return assignChanged(val, {\n            value: this.expr(val.value),\n            from: this.expr(val.from),\n            for: this.expr(val.for),\n        });\n    }\n    callOverlay(val) {\n        return assignChanged(val, {\n            value: this.expr(val.value),\n            placing: this.expr(val.placing),\n            from: this.expr(val.from),\n            for: this.expr(val.for),\n        });\n    }\n    array(val) {\n        const expressions = arrayNilMap(val.expressions, a => this.expr(a));\n        if (!expressions) {\n            return null;\n        }\n        return assignChanged(val, {\n            expressions,\n        });\n    }\n    constant(value) {\n        return value;\n    }\n    default(value) {\n        return value;\n    }\n    /** Called when a reference is used */\n    ref(val) {\n        return val;\n    }\n    unary(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    binary(val) {\n        const left = this.expr(val.left);\n        const right = this.expr(val.right);\n        if (!left || !right) {\n            return null;\n        }\n        return assignChanged(val, {\n            left,\n            right,\n        });\n    }\n}\nexports.AstDefaultMapper = AstDefaultMapper;\n// ====== auto implement the replace mechanism\nconst proto = AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(proto, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                var _a;\n                if (this.skipNext) {\n                    this.skipNext = false;\n                    return orig.apply(this, args);\n                }\n                const impl = (_a = this.wrapped) === null || _a === void 0 ? void 0 : _a[k];\n                if (!impl) {\n                    return orig.apply(this, args);\n                }\n                return impl.apply(this.wrapped, args);\n            };\n        }\n    });\n}\n// ====== auto implement the skip mechanism\nclass SkipModifier extends AstDefaultMapper {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n    }\n}\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(SkipModifier.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                this.parent.skipNext = true;\n                return orig.apply(this.parent, args);\n            };\n        }\n    });\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sqlKeywords = void 0;\n// https://www.postgresql.org/docs/current/sql-keywords-appendix.html\n// $('table.table').children('tbody').children().toArray().filter(x => { const txt = $($(x).children()[1]).text(); return txt.includes('reserved') && !txt.includes('non-reserved')}).map(x => $($(x).children()[0]).text())\nexports.sqlKeywords = [\n    \"ALL\", \"ANALYSE\", \"ANALYZE\", \"AND\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"ASYMMETRIC\", \"AUTHORIZATION\", \"BINARY\", \"BOTH\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLLATION\", \"CONCURRENTLY\", \"CONSTRAINT\", \"CREATE\", \"CROSS\", \"CURRENT_CATALOG\", \"CURRENT_DATE\", \"CURRENT_ROLE\", \"CURRENT_SCHEMA\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\", \"DEFAULT\", \"DEFERRABLE\", \"DESC\", \"DISTINCT\", \"DO\", \"ELSE\", \"END\", \"EXCEPT\", \"FALSE\", \"FETCH\", \"FOR\", \"FOREIGN\", \"FREEZE\", \"FROM\", \"FULL\", \"GRANT\", \"GROUP\", \"HAVING\", \"ILIKE\", \"IN\", \"INITIALLY\", \"INNER\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"LATERAL\", \"LEADING\", \"LEFT\", \"LIKE\", \"LIMIT\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"NATURAL\", \"NOT\", \"NOTNULL\", \"NULL\", \"OFFSET\", \"ON\", \"ONLY\", \"OR\", \"ORDER\", \"OUTER\", \"OVERLAPS\", \"PLACING\", \"PRIMARY\", \"REFERENCES\", \"RETURNING\", \"RIGHT\", \"SELECT\", \"SESSION_USER\", \"SIMILAR\", \"SOME\", \"SYMMETRIC\", \"TABLE\", \"TABLESAMPLE\", \"THEN\", \"TO\", \"TRAILING\", \"TRUE\", \"UNION\", \"UNIQUE\", \"USER\", \"USING\", \"VARIADIC\", \"VERBOSE\", \"WHEN\", \"WHERE\", \"WINDOW\", \"WITH\"\n    // added manually\n    ,\n    \"PRECISION\"\n];\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intervalToString = exports.normalizeInterval = exports.buildInterval = void 0;\nconst types = [\n    ['years', 12],\n    ['months', 30],\n    ['days', 24],\n    ['hours', 60],\n    ['minutes', 60],\n    ['seconds', 1000],\n    ['milliseconds', 0],\n];\nfunction* unwrap(k) {\n    if (typeof k[1] === 'number') {\n        yield k;\n    }\n    else {\n        for (const v of k) {\n            yield* unwrap(v);\n        }\n    }\n}\nfunction buildInterval(orig, vals) {\n    var _a;\n    const ret = {};\n    if (vals === 'invalid') {\n        throw new Error(`invalid input syntax for type interval: \"${orig}\"`);\n    }\n    for (const [k, v] of unwrap(vals)) {\n        ret[k] = ((_a = ret[k]) !== null && _a !== void 0 ? _a : 0) + v;\n    }\n    return ret;\n}\nexports.buildInterval = buildInterval;\n/** Returns a normalized copy of the given interval */\nfunction normalizeInterval(value) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const ret = { ...value };\n    // trim non-integers\n    for (let i = 0; i < types.length; i++) {\n        const [k, mul] = types[i];\n        const v = (_a = ret[k]) !== null && _a !== void 0 ? _a : 0;\n        const int = v >= 0\n            ? Math.floor(v)\n            : Math.ceil(v);\n        if (!v || int === v) {\n            continue;\n        }\n        const nk = (_b = types[i + 1]) === null || _b === void 0 ? void 0 : _b[0];\n        if (nk) {\n            ret[nk] = ((_c = ret[nk]) !== null && _c !== void 0 ? _c : 0) + mul * (v - int);\n        }\n        ret[k] = int;\n    }\n    if (ret.months || ret.years) {\n        const m = ((_d = ret.months) !== null && _d !== void 0 ? _d : 0) + ((_e = ret.years) !== null && _e !== void 0 ? _e : 0) * 12;\n        ret.months = m % 12;\n        ret.years = (m - ret.months) / 12;\n    }\n    // normalize time\n    let t = ((_f = ret.hours) !== null && _f !== void 0 ? _f : 0) * 3600\n        + ((_g = ret.minutes) !== null && _g !== void 0 ? _g : 0) * 60\n        + ((_h = ret.seconds) !== null && _h !== void 0 ? _h : 0)\n        + ((_j = ret.milliseconds) !== null && _j !== void 0 ? _j : 0) / 1000;\n    let sign = 1;\n    if (t < 0) {\n        sign = -1;\n        t = -t;\n    }\n    if (t >= 3600) {\n        ret.hours = sign * Math.floor(t / 3600);\n        t -= sign * ret.hours * 3600;\n    }\n    else {\n        delete ret.hours;\n    }\n    if (t >= 60) {\n        ret.minutes = sign * Math.floor(t / 60);\n        t -= sign * ret.minutes * 60;\n    }\n    else {\n        delete ret.minutes;\n    }\n    if (t > 0) {\n        ret.seconds = sign * Math.floor(t);\n        t -= sign * ret.seconds;\n    }\n    else {\n        delete ret.seconds;\n    }\n    if (t > 0) {\n        ret.milliseconds = sign * Math.round(t * 1000);\n    }\n    else {\n        delete ret.milliseconds;\n    }\n    // trim zeros.\n    for (const [k] of types) {\n        if (!ret[k]) {\n            delete ret[k];\n        }\n    }\n    return ret;\n}\nexports.normalizeInterval = normalizeInterval;\n/** Interval value to postgres string representation  */\nfunction intervalToString(value) {\n    var _a, _b, _c;\n    value = normalizeInterval(value);\n    const ret = [];\n    if (value.years) {\n        ret.push(value.years === 1 ? '1 year' : value.years + ' years');\n    }\n    if (value.months) {\n        ret.push(value.months === 1 ? '1 month' : value.months + ' months');\n    }\n    if (value.days) {\n        ret.push(value.days === 1 ? '1 day' : value.days + ' days');\n    }\n    if (value.hours || value.minutes || value.seconds || value.milliseconds) {\n        let time = `${num((_a = value.hours) !== null && _a !== void 0 ? _a : 0)}:${num((_b = value.minutes) !== null && _b !== void 0 ? _b : 0)}:${num((_c = value.seconds) !== null && _c !== void 0 ? _c : 0)}`;\n        if (value.milliseconds) {\n            time = time + (value.milliseconds / 1000).toString().substr(1);\n        }\n        if (neg(value.hours) || neg(value.minutes) || neg(value.seconds) || neg(value.milliseconds)) {\n            time = '-' + time;\n        }\n        ret.push(time);\n    }\n    return ret.join(' ');\n}\nexports.intervalToString = intervalToString;\nfunction num(v) {\n    v = Math.abs(v);\n    return v < 10 ? '0' + v : v.toString();\n}\nfunction neg(v) {\n    return v && v < 0;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.astVisitor = void 0;\nconst ast_mapper_1 = __webpack_require__(2);\nclass Visitor {\n    super() {\n        return new SkipVisitor(this);\n    }\n}\n// =============== auto implement the mapper\nconst mapperProto = ast_mapper_1.AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(mapperProto)) {\n    const orig = mapperProto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(Visitor.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                const impl = this.visitor[k];\n                if (!impl) {\n                    // just ignore & forward call to mapper\n                    return orig.apply(this, args);\n                }\n                // return first argument\n                // ...which means \"I dont wana change anything\"\n                //    in the ast-modifier language.\n                impl.apply(this.visitor, args);\n                return args[0];\n            };\n        }\n    });\n}\n// ====== auto implement the skip mechanism\nclass SkipVisitor {\n    constructor(parent) {\n        this.parent = parent;\n    }\n}\nfor (const k of Object.getOwnPropertyNames(mapperProto)) {\n    const orig = mapperProto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(SkipVisitor.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                return orig.apply(this.parent, args);\n            };\n        }\n    });\n}\n/**\n * Builds an AST visitor based on the default implementation, merged with the one you provide.\n *\n * Example of visitor which counts references to a column 'foo':\n *\n * ```ts\n * let cnt = 0;\n * const visitor = astVisitor(v => ({\n *      ref: r => {\n *          if (r.name === 'foo') {\n *              cnt++;\n *          }\n *          v.super().ref(r);\n *      }\n *  }));\n *\n * visitor.statement(myStatementToCount);\n * console.log(`${cnt} references to foo !`);\n * ```\n */\nfunction astVisitor(visitorBuilder) {\n    return (0, ast_mapper_1.astMapper)(m => {\n        const ret = new Visitor();\n        ret.mapper = m;\n        ret.visitor = visitorBuilder(ret);\n        return ret;\n    });\n}\nexports.astVisitor = astVisitor;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimNullish = exports.NotSupported = void 0;\nclass NotSupported extends Error {\n    constructor(what) {\n        super('Not supported' + (what ? ': ' + what : ''));\n    }\n    static never(value, msg) {\n        return new NotSupported(`${msg !== null && msg !== void 0 ? msg : ''} ${JSON.stringify(value)}`);\n    }\n}\nexports.NotSupported = NotSupported;\nfunction trimNullish(value, depth = 5) {\n    if (depth < 0)\n        return value;\n    if (value instanceof Array) {\n        value.forEach(x => trimNullish(x, depth - 1));\n    }\n    if (typeof value !== 'object' || value instanceof Date)\n        return value;\n    if (!value) {\n        return value;\n    }\n    for (const k of Object.keys(value)) {\n        const val = value[k];\n        if (val === undefined || val === null)\n            delete value[k];\n        else\n            trimNullish(val, depth - 1);\n    }\n    return value;\n}\nexports.trimNullish = trimNullish;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeInterval = exports.intervalToString = exports.toSql = exports.astMapper = exports.assignChanged = exports.arrayNilMap = exports.astVisitor = exports.parseWithComments = exports.parseIntervalLiteral = exports.parseGeometricLiteral = exports.parseArrayLiteral = exports.parseFirst = exports.parse = void 0;\nvar parser_1 = __webpack_require__(8);\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parser_1.parse; } });\nObject.defineProperty(exports, \"parseFirst\", { enumerable: true, get: function () { return parser_1.parseFirst; } });\nObject.defineProperty(exports, \"parseArrayLiteral\", { enumerable: true, get: function () { return parser_1.parseArrayLiteral; } });\nObject.defineProperty(exports, \"parseGeometricLiteral\", { enumerable: true, get: function () { return parser_1.parseGeometricLiteral; } });\nObject.defineProperty(exports, \"parseIntervalLiteral\", { enumerable: true, get: function () { return parser_1.parseIntervalLiteral; } });\nObject.defineProperty(exports, \"parseWithComments\", { enumerable: true, get: function () { return parser_1.parseWithComments; } });\nvar ast_visitor_1 = __webpack_require__(5);\nObject.defineProperty(exports, \"astVisitor\", { enumerable: true, get: function () { return ast_visitor_1.astVisitor; } });\nvar ast_mapper_1 = __webpack_require__(2);\nObject.defineProperty(exports, \"arrayNilMap\", { enumerable: true, get: function () { return ast_mapper_1.arrayNilMap; } });\nObject.defineProperty(exports, \"assignChanged\", { enumerable: true, get: function () { return ast_mapper_1.assignChanged; } });\nObject.defineProperty(exports, \"astMapper\", { enumerable: true, get: function () { return ast_mapper_1.astMapper; } });\nvar to_sql_1 = __webpack_require__(19);\nObject.defineProperty(exports, \"toSql\", { enumerable: true, get: function () { return to_sql_1.toSql; } });\n__exportStar(__webpack_require__(21), exports);\nvar interval_builder_1 = __webpack_require__(4);\nObject.defineProperty(exports, \"intervalToString\", { enumerable: true, get: function () { return interval_builder_1.intervalToString; } });\nObject.defineProperty(exports, \"normalizeInterval\", { enumerable: true, get: function () { return interval_builder_1.normalizeInterval; } });\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseGeometricLiteral = exports.parseIntervalLiteral = exports.parseArrayLiteral = exports.parse = exports.parseWithComments = exports.parseFirst = void 0;\nconst nearley_1 = __webpack_require__(9);\nconst main_ne_1 = __importDefault(__webpack_require__(10));\nconst array_ne_1 = __importDefault(__webpack_require__(11));\nconst geometric_ne_1 = __importDefault(__webpack_require__(13));\nconst interval_ne_1 = __importDefault(__webpack_require__(15));\nconst interval_iso_ne_1 = __importDefault(__webpack_require__(17));\nconst interval_builder_1 = __webpack_require__(4);\nconst lexer_1 = __webpack_require__(1);\nlet sqlCompiled;\nlet arrayCompiled;\nlet geometricCompiled;\nlet intervalTextCompiled;\nlet intervalIsoCompiled;\n/** Parse the first SQL statement in the given text (discards the rest), and return its AST */\nfunction parseFirst(sql) {\n    const first = parse(sql);\n    return first[0];\n}\nexports.parseFirst = parseFirst;\n/** Parse an AST from SQL, and get the comments */\nfunction parseWithComments(sql, options) {\n    return (0, lexer_1.trackingComments)(() => parse(sql, options));\n}\nexports.parseWithComments = parseWithComments;\nfunction parse(sql, optEntry) {\n    if (!sqlCompiled) {\n        sqlCompiled = nearley_1.Grammar.fromCompiled(main_ne_1.default);\n    }\n    const entry = typeof optEntry === 'string'\n        ? optEntry\n        : optEntry === null || optEntry === void 0 ? void 0 : optEntry.entry;\n    const opts = typeof optEntry === 'string' ? null : optEntry;\n    // parse sql\n    const doParse = () => _parse(sql, sqlCompiled, entry);\n    let parsed = (opts === null || opts === void 0 ? void 0 : opts.locationTracking)\n        ? (0, lexer_1.tracking)(doParse)\n        : doParse();\n    // always return an array of statements.\n    if (typeof optEntry !== 'string' && !Array.isArray(parsed)) {\n        parsed = [parsed];\n    }\n    return parsed;\n}\nexports.parse = parse;\nfunction parseArrayLiteral(sql) {\n    if (!arrayCompiled) {\n        arrayCompiled = nearley_1.Grammar.fromCompiled(array_ne_1.default);\n    }\n    return _parse(sql, arrayCompiled);\n}\nexports.parseArrayLiteral = parseArrayLiteral;\nfunction parseIntervalLiteral(literal) {\n    if (literal.startsWith('P')) {\n        if (!intervalIsoCompiled) {\n            intervalIsoCompiled = nearley_1.Grammar.fromCompiled(interval_iso_ne_1.default);\n        }\n        return (0, interval_builder_1.buildInterval)(literal, _parse(literal, intervalIsoCompiled));\n    }\n    else {\n        if (!intervalTextCompiled) {\n            intervalTextCompiled = nearley_1.Grammar.fromCompiled(interval_ne_1.default);\n        }\n        const low = literal.toLowerCase(); // full text syntax is case insensitive\n        return (0, interval_builder_1.buildInterval)(literal, _parse(low, intervalTextCompiled));\n    }\n}\nexports.parseIntervalLiteral = parseIntervalLiteral;\nfunction parseGeometricLiteral(sql, type) {\n    if (!geometricCompiled) {\n        geometricCompiled = nearley_1.Grammar.fromCompiled(geometric_ne_1.default);\n    }\n    return _parse(sql, geometricCompiled, type);\n}\nexports.parseGeometricLiteral = parseGeometricLiteral;\nfunction _parse(sql, grammar, entry) {\n    try {\n        grammar.start = entry !== null && entry !== void 0 ? entry : 'main';\n        const parser = new nearley_1.Parser(grammar);\n        parser.feed(sql);\n        const asts = parser.finish();\n        if (!asts.length) {\n            throw new Error('Unexpected end of input');\n        }\n        else if (asts.length !== 1) {\n            throw new Error(`💀 Ambiguous SQL syntax: Please file an issue stating the request that has failed at https://github.com/oguimbal/pgsql-ast-parser:\n\n        ${sql}\n\n        `);\n        }\n        return asts[0];\n    }\n    catch (e) {\n        if (typeof (e === null || e === void 0 ? void 0 : e.message) !== 'string') {\n            throw e;\n        }\n        let msg = e.message;\n        // remove all the stack crap of nearley parser\n        let begin = null;\n        const parts = [];\n        const reg = /A (.+) token based on:/g;\n        let m;\n        while (m = reg.exec(msg)) {\n            begin = begin !== null && begin !== void 0 ? begin : msg.substr(0, m.index);\n            parts.push(`    - A \"${m[1]}\" token`);\n        }\n        if (begin) {\n            msg = begin + parts.join('\\n') + '\\n\\n';\n        }\n        e.message = msg;\n        throw e;\n    }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"nearley\");\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst lexer_1 = __webpack_require__(1);\nconst lexer_2 = __webpack_require__(1);\n// usage ex:  replace track(whatever) with debug(track)(whatever)\nfunction debug(fn) {\n    fn = fn || ((x) => x);\n    return ((x, ...args) => {\n        debugger;\n        return fn(x, ...args);\n    });\n}\nfunction asName(val) {\n    return asNameWithColumns(val, undefined);\n}\nfunction asNameWithColumns(val, columns) {\n    const name = toStr(val);\n    if (!columns || columns.length === 0) {\n        return (0, lexer_2.track)(val, { name });\n    }\n    return (0, lexer_2.track)(val, {\n        name,\n        columns: columns.map(c => ({ name: toStr(c) })),\n    });\n}\nfunction asLit(val) {\n    const value = toStr(val);\n    return (0, lexer_2.track)(val, { value });\n}\nfunction unwrap(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrap(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return (0, lexer_2.unbox)(e);\n}\nconst get = (i) => (x) => (0, lexer_2.track)(x, x[i]);\nconst last = (x) => Array.isArray(x) ? (0, lexer_2.track)(x[x.length - 1], x[x.length - 1]) : x;\nconst trim = (x) => x && x.trim();\nconst value = (x) => x && x.value;\nfunction flatten(e) {\n    if (Array.isArray(e)) {\n        const ret = [];\n        for (const i of e) {\n            ret.push(...flatten(i));\n        }\n        return ret;\n    }\n    if (!e) {\n        return [];\n    }\n    return [e];\n}\nfunction asStr(value) {\n    var _a;\n    value = (0, lexer_2.unbox)(value);\n    return (_a = value === null || value === void 0 ? void 0 : value.value) !== null && _a !== void 0 ? _a : value;\n}\nfunction flattenStr(e) {\n    const fl = flatten((0, lexer_2.unbox)(e));\n    return fl.filter(x => !!x)\n        .map(x => asStr(x))\n        .filter(x => typeof x === 'string')\n        .map(x => x.trim())\n        .filter(x => !!x);\n}\nfunction toStr(e, join) {\n    return flattenStr(e).join(join || '');\n}\nfunction fromEntries(vals) {\n    const ret = {};\n    for (const [k, v] of vals) {\n        ret[k] = v;\n    }\n    return ret;\n}\nconst kwSensitivity = { sensitivity: 'accent' };\nconst eqInsensitive = (a, b) => a.localeCompare(b, undefined, kwSensitivity) === 0;\nconst notReservedKw = (kw) => (x, _, rej) => {\n    const val = asStr(x[0]);\n    if (eqInsensitive(val, kw)) {\n        return (0, lexer_2.box)(x, kw);\n    }\n    return rej;\n};\nconst kw = notReservedKw;\nconst anyKw = (...kw) => {\n    const kwSet = new Set(kw);\n    return (x, _, rej) => {\n        const val = typeof x[0] === 'string' ? x[0] : x[0].value;\n        return kwSet.has(val) ? val : rej;\n    };\n};\nfunction setSeqOpts(ret, opts) {\n    const defs = new Set();\n    const unboxed = opts.map(lexer_2.unbox);\n    for (const [k, v] of unboxed) {\n        if (defs.has(k)) {\n            throw new Error('conflicting or redundant options');\n        }\n        defs.add(k);\n        ret[k] = (0, lexer_2.unbox)(v);\n    }\n}\n;\n;\n;\n;\nconst grammar = {\n    Lexer: lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"lparen\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"rparen\", \"symbols\": [(lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"float\"] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"number\", \"symbols\": [\"number$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"dot\", \"symbols\": [(lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot)], \"postprocess\": id },\n        { \"name\": \"float\", \"symbols\": [(lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)], \"postprocess\": x => (0, lexer_2.box)(x, parseFloat(unwrap(x))) },\n        { \"name\": \"int\", \"symbols\": [(lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": x => (0, lexer_2.box)(x, parseInt(unwrap(x), 10)) },\n        { \"name\": \"comma\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma)], \"postprocess\": id },\n        { \"name\": \"star\", \"symbols\": [(lexer_1.lexerAny.has(\"star\") ? { type: \"star\" } : star)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value) },\n        { \"name\": \"string$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"string\") ? { type: \"string\" } : string)] },\n        { \"name\": \"string$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"eString\") ? { type: \"eString\" } : eString)] },\n        { \"name\": \"string\", \"symbols\": [\"string$subexpression$1\"], \"postprocess\": x => (0, lexer_2.box)(x, unwrap(x[0]).value) },\n        { \"name\": \"ident\", \"symbols\": [\"word\"], \"postprocess\": get(0) },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary)], \"postprocess\": x => (0, lexer_2.box)(x, 'primary') },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": x => (0, lexer_2.box)(x, 'unique') },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"quoted_word\") ? { type: \"quoted_word\" } : quoted_word)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value, true) },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value) },\n        { \"name\": \"collist_paren\", \"symbols\": [\"lparen\", \"collist\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"collist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"collist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"collist$ebnf$1\", \"symbols\": [\"collist$ebnf$1\", \"collist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"collist\", \"symbols\": [\"ident\", \"collist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"kw_between\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('between') },\n        { \"name\": \"kw_conflict\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('conflict') },\n        { \"name\": \"kw_nothing\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nothing') },\n        { \"name\": \"kw_begin\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('begin') },\n        { \"name\": \"kw_if\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('if') },\n        { \"name\": \"kw_exists\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('exists') },\n        { \"name\": \"kw_key\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('key') },\n        { \"name\": \"kw_index\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('index') },\n        { \"name\": \"kw_extension\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('extension') },\n        { \"name\": \"kw_schema\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('schema') },\n        { \"name\": \"kw_nulls\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nulls') },\n        { \"name\": \"kw_first\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('first') },\n        { \"name\": \"kw_last\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('last') },\n        { \"name\": \"kw_start\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('start') },\n        { \"name\": \"kw_restart\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('restart') },\n        { \"name\": \"kw_filter\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('filter') },\n        { \"name\": \"kw_commit\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('commit') },\n        { \"name\": \"kw_tablespace\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('tablespace') },\n        { \"name\": \"kw_transaction\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('transaction') },\n        { \"name\": \"kw_work\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('work') },\n        { \"name\": \"kw_read\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('read') },\n        { \"name\": \"kw_write\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('write') },\n        { \"name\": \"kw_isolation\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('isolation') },\n        { \"name\": \"kw_level\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('level') },\n        { \"name\": \"kw_serializable\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('serializable') },\n        { \"name\": \"kw_rollback\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rollback') },\n        { \"name\": \"kw_insert\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('insert') },\n        { \"name\": \"kw_value\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('value') },\n        { \"name\": \"kw_values\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('values') },\n        { \"name\": \"kw_update\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('update') },\n        { \"name\": \"kw_column\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('column') },\n        { \"name\": \"kw_set\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('set') },\n        { \"name\": \"kw_version\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('version') },\n        { \"name\": \"kw_alter\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('alter') },\n        { \"name\": \"kw_rename\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rename') },\n        { \"name\": \"kw_sequence\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('sequence') },\n        { \"name\": \"kw_temp\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('temp') },\n        { \"name\": \"kw_temporary\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('temporary') },\n        { \"name\": \"kw_add\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('add') },\n        { \"name\": \"kw_owner\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('owner') },\n        { \"name\": \"kw_owned\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('owned') },\n        { \"name\": \"kw_including\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('including') },\n        { \"name\": \"kw_excluding\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('excluding') },\n        { \"name\": \"kw_none\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('none') },\n        { \"name\": \"kw_drop\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('drop') },\n        { \"name\": \"kw_operator\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('operator') },\n        { \"name\": \"kw_minvalue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('minvalue') },\n        { \"name\": \"kw_maxvalue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('maxvalue') },\n        { \"name\": \"kw_data\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('data') },\n        { \"name\": \"kw_type\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('type') },\n        { \"name\": \"kw_trigger\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('trigger') },\n        { \"name\": \"kw_delete\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('delete') },\n        { \"name\": \"kw_cache\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cache') },\n        { \"name\": \"kw_cascade\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cascade') },\n        { \"name\": \"kw_no\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('no') },\n        { \"name\": \"kw_timestamp\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('timestamp') },\n        { \"name\": \"kw_cycle\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cycle') },\n        { \"name\": \"kw_function\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('function') },\n        { \"name\": \"kw_returns\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('returns') },\n        { \"name\": \"kw_language\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('language') },\n        { \"name\": \"kw_out\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('out') },\n        { \"name\": \"kw_inout\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('inout') },\n        { \"name\": \"kw_variadic\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('variadic') },\n        { \"name\": \"kw_action\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('action') },\n        { \"name\": \"kw_restrict\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('restrict') },\n        { \"name\": \"kw_truncate\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('truncate') },\n        { \"name\": \"kw_increment\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('increment') },\n        { \"name\": \"kw_by\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('by') },\n        { \"name\": \"kw_row\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('row') },\n        { \"name\": \"kw_rows\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rows') },\n        { \"name\": \"kw_next\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('next') },\n        { \"name\": \"kw_match\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('match') },\n        { \"name\": \"kw_replace\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('replace') },\n        { \"name\": \"kw_recursive\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('recursive') },\n        { \"name\": \"kw_view\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('view') },\n        { \"name\": \"kw_cascaded\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cascaded') },\n        { \"name\": \"kw_unlogged\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('unlogged') },\n        { \"name\": \"kw_global\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('global') },\n        { \"name\": \"kw_option\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('option') },\n        { \"name\": \"kw_materialized\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('materialized') },\n        { \"name\": \"kw_partial\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('partial') },\n        { \"name\": \"kw_partition\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('partition') },\n        { \"name\": \"kw_simple\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('simple') },\n        { \"name\": \"kw_generated\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('generated') },\n        { \"name\": \"kw_always\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('always') },\n        { \"name\": \"kw_identity\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('identity') },\n        { \"name\": \"kw_name\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('name') },\n        { \"name\": \"kw_enum\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('enum') },\n        { \"name\": \"kw_show\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('show') },\n        { \"name\": \"kw_ordinality\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('ordinality') },\n        { \"name\": \"kw_overriding\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('overriding') },\n        { \"name\": \"kw_over\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('over') },\n        { \"name\": \"kw_system\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('system') },\n        { \"name\": \"kw_comment\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('comment') },\n        { \"name\": \"kw_time\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('time') },\n        { \"name\": \"kw_names\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('names') },\n        { \"name\": \"kw_at\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('at') },\n        { \"name\": \"kw_zone\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('zone') },\n        { \"name\": \"kw_interval\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('interval') },\n        { \"name\": \"kw_hour\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('hour') },\n        { \"name\": \"kw_minute\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('minute') },\n        { \"name\": \"kw_local\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('local') },\n        { \"name\": \"kw_session\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('session') },\n        { \"name\": \"kw_prepare\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('prepare') },\n        { \"name\": \"kw_deallocate\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('deallocate') },\n        { \"name\": \"kw_raise\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('raise') },\n        { \"name\": \"kw_continue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('continue') },\n        { \"name\": \"kw_share\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('share') },\n        { \"name\": \"kw_refresh\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('refresh') },\n        { \"name\": \"kw_nowait\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nowait') },\n        { \"name\": \"kw_skip\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('skip') },\n        { \"name\": \"kw_locked\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('locked') },\n        { \"name\": \"kw_within\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('within') },\n        { \"name\": \"kw_ifnotexists\", \"symbols\": [\"kw_if\", (lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not), \"kw_exists\"] },\n        { \"name\": \"kw_ifexists\", \"symbols\": [\"kw_if\", \"kw_exists\"] },\n        { \"name\": \"kw_withordinality\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"kw_ordinality\"] },\n        { \"name\": \"kw_not_null\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"kw_primary_key\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary), \"kw_key\"] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$2\", \"symbols\": [\"int\"] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"data_type$ebnf$1$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1$macrocall$2\", \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"data_type$ebnf$1$subexpression$1\", \"symbols\": [\"lparen\", \"data_type$ebnf$1$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"data_type$ebnf$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"data_type$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"data_type$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1\"] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1\", \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type$ebnf$2$subexpression$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1\"] },\n        { \"name\": \"data_type$ebnf$2\", \"symbols\": [\"data_type$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"data_type$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"data_type\", \"symbols\": [\"data_type_simple\", \"data_type$ebnf$1\", \"data_type$ebnf$2\"], \"postprocess\": x => {\n                let asArray = x[2];\n                const name = unwrap(x[0]);\n                let ret;\n                ret = {\n                    ...name,\n                    ...Array.isArray(x[1]) && x[1].length ? { config: x[1].map(unwrap) } : {},\n                };\n                if (asArray) {\n                    if (asArray[0].type === 'kw_array') {\n                        asArray = [['array']];\n                    }\n                    for (const _ of asArray[0]) {\n                        ret = {\n                            kind: 'array',\n                            arrayOf: ret,\n                        };\n                    }\n                }\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"data_type_list$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"data_type_list$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"data_type\"], \"postprocess\": last },\n        { \"name\": \"data_type_list$ebnf$1\", \"symbols\": [\"data_type_list$ebnf$1\", \"data_type_list$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type_list\", \"symbols\": [\"data_type\", \"data_type_list$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_text\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_numeric\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_date\"] },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"qualified_name_mark_quotes\"] },\n        { \"name\": \"data_type_numeric$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('double') },\n        { \"name\": \"data_type_numeric\", \"symbols\": [\"data_type_numeric$subexpression$1\", (lexer_1.lexerAny.has(\"kw_precision\") ? { type: \"kw_precision\" } : kw_precision)] },\n        { \"name\": \"data_type_text$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('character', 'bit') },\n        { \"name\": \"data_type_text$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('varying') },\n        { \"name\": \"data_type_text\", \"symbols\": [\"data_type_text$subexpression$1\", \"data_type_text$subexpression$2\"] },\n        { \"name\": \"data_type_date$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('timestamp', 'time') },\n        { \"name\": \"data_type_date$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"data_type_date$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('without') },\n        { \"name\": \"data_type_date$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('time') },\n        { \"name\": \"data_type_date$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('zone') },\n        { \"name\": \"data_type_date\", \"symbols\": [\"data_type_date$subexpression$1\", \"data_type_date$subexpression$2\", \"data_type_date$subexpression$3\", \"data_type_date$subexpression$4\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_date$subexpression$5\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('timestamp', 'time') },\n        { \"name\": \"data_type_date$subexpression$6\", \"symbols\": [\"lparen\", \"int\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"data_type_date$subexpression$7\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"data_type_date$subexpression$7\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('without') },\n        { \"name\": \"data_type_date$subexpression$8\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('time') },\n        { \"name\": \"data_type_date$subexpression$9\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('zone') },\n        { \"name\": \"data_type_date\", \"symbols\": [\"data_type_date$subexpression$5\", \"data_type_date$subexpression$6\", \"data_type_date$subexpression$7\", \"data_type_date$subexpression$8\", \"data_type_date$subexpression$9\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: `timestamp ${toStr(x[2])} time zone`, config: [(0, lexer_2.unbox)(x[1])] }) },\n        { \"name\": \"ident_aliased$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"ident\"], \"postprocess\": last },\n        { \"name\": \"ident_aliased\", \"symbols\": [\"ident_aliased$subexpression$1\"] },\n        { \"name\": \"ident_aliased\", \"symbols\": [\"ident\"], \"postprocess\": unwrap },\n        { \"name\": \"table_ref\", \"symbols\": [\"qualified_name\"], \"postprocess\": unwrap },\n        { \"name\": \"qcolumn$ebnf$1$subexpression$1\", \"symbols\": [\"dot\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"qcolumn$ebnf$1\", \"symbols\": [\"qcolumn$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"qcolumn$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"qcolumn\", \"symbols\": [\"ident\", \"dot\", \"ident\", \"qcolumn$ebnf$1\"], \"postprocess\": x => {\n                if (!x[3]) {\n                    return (0, lexer_2.track)(x, {\n                        table: (0, lexer_2.unbox)(x[0]),\n                        column: (0, lexer_2.unbox)(x[2]),\n                    });\n                }\n                return (0, lexer_2.track)(x, {\n                    schema: (0, lexer_2.unbox)(x[0]),\n                    table: (0, lexer_2.unbox)(x[2]),\n                    column: (0, lexer_2.unbox)(x[3]),\n                });\n            } },\n        { \"name\": \"table_ref_aliased$ebnf$1\", \"symbols\": [\"ident_aliased\"], \"postprocess\": id },\n        { \"name\": \"table_ref_aliased$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"table_ref_aliased\", \"symbols\": [\"table_ref\", \"table_ref_aliased$ebnf$1\"], \"postprocess\": x => {\n                const alias = unwrap(x[1]);\n                return (0, lexer_2.track)(x, {\n                    ...unwrap(x[0]),\n                    ...alias ? { alias } : {},\n                });\n            } },\n        { \"name\": \"qualified_name\", \"symbols\": [\"qname_ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x) }) },\n        { \"name\": \"qualified_name\", \"symbols\": [\"ident\", \"dot\", \"ident_extended\"], \"postprocess\": x => {\n                const schema = toStr(x[0]);\n                const name = toStr(x[2]);\n                return (0, lexer_2.track)(x, { schema, name });\n            } },\n        { \"name\": \"qualified_name\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)], \"postprocess\": x => (0, lexer_2.track)(x, { name: 'current_schema' }) },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [\"qname_ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x), ...(0, lexer_2.doubleQuoted)(x) }) },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [\"ident\", \"dot\", \"ident_extended\"], \"postprocess\": x => {\n                const schema = toStr(x[0]);\n                const name = toStr(x[2]);\n                return (0, lexer_2.track)(x, { schema, name, ...(0, lexer_2.doubleQuoted)(x[2]) });\n            } },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)], \"postprocess\": x => (0, lexer_2.track)(x, { name: 'current_schema' }) },\n        { \"name\": \"qname_ident\", \"symbols\": [\"ident\"] },\n        { \"name\": \"qname_ident\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_precision\") ? { type: \"kw_precision\" } : kw_precision)] },\n        { \"name\": \"qname\", \"symbols\": [\"qualified_name\"], \"postprocess\": unwrap },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_analyse\") ? { type: \"kw_analyse\" } : kw_analyse)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_analyze\") ? { type: \"kw_analyze\" } : kw_analyze)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_any\") ? { type: \"kw_any\" } : kw_any)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asymmetric\") ? { type: \"kw_asymmetric\" } : kw_asymmetric)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_authorization\") ? { type: \"kw_authorization\" } : kw_authorization)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_binary\") ? { type: \"kw_binary\" } : kw_binary)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_both\") ? { type: \"kw_both\" } : kw_both)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_case\") ? { type: \"kw_case\" } : kw_case)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cast\") ? { type: \"kw_cast\" } : kw_cast)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collation\") ? { type: \"kw_collation\" } : kw_collation)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cross\") ? { type: \"kw_cross\" } : kw_cross)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_catalog\") ? { type: \"kw_current_catalog\" } : kw_current_catalog)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_date\") ? { type: \"kw_current_date\" } : kw_current_date)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_role\") ? { type: \"kw_current_role\" } : kw_current_role)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_time\") ? { type: \"kw_current_time\" } : kw_current_time)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_timestamp\") ? { type: \"kw_current_timestamp\" } : kw_current_timestamp)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_deferrable\") ? { type: \"kw_deferrable\" } : kw_deferrable)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_else\") ? { type: \"kw_else\" } : kw_else)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_end\") ? { type: \"kw_end\" } : kw_end)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_except\") ? { type: \"kw_except\" } : kw_except)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_fetch\") ? { type: \"kw_fetch\" } : kw_fetch)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_foreign\") ? { type: \"kw_foreign\" } : kw_foreign)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_freeze\") ? { type: \"kw_freeze\" } : kw_freeze)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_grant\") ? { type: \"kw_grant\" } : kw_grant)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_having\") ? { type: \"kw_having\" } : kw_having)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_ilike\") ? { type: \"kw_ilike\" } : kw_ilike)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_initially\") ? { type: \"kw_initially\" } : kw_initially)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_inner\") ? { type: \"kw_inner\" } : kw_inner)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_intersect\") ? { type: \"kw_intersect\" } : kw_intersect)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_into\") ? { type: \"kw_into\" } : kw_into)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_isnull\") ? { type: \"kw_isnull\" } : kw_isnull)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_join\") ? { type: \"kw_join\" } : kw_join)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_leading\") ? { type: \"kw_leading\" } : kw_leading)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_limit\") ? { type: \"kw_limit\" } : kw_limit)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtime\") ? { type: \"kw_localtime\" } : kw_localtime)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtimestamp\") ? { type: \"kw_localtimestamp\" } : kw_localtimestamp)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_natural\") ? { type: \"kw_natural\" } : kw_natural)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_notnull\") ? { type: \"kw_notnull\" } : kw_notnull)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_offset\") ? { type: \"kw_offset\" } : kw_offset)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_overlaps\") ? { type: \"kw_overlaps\" } : kw_overlaps)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_placing\") ? { type: \"kw_placing\" } : kw_placing)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_references\") ? { type: \"kw_references\" } : kw_references)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_select\") ? { type: \"kw_select\" } : kw_select)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_similar\") ? { type: \"kw_similar\" } : kw_similar)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_some\") ? { type: \"kw_some\" } : kw_some)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_symmetric\") ? { type: \"kw_symmetric\" } : kw_symmetric)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_tablesample\") ? { type: \"kw_tablesample\" } : kw_tablesample)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_then\") ? { type: \"kw_then\" } : kw_then)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_trailing\") ? { type: \"kw_trailing\" } : kw_trailing)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_union\") ? { type: \"kw_union\" } : kw_union)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_variadic\") ? { type: \"kw_variadic\" } : kw_variadic)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_verbose\") ? { type: \"kw_verbose\" } : kw_verbose)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_when\") ? { type: \"kw_when\" } : kw_when)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_window\") ? { type: \"kw_window\" } : kw_window)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"ident_extended\", \"symbols\": [\"ident\"] },\n        { \"name\": \"ident_extended\", \"symbols\": [\"any_keyword\"] },\n        { \"name\": \"select_statement$ebnf$1\", \"symbols\": [\"select_from\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$2\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1$ebnf$1\", \"symbols\": [\"select_having\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1\", \"symbols\": [\"select_groupby\", \"select_statement$ebnf$3$subexpression$1$ebnf$1\"] },\n        { \"name\": \"select_statement$ebnf$3\", \"symbols\": [\"select_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$4\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$5\", \"symbols\": [\"select_limit_offset\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1$ebnf$1\", \"symbols\": [\"select_skip\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1\", \"symbols\": [\"select_for\", \"select_statement$ebnf$6$subexpression$1$ebnf$1\"] },\n        { \"name\": \"select_statement$ebnf$6\", \"symbols\": [\"select_statement$ebnf$6$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement\", \"symbols\": [\"select_what\", \"select_statement$ebnf$1\", \"select_statement$ebnf$2\", \"select_statement$ebnf$3\", \"select_statement$ebnf$4\", \"select_statement$ebnf$5\", \"select_statement$ebnf$6\"], \"postprocess\": x => {\n                let [what, from, where, _groupBy, orderBy, limit, _selectFor] = x;\n                from = unwrap(from);\n                let groupBy = _groupBy && _groupBy[0];\n                let having = _groupBy && _groupBy[1];\n                groupBy = groupBy && (groupBy.length === 1 && groupBy[0].type === 'list' ? groupBy[0].expressions : groupBy);\n                having = having && unwrap(having);\n                let selectFor = _selectFor && _selectFor[0];\n                let skip = _selectFor && _selectFor[1];\n                skip = unwrap(skip);\n                return (0, lexer_2.track)(x, {\n                    ...what,\n                    ...from ? { from: Array.isArray(from) ? from : [from] } : {},\n                    ...groupBy ? { groupBy } : {},\n                    ...having ? { having } : {},\n                    ...limit ? { limit: unwrap(limit) } : {},\n                    ...orderBy ? { orderBy } : {},\n                    ...where ? { where } : {},\n                    ...selectFor ? { for: selectFor[1] } : {},\n                    ...skip ? { skip } : {},\n                    type: 'select',\n                });\n            } },\n        { \"name\": \"select_from\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"select_from_items\"], \"postprocess\": last },\n        { \"name\": \"select_from_items$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_from_items$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_from_item\"], \"postprocess\": last },\n        { \"name\": \"select_from_items$ebnf$1\", \"symbols\": [\"select_from_items$ebnf$1\", \"select_from_items$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_from_items\", \"symbols\": [\"select_from_item\", \"select_from_items$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [...head, ...(flatten(tail) || [])];\n            } },\n        { \"name\": \"select_from_item\", \"symbols\": [\"select_from_subject\"] },\n        { \"name\": \"select_from_item\", \"symbols\": [\"select_from_item_joins\"], \"postprocess\": get(0) },\n        { \"name\": \"select_from_item_joins$subexpression$1\", \"symbols\": [\"select_from_item\"], \"postprocess\": get(0) },\n        { \"name\": \"select_from_item_joins\", \"symbols\": [\"select_from_item_joins$subexpression$1\", \"select_table_join\"], \"postprocess\": flatten },\n        { \"name\": \"select_from_item_joins\", \"symbols\": [\"lparen\", \"select_from_item_joins\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_table\"], \"postprocess\": unwrap },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_call\"], \"postprocess\": unwrap },\n        { \"name\": \"stb_opts$ebnf$1\", \"symbols\": [\"collist_paren\"], \"postprocess\": id },\n        { \"name\": \"stb_opts$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_opts\", \"symbols\": [\"ident_aliased\", \"stb_opts$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                alias: toStr(x[0]),\n                ...x[1] && { columnNames: (0, lexer_2.unbox)(x[1]).map(asName) },\n            }) },\n        { \"name\": \"stb_table$ebnf$1\", \"symbols\": [\"stb_opts\"], \"postprocess\": id },\n        { \"name\": \"stb_table$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_table\", \"symbols\": [\"table_ref\", \"stb_table$ebnf$1\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'table',\n                    name: (0, lexer_2.track)(x, {\n                        ...x[0],\n                        ...x[1],\n                    }),\n                });\n            } },\n        { \"name\": \"stb_statement$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)], \"postprocess\": id },\n        { \"name\": \"stb_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_statement\", \"symbols\": [\"stb_statement$ebnf$1\", \"selection_paren\", \"stb_opts\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'statement',\n                statement: unwrap(x[1]),\n                ...x[0] && { lateral: true },\n                ...x[2],\n            }) },\n        { \"name\": \"select_values\", \"symbols\": [\"kw_values\", \"insert_values\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'values',\n                values: x[1],\n            }) },\n        { \"name\": \"stb_call$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call$ebnf$2\", \"symbols\": [\"kw_withordinality\"], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call$ebnf$3\", \"symbols\": [\"stb_call_alias\"], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call\", \"symbols\": [\"stb_call$ebnf$1\", \"expr_function_call\", \"stb_call$ebnf$2\", \"stb_call$ebnf$3\"], \"postprocess\": x => {\n                const lateral = x[0];\n                const withOrdinality = x[2];\n                const alias = x[3];\n                if (!withOrdinality && !alias) {\n                    return x[1];\n                }\n                return (0, lexer_2.track)(x, {\n                    ...x[1],\n                    ...lateral && { lateral: true },\n                    ...withOrdinality && { withOrdinality: true },\n                    alias: alias ? asNameWithColumns(alias[0], alias[1]) : undefined,\n                });\n            } },\n        { \"name\": \"stb_call_alias$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as)], \"postprocess\": id },\n        { \"name\": \"stb_call_alias$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call_alias$subexpression$1\", \"symbols\": [\"stb_call_alias$subexpression$1$ebnf$1\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"stb_call_alias$ebnf$1\", \"symbols\": [\"stb_call_alias_list\"], \"postprocess\": id },\n        { \"name\": \"stb_call_alias$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call_alias\", \"symbols\": [\"stb_call_alias$subexpression$1\", \"stb_call_alias$ebnf$1\"] },\n        { \"name\": \"stb_call_alias_list\", \"symbols\": [\"lparen\", \"stb_call_alias_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1\", \"symbols\": [\"stb_call_alias_list_raw$ebnf$1\", \"stb_call_alias_list_raw$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"stb_call_alias_list_raw\", \"symbols\": [\"ident\", \"stb_call_alias_list_raw$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_table_join$ebnf$1\", \"symbols\": [\"select_table_join_clause\"], \"postprocess\": id },\n        { \"name\": \"select_table_join$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_table_join\", \"symbols\": [\"select_join_op\", (lexer_1.lexerAny.has(\"kw_join\") ? { type: \"kw_join\" } : kw_join), \"select_from_subject\", \"select_table_join$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...unwrap(x[2]),\n                join: {\n                    type: toStr(x[0], ' '),\n                    ...x[3] && unwrap(x[3]),\n                }\n            }) },\n        { \"name\": \"select_table_join_clause\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { on: last(x) }) },\n        { \"name\": \"select_table_join_clause$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"select_table_join_clause$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1\", \"symbols\": [\"select_table_join_clause$macrocall$1$ebnf$1\", \"select_table_join_clause$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_table_join_clause$macrocall$1\", \"symbols\": [\"select_table_join_clause$macrocall$2\", \"select_table_join_clause$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"select_table_join_clause\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"lparen\", \"select_table_join_clause$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, { using: x[2].map(asName) }) },\n        { \"name\": \"select_join_op$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_inner\") ? { type: \"kw_inner\" } : kw_inner)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$1\", \"symbols\": [\"select_join_op$subexpression$1$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'INNER JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$1\"] },\n        { \"name\": \"select_join_op$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cross\") ? { type: \"kw_cross\" } : kw_cross)], \"postprocess\": x => (0, lexer_2.box)(x, 'CROSS JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$2\"] },\n        { \"name\": \"select_join_op$subexpression$3$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$3$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left), \"select_join_op$subexpression$3$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'LEFT JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$3\"] },\n        { \"name\": \"select_join_op$subexpression$4$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$4$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right), \"select_join_op$subexpression$4$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'RIGHT JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$4\"] },\n        { \"name\": \"select_join_op$subexpression$5$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$5$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$5\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full), \"select_join_op$subexpression$5$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'FULL JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$5\"] },\n        { \"name\": \"select_what$ebnf$1\", \"symbols\": [\"select_distinct\"], \"postprocess\": id },\n        { \"name\": \"select_what$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_what$ebnf$2\", \"symbols\": [\"select_expr_list_aliased\"], \"postprocess\": id },\n        { \"name\": \"select_what$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_select\") ? { type: \"kw_select\" } : kw_select), \"select_what$ebnf$1\", \"select_what$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                columns: x[2],\n                ...x[1] && { distinct: (0, lexer_2.unbox)(x[1]) },\n            }) },\n        { \"name\": \"select_expr_list_aliased$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_expr_list_aliased$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_expr_list_item\"], \"postprocess\": last },\n        { \"name\": \"select_expr_list_aliased$ebnf$1\", \"symbols\": [\"select_expr_list_aliased$ebnf$1\", \"select_expr_list_aliased$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_expr_list_aliased\", \"symbols\": [\"select_expr_list_item\", \"select_expr_list_aliased$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_expr_list_item$ebnf$1\", \"symbols\": [\"ident_aliased\"], \"postprocess\": id },\n        { \"name\": \"select_expr_list_item$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_expr_list_item\", \"symbols\": [\"expr\", \"select_expr_list_item$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                expr: x[0],\n                ...x[1] ? { alias: asName(x[1]) } : {},\n            }) },\n        { \"name\": \"select_distinct\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": x => (0, lexer_2.box)(x, 'all') },\n        { \"name\": \"select_distinct$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": get(2) },\n        { \"name\": \"select_distinct$ebnf$1\", \"symbols\": [\"select_distinct$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_distinct$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_distinct\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct), \"select_distinct$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, x[1] || 'distinct') },\n        { \"name\": \"select_where\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"select_groupby\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group), \"kw_by\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"select_having\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_having\") ? { type: \"kw_having\" } : kw_having), \"expr\"], \"postprocess\": last },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$1\", \"symbols\": [\"select_offset\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$1\", \"symbols\": [\"select_limit\"] },\n        { \"name\": \"select_limit_offset$ebnf$1\", \"symbols\": [\"select_limit_offset$ebnf$1$subexpression$1\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$2\", \"symbols\": [\"select_offset\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$2\", \"symbols\": [\"select_limit\"] },\n        { \"name\": \"select_limit_offset$ebnf$1\", \"symbols\": [\"select_limit_offset$ebnf$1\", \"select_limit_offset$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_limit_offset\", \"symbols\": [\"select_limit_offset$ebnf$1\"], \"postprocess\": (x, rej) => {\n                const value = unwrap(x);\n                if (!Array.isArray(value)) {\n                    return (0, lexer_2.track)(x, value);\n                }\n                if (value.length != 2) {\n                    return rej;\n                }\n                const a = unwrap(value[0]);\n                const b = unwrap(value[1]);\n                if (a.offset && b.offset || a.limit && b.limit) {\n                    return rej;\n                }\n                return (0, lexer_2.track)(x, {\n                    ...a,\n                    ...b,\n                });\n            } },\n        { \"name\": \"select_offset$ebnf$1$subexpression$1\", \"symbols\": [\"kw_row\"] },\n        { \"name\": \"select_offset$ebnf$1$subexpression$1\", \"symbols\": [\"kw_rows\"] },\n        { \"name\": \"select_offset$ebnf$1\", \"symbols\": [\"select_offset$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_offset$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_offset\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_offset\") ? { type: \"kw_offset\" } : kw_offset), \"expr_nostar\", \"select_offset$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { offset: unwrap(x[1]) }) },\n        { \"name\": \"select_limit$subexpression$1\", \"symbols\": [\"select_limit_1\"] },\n        { \"name\": \"select_limit$subexpression$1\", \"symbols\": [\"select_limit_2\"] },\n        { \"name\": \"select_limit\", \"symbols\": [\"select_limit$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { limit: unwrap(x) }) },\n        { \"name\": \"select_limit_1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_limit\") ? { type: \"kw_limit\" } : kw_limit), \"expr_nostar\"], \"postprocess\": last },\n        { \"name\": \"select_limit_2$ebnf$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"select_limit_2$ebnf$1$subexpression$1\", \"symbols\": [\"kw_next\"] },\n        { \"name\": \"select_limit_2$ebnf$1\", \"symbols\": [\"select_limit_2$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_limit_2$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_limit_2$subexpression$1\", \"symbols\": [\"kw_row\"] },\n        { \"name\": \"select_limit_2$subexpression$1\", \"symbols\": [\"kw_rows\"] },\n        { \"name\": \"select_limit_2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_fetch\") ? { type: \"kw_fetch\" } : kw_fetch), \"select_limit_2$ebnf$1\", \"expr_nostar\", \"select_limit_2$subexpression$1\", (lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)], \"postprocess\": get(2) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_update\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'update' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_no\", \"kw_key\", \"kw_update\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'no key update' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_share\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'share' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_key\", \"kw_share\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'key share' }) },\n        { \"name\": \"select_for\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"select_for$subexpression$1\"] },\n        { \"name\": \"select_skip$subexpression$1\", \"symbols\": [\"kw_nowait\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'nowait' }) },\n        { \"name\": \"select_skip$subexpression$1\", \"symbols\": [\"kw_skip\", \"kw_locked\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'skip locked' }) },\n        { \"name\": \"select_skip\", \"symbols\": [\"select_skip$subexpression$1\"] },\n        { \"name\": \"select_order_by$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order), \"kw_by\"] },\n        { \"name\": \"select_order_by$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_order_by$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_order_by_expr\"], \"postprocess\": last },\n        { \"name\": \"select_order_by$ebnf$1\", \"symbols\": [\"select_order_by$ebnf$1\", \"select_order_by$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_order_by\", \"symbols\": [\"select_order_by$subexpression$1\", \"select_order_by_expr\", \"select_order_by$ebnf$1\"], \"postprocess\": ([_, head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_order_by_expr$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"select_order_by_expr$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"select_order_by_expr$ebnf$1\", \"symbols\": [\"select_order_by_expr$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_order_by_expr$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_last\"] },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1\", \"symbols\": [\"kw_nulls\", \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"select_order_by_expr$ebnf$2\", \"symbols\": [\"select_order_by_expr$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_order_by_expr$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_order_by_expr\", \"symbols\": [\"expr\", \"select_order_by_expr$ebnf$1\", \"select_order_by_expr$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                by: x[0],\n                ...x[1] && { order: toStr(x[1]).toUpperCase() },\n                ...x[2] && { nulls: toStr(x[2]).toUpperCase() },\n            }) },\n        { \"name\": \"expr\", \"symbols\": [\"expr_nostar\"], \"postprocess\": unwrap },\n        { \"name\": \"expr\", \"symbols\": [\"expr_star\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_nostar\", \"symbols\": [\"expr_paren\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_nostar\", \"symbols\": [\"expr_or\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_paren$subexpression$1\", \"symbols\": [\"expr_or_select\"] },\n        { \"name\": \"expr_paren$subexpression$1\", \"symbols\": [\"expr_list_many\"] },\n        { \"name\": \"expr_paren\", \"symbols\": [\"lparen\", \"expr_paren$subexpression$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"expr_or$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or)] },\n        { \"name\": \"expr_or$macrocall$2$macrocall$1\", \"symbols\": [\"expr_or$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_or$macrocall$2\", \"symbols\": [\"expr_or$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_or$macrocall$3\", \"symbols\": [\"expr_or\"] },\n        { \"name\": \"expr_or$macrocall$4\", \"symbols\": [\"expr_and\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$1\", \"symbols\": [\"expr_or$macrocall$3\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$2\", \"symbols\": [\"expr_or$macrocall$4\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_or$macrocall$1\", \"symbols\": [\"expr_or$macrocall$1$subexpression$1\", \"expr_or$macrocall$2\", \"expr_or$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_or$macrocall$1\", \"symbols\": [\"expr_or$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_or\", \"symbols\": [\"expr_or$macrocall$1\"] },\n        { \"name\": \"expr_and$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"expr_and$macrocall$2$macrocall$1\", \"symbols\": [\"expr_and$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_and$macrocall$2\", \"symbols\": [\"expr_and$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_and$macrocall$3\", \"symbols\": [\"expr_and\"] },\n        { \"name\": \"expr_and$macrocall$4\", \"symbols\": [\"expr_not\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$1\", \"symbols\": [\"expr_and$macrocall$3\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$2\", \"symbols\": [\"expr_and$macrocall$4\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_and$macrocall$1\", \"symbols\": [\"expr_and$macrocall$1$subexpression$1\", \"expr_and$macrocall$2\", \"expr_and$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_and$macrocall$1\", \"symbols\": [\"expr_and$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_and\", \"symbols\": [\"expr_and$macrocall$1\"] },\n        { \"name\": \"expr_not$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)] },\n        { \"name\": \"expr_not$macrocall$2$macrocall$1\", \"symbols\": [\"expr_not$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_not$macrocall$2\", \"symbols\": [\"expr_not$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_not$macrocall$3\", \"symbols\": [\"expr_not\"] },\n        { \"name\": \"expr_not$macrocall$4\", \"symbols\": [\"expr_eq\"] },\n        { \"name\": \"expr_not$macrocall$1$subexpression$1\", \"symbols\": [\"expr_not$macrocall$3\"] },\n        { \"name\": \"expr_not$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_not$macrocall$1\", \"symbols\": [\"expr_not$macrocall$2\", \"expr_not$macrocall$1$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                ...unwrap(x[0]),\n                operand: unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_not$macrocall$1\", \"symbols\": [\"expr_not$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_not\", \"symbols\": [\"expr_not$macrocall$1\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq)] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_neq\") ? { type: \"op_neq\" } : op_neq)] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_eq$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_eq$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_eq$macrocall$3\", \"symbols\": [\"expr_eq\"] },\n        { \"name\": \"expr_eq$macrocall$4\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$1\", \"symbols\": [\"expr_eq$macrocall$3\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$2\", \"symbols\": [\"expr_eq$macrocall$4\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_eq$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$1$subexpression$1\", \"expr_eq$macrocall$2\", \"expr_eq$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_eq$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_eq\", \"symbols\": [\"expr_eq$macrocall$1\"] },\n        { \"name\": \"expr_star\", \"symbols\": [\"star\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'ref', name: '*' }) },\n        { \"name\": \"expr_is$subexpression$1\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_isnull\") ? { type: \"kw_isnull\" } : kw_isnull)] },\n        { \"name\": \"expr_is$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$1\", \"expr_is$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unary', op: 'IS NULL', operand: unwrap(x[0]) }) },\n        { \"name\": \"expr_is$subexpression$3\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_notnull\") ? { type: \"kw_notnull\" } : kw_notnull)] },\n        { \"name\": \"expr_is$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"kw_not_null\"] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$3\", \"expr_is$subexpression$4\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unary', op: 'IS NOT NULL', operand: unwrap(x[0]) }) },\n        { \"name\": \"expr_is$subexpression$5\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$5\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"expr_is$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_is$subexpression$6\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"expr_is$subexpression$6\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$5\", (lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"expr_is$ebnf$1\", \"expr_is$subexpression$6\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                op: 'IS ' + flattenStr([x[2], x[3]])\n                    .join(' ')\n                    .toUpperCase(),\n                operand: unwrap(x[0]),\n            }) },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_compare\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_compare\") ? { type: \"op_compare\" } : op_compare)] },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_compare$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_compare$macrocall$2\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_compare$macrocall$3\", \"symbols\": [\"expr_compare\"] },\n        { \"name\": \"expr_compare$macrocall$4\", \"symbols\": [\"expr_range\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$1\", \"symbols\": [\"expr_compare$macrocall$3\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$2\", \"symbols\": [\"expr_compare$macrocall$4\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_compare$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$1$subexpression$1\", \"expr_compare$macrocall$2\", \"expr_compare$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_compare$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare\", \"symbols\": [\"expr_compare$macrocall$1\"] },\n        { \"name\": \"expr_range$macrocall$2\", \"symbols\": [\"ops_between\"] },\n        { \"name\": \"expr_range$macrocall$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"expr_range$macrocall$4\", \"symbols\": [\"expr_range\"] },\n        { \"name\": \"expr_range$macrocall$5\", \"symbols\": [\"expr_others\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$1\", \"symbols\": [\"expr_range$macrocall$4\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$2\", \"symbols\": [\"expr_range$macrocall$4\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$3\", \"symbols\": [\"expr_range$macrocall$5\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1\", \"symbols\": [\"expr_range$macrocall$1$subexpression$1\", \"expr_range$macrocall$2\", \"expr_range$macrocall$1$subexpression$2\", \"expr_range$macrocall$3\", \"expr_range$macrocall$1$subexpression$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ternary',\n                value: unwrap(x[0]),\n                lo: unwrap(x[2]),\n                hi: unwrap(x[4]),\n                op: (flattenStr(x[1]).join(' ') || '<error>').toUpperCase(),\n            }) },\n        { \"name\": \"expr_range$macrocall$1\", \"symbols\": [\"expr_range$macrocall$5\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_range\", \"symbols\": [\"expr_range$macrocall$1\"] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"ops_others\") ? { type: \"ops_others\" } : ops_others)] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_others$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_others$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_others$macrocall$2\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_others$macrocall$3\", \"symbols\": [\"expr_others\"] },\n        { \"name\": \"expr_others$macrocall$4\", \"symbols\": [\"expr_like\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$1\", \"symbols\": [\"expr_others$macrocall$3\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$2\", \"symbols\": [\"expr_others$macrocall$4\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_others$macrocall$1\", \"symbols\": [\"expr_others$macrocall$1$subexpression$1\", \"expr_others$macrocall$2\", \"expr_others$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_others$macrocall$1\", \"symbols\": [\"expr_others$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_others\", \"symbols\": [\"expr_others$macrocall$1\"] },\n        { \"name\": \"expr_like$macrocall$2$macrocall$2\", \"symbols\": [\"ops_like\"] },\n        { \"name\": \"expr_like$macrocall$2$macrocall$1\", \"symbols\": [\"expr_like$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_like$macrocall$2\", \"symbols\": [\"expr_like$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_like$macrocall$3\", \"symbols\": [\"expr_like\"] },\n        { \"name\": \"expr_like$macrocall$4\", \"symbols\": [\"expr_in\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$1\", \"symbols\": [\"expr_like$macrocall$3\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$2\", \"symbols\": [\"expr_like$macrocall$4\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_like$macrocall$1\", \"symbols\": [\"expr_like$macrocall$1$subexpression$1\", \"expr_like$macrocall$2\", \"expr_like$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_like$macrocall$1\", \"symbols\": [\"expr_like$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_like\", \"symbols\": [\"expr_like$macrocall$1\"] },\n        { \"name\": \"expr_in$macrocall$2$macrocall$2\", \"symbols\": [\"ops_in\"] },\n        { \"name\": \"expr_in$macrocall$2$macrocall$1\", \"symbols\": [\"expr_in$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_in$macrocall$2\", \"symbols\": [\"expr_in$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_in$macrocall$3\", \"symbols\": [\"expr_in\"] },\n        { \"name\": \"expr_in$macrocall$4\", \"symbols\": [\"expr_add\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$1\", \"symbols\": [\"expr_in$macrocall$3\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$2\", \"symbols\": [\"expr_in$macrocall$4\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_in$macrocall$1\", \"symbols\": [\"expr_in$macrocall$1$subexpression$1\", \"expr_in$macrocall$2\", \"expr_in$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_in$macrocall$1\", \"symbols\": [\"expr_in$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_in\", \"symbols\": [\"expr_in$macrocall$1\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_plus\") ? { type: \"op_plus\" } : op_plus)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_minus\") ? { type: \"op_minus\" } : op_minus)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_additive\") ? { type: \"op_additive\" } : op_additive)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_add$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_add$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_add$macrocall$3\", \"symbols\": [\"expr_add\"] },\n        { \"name\": \"expr_add$macrocall$4\", \"symbols\": [\"expr_mult\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_add$macrocall$3\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$2\", \"symbols\": [\"expr_add$macrocall$4\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_add$macrocall$1\", \"symbols\": [\"expr_add$macrocall$1$subexpression$1\", \"expr_add$macrocall$2\", \"expr_add$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_add$macrocall$1\", \"symbols\": [\"expr_add$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_add\", \"symbols\": [\"expr_add$macrocall$1\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"star\") ? { type: \"star\" } : star)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_div\") ? { type: \"op_div\" } : op_div)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_mod\") ? { type: \"op_mod\" } : op_mod)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_mult$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_mult$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_mult$macrocall$3\", \"symbols\": [\"expr_mult\"] },\n        { \"name\": \"expr_mult$macrocall$4\", \"symbols\": [\"expr_exp\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$1\", \"symbols\": [\"expr_mult$macrocall$3\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$2\", \"symbols\": [\"expr_mult$macrocall$4\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_mult$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$1$subexpression$1\", \"expr_mult$macrocall$2\", \"expr_mult$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_mult$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_mult\", \"symbols\": [\"expr_mult$macrocall$1\"] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_exp\") ? { type: \"op_exp\" } : op_exp)] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_exp$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_exp$macrocall$2\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_exp$macrocall$3\", \"symbols\": [\"expr_exp\"] },\n        { \"name\": \"expr_exp$macrocall$4\", \"symbols\": [\"expr_unary_add\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$1\", \"symbols\": [\"expr_exp$macrocall$3\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$2\", \"symbols\": [\"expr_exp$macrocall$4\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_exp$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$1$subexpression$1\", \"expr_exp$macrocall$2\", \"expr_exp$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_exp$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_exp\", \"symbols\": [\"expr_exp$macrocall$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_plus\") ? { type: \"op_plus\" } : op_plus)] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_minus\") ? { type: \"op_minus\" } : op_minus)] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_unary_add$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$3\", \"symbols\": [\"expr_unary_add\"] },\n        { \"name\": \"expr_unary_add$macrocall$4\", \"symbols\": [\"expr_various_constructs\"] },\n        { \"name\": \"expr_unary_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_unary_add$macrocall$3\"] },\n        { \"name\": \"expr_unary_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_unary_add$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2\", \"expr_unary_add$macrocall$1$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                ...unwrap(x[0]),\n                operand: unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_unary_add\", \"symbols\": [\"expr_unary_add$macrocall$1\"] },\n        { \"name\": \"expr_various_constructs$macrocall$2$macrocall$2\", \"symbols\": [\"various_binaries\"] },\n        { \"name\": \"expr_various_constructs$macrocall$2$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_various_constructs$macrocall$2\", \"symbols\": [\"expr_various_constructs$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_various_constructs$macrocall$3\", \"symbols\": [\"expr_various_constructs\"] },\n        { \"name\": \"expr_various_constructs$macrocall$4\", \"symbols\": [\"expr_array_index\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$1\", \"symbols\": [\"expr_various_constructs$macrocall$3\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$2\", \"symbols\": [\"expr_various_constructs$macrocall$4\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$1$subexpression$1\", \"expr_various_constructs$macrocall$2\", \"expr_various_constructs$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_various_constructs$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_various_constructs\", \"symbols\": [\"expr_various_constructs$macrocall$1\"] },\n        { \"name\": \"expr_array_index$subexpression$1\", \"symbols\": [\"expr_array_index\"] },\n        { \"name\": \"expr_array_index$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_array_index\", \"symbols\": [\"expr_array_index$subexpression$1\", (lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_nostar\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'arrayIndex',\n                array: unwrap(x[0]),\n                index: unwrap(x[2]),\n            }) },\n        { \"name\": \"expr_array_index\", \"symbols\": [\"expr_member\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_member$subexpression$1\", \"symbols\": [\"expr_member\"] },\n        { \"name\": \"expr_member$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_member$subexpression$2\", \"symbols\": [\"string\"] },\n        { \"name\": \"expr_member$subexpression$2\", \"symbols\": [\"int\"] },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_member$subexpression$1\", \"ops_member\", \"expr_member$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'member',\n                operand: unwrap(x[0]),\n                op: x[1],\n                member: unwrap(x[2])\n            }) },\n        { \"name\": \"expr_member$subexpression$3\", \"symbols\": [\"expr_member\"] },\n        { \"name\": \"expr_member$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_member$subexpression$3\", (lexer_1.lexerAny.has(\"op_cast\") ? { type: \"op_cast\" } : op_cast), \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: unwrap(x[0]),\n                to: x[2],\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cast\") ? { type: \"kw_cast\" } : kw_cast), \"lparen\", \"expr_nostar\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"data_type\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: unwrap(x[2]),\n                to: x[4],\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [\"data_type\", \"string\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: (0, lexer_2.track)(x[1], {\n                    type: 'string',\n                    value: (0, lexer_2.unbox)(x[1]),\n                }),\n                to: (0, lexer_2.unbox)(x[0]),\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_dot\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_dot$subexpression$1\", \"symbols\": [\"word\"] },\n        { \"name\": \"expr_dot$subexpression$1\", \"symbols\": [\"star\"] },\n        { \"name\": \"expr_dot\", \"symbols\": [\"qname\", (lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), \"expr_dot$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ref',\n                table: unwrap(x[0]),\n                name: toStr(x[2])\n            }) },\n        { \"name\": \"expr_dot\", \"symbols\": [\"expr_final\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_final\", \"symbols\": [\"expr_basic\"] },\n        { \"name\": \"expr_final\", \"symbols\": [\"expr_primary\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_special_calls\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_call\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_array\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_case\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_extract\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ref',\n                name: unwrap(x[0]),\n            }) },\n        { \"name\": \"expr_array$ebnf$1\", \"symbols\": [\"expr_subarray_items\"], \"postprocess\": id },\n        { \"name\": \"expr_array$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_array\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array), (lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_array$ebnf$1\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'array',\n                expressions: x[2] || [],\n            }) },\n        { \"name\": \"expr_array\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array), \"lparen\", \"selection\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'array select',\n                select: unwrap(x[2]),\n            }) },\n        { \"name\": \"expr_subarray$ebnf$1\", \"symbols\": [\"expr_subarray_items\"], \"postprocess\": id },\n        { \"name\": \"expr_subarray$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_subarray\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_subarray$ebnf$1\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": get(1) },\n        { \"name\": \"expr_subarray_items$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_subarray_items$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1\", \"symbols\": [\"expr_subarray_items$macrocall$1$ebnf$1\", \"expr_subarray_items$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_subarray_items$macrocall$1\", \"symbols\": [\"expr_subarray_items$macrocall$2\", \"expr_subarray_items$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_subarray_items\", \"symbols\": [\"expr_subarray_items$macrocall$1\"], \"postprocess\": x => x[0].map(unwrap) },\n        { \"name\": \"expr_subarray_items$macrocall$4\", \"symbols\": [\"expr_subarray\"] },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_subarray_items$macrocall$4\"], \"postprocess\": last },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1\", \"symbols\": [\"expr_subarray_items$macrocall$3$ebnf$1\", \"expr_subarray_items$macrocall$3$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_subarray_items$macrocall$3\", \"symbols\": [\"expr_subarray_items$macrocall$4\", \"expr_subarray_items$macrocall$3$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_subarray_items\", \"symbols\": [\"expr_subarray_items$macrocall$3\"], \"postprocess\": (x) => {\n                return x[0].map((v) => {\n                    return (0, lexer_2.track)(v, {\n                        type: 'array',\n                        expressions: v[0].map(unwrap),\n                    });\n                });\n            } },\n        { \"name\": \"expr_function_call$ebnf$1\", \"symbols\": [\"expr_list_raw\"], \"postprocess\": id },\n        { \"name\": \"expr_function_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_function_call\", \"symbols\": [\"expr_fn_name\", \"lparen\", \"expr_function_call$ebnf$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'call',\n                function: unwrap(x[0]),\n                args: x[2] || [],\n            }) },\n        { \"name\": \"expr_call$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"expr_call$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct)] },\n        { \"name\": \"expr_call$ebnf$1\", \"symbols\": [\"expr_call$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$2\", \"symbols\": [\"expr_list_raw\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$3\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$4$subexpression$1\", \"symbols\": [\"kw_filter\", \"lparen\", (lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\", \"rparen\"], \"postprocess\": get(3) },\n        { \"name\": \"expr_call$ebnf$4\", \"symbols\": [\"expr_call$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$5\", \"symbols\": [\"expr_call_within_group\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$6\", \"symbols\": [\"expr_call_over\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call\", \"symbols\": [\"expr_fn_name\", \"lparen\", \"expr_call$ebnf$1\", \"expr_call$ebnf$2\", \"expr_call$ebnf$3\", \"rparen\", \"expr_call$ebnf$4\", \"expr_call$ebnf$5\", \"expr_call$ebnf$6\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'call',\n                function: unwrap(x[0]),\n                ...x[2] && { distinct: toStr(x[2]) },\n                args: x[3] || [],\n                ...x[4] && { orderBy: x[4] },\n                ...x[6] && { filter: unwrap(x[6]) },\n                ...x[7] && { withinGroup: x[7] },\n                ...x[8] && { over: unwrap(x[8]) },\n            }) },\n        { \"name\": \"expr_call_over$ebnf$1$subexpression$1\", \"symbols\": [\"kw_partition\", \"kw_by\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"expr_call_over$ebnf$1\", \"symbols\": [\"expr_call_over$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call_over$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call_over$ebnf$2\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"expr_call_over$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call_over\", \"symbols\": [\"kw_over\", \"lparen\", \"expr_call_over$ebnf$1\", \"expr_call_over$ebnf$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...x[2] && { partitionBy: x[2] },\n                ...x[3] && { orderBy: x[3] },\n            }) },\n        { \"name\": \"expr_call_within_group$subexpression$1\", \"symbols\": [\"kw_within\", (lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group)] },\n        { \"name\": \"expr_call_within_group$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order), \"kw_by\"] },\n        { \"name\": \"expr_call_within_group\", \"symbols\": [\"expr_call_within_group$subexpression$1\", \"lparen\", \"expr_call_within_group$subexpression$2\", \"select_order_by_expr\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, x[3]) },\n        { \"name\": \"expr_extract$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('extract') },\n        { \"name\": \"expr_extract\", \"symbols\": [\"expr_extract$subexpression$1\", \"lparen\", \"word\", (lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'extract',\n                field: asName(x[2]),\n                from: x[4],\n            }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"float\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'numeric', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"int\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'integer', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'string', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'boolean', value: true }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'boolean', value: false }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'null' }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"value_keyword\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'keyword', keyword: toStr(x) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"qparam\") ? { type: \"qparam\" } : qparam)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'parameter', name: toStr(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"ops_like\", \"symbols\": [\"ops_like_keywors\"] },\n        { \"name\": \"ops_like\", \"symbols\": [\"ops_like_operators\"] },\n        { \"name\": \"ops_like_keywors$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_like_keywors$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_like_keywors$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like)] },\n        { \"name\": \"ops_like_keywors$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_ilike\") ? { type: \"kw_ilike\" } : kw_ilike)] },\n        { \"name\": \"ops_like_keywors\", \"symbols\": [\"ops_like_keywors$ebnf$1\", \"ops_like_keywors$subexpression$1\"] },\n        { \"name\": \"ops_like_operators$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_like\") ? { type: \"op_like\" } : op_like)], \"postprocess\": () => 'LIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$1\"] },\n        { \"name\": \"ops_like_operators$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_ilike\") ? { type: \"op_ilike\" } : op_ilike)], \"postprocess\": () => 'ILIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$2\"] },\n        { \"name\": \"ops_like_operators$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"op_not_like\") ? { type: \"op_not_like\" } : op_not_like)], \"postprocess\": () => 'NOT LIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$3\"] },\n        { \"name\": \"ops_like_operators$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"op_not_ilike\") ? { type: \"op_not_ilike\" } : op_not_ilike)], \"postprocess\": () => 'NOT ILIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$4\"] },\n        { \"name\": \"ops_in$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_in$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_in\", \"symbols\": [\"ops_in$ebnf$1\", (lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"ops_between$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_between$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_between\", \"symbols\": [\"ops_between$ebnf$1\", \"kw_between\"] },\n        { \"name\": \"ops_member$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_member\") ? { type: \"op_member\" } : op_member)] },\n        { \"name\": \"ops_member$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_membertext\") ? { type: \"op_membertext\" } : op_membertext)] },\n        { \"name\": \"ops_member\", \"symbols\": [\"ops_member$subexpression$1\"], \"postprocess\": x => { var _a; return (_a = unwrap(x)) === null || _a === void 0 ? void 0 : _a.value; } },\n        { \"name\": \"expr_list_item\", \"symbols\": [\"expr_or_select\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_item\", \"symbols\": [\"expr_star\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_raw$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw$macrocall$1$ebnf$1\", \"expr_list_raw$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_list_raw$macrocall$1\", \"symbols\": [\"expr_list_raw$macrocall$2\", \"expr_list_raw$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_list_raw\", \"symbols\": [\"expr_list_raw$macrocall$1\"], \"postprocess\": ([x]) => x.map(unwrap) },\n        { \"name\": \"expr_list_raw_many$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw_many$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1\"] },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw_many$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw_many$macrocall$1$ebnf$1\", \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_list_raw_many$macrocall$1\", \"symbols\": [\"expr_list_raw_many$macrocall$2\", \"expr_list_raw_many$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_list_raw_many\", \"symbols\": [\"expr_list_raw_many$macrocall$1\"], \"postprocess\": ([x]) => x.map(unwrap) },\n        { \"name\": \"expr_or_select\", \"symbols\": [\"expr_nostar\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_or_select\", \"symbols\": [\"selection\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_many\", \"symbols\": [\"expr_list_raw_many\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'list',\n                expressions: x[0],\n            }) },\n        { \"name\": \"expr_case$ebnf$1\", \"symbols\": [\"expr_nostar\"], \"postprocess\": id },\n        { \"name\": \"expr_case$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_case$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"expr_case$ebnf$2\", \"symbols\": [\"expr_case$ebnf$2\", \"expr_case_whens\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_case$ebnf$3\", \"symbols\": [\"expr_case_else\"], \"postprocess\": id },\n        { \"name\": \"expr_case$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_case\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_case\") ? { type: \"kw_case\" } : kw_case), \"expr_case$ebnf$1\", \"expr_case$ebnf$2\", \"expr_case$ebnf$3\", (lexer_1.lexerAny.has(\"kw_end\") ? { type: \"kw_end\" } : kw_end)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'case',\n                value: x[1],\n                whens: x[2],\n                else: x[3],\n            }) },\n        { \"name\": \"expr_case_whens\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_when\") ? { type: \"kw_when\" } : kw_when), \"expr_nostar\", (lexer_1.lexerAny.has(\"kw_then\") ? { type: \"kw_then\" } : kw_then), \"expr_nostar\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                when: x[1],\n                value: x[3],\n            }) },\n        { \"name\": \"expr_case_else\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_else\") ? { type: \"kw_else\" } : kw_else), \"expr_nostar\"], \"postprocess\": last },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1$subexpression$1\", \"symbols\": [\"word\", (lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot)] },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1\", \"symbols\": [\"expr_fn_name$subexpression$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_fn_name$subexpression$1\", \"symbols\": [\"expr_fn_name$subexpression$1$ebnf$1\", \"word_or_keyword\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: (0, lexer_2.unbox)(unwrap(x[1])),\n                ...x[0] && { schema: toStr(x[0][0]) },\n            }) },\n        { \"name\": \"expr_fn_name\", \"symbols\": [\"expr_fn_name$subexpression$1\"] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_any\") ? { type: \"kw_any\" } : kw_any)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_some\") ? { type: \"kw_some\" } : kw_some)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right)] },\n        { \"name\": \"expr_fn_name$subexpression$2\", \"symbols\": [\"expr_fn_name$subexpression$2$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: toStr(unwrap(x)),\n            }) },\n        { \"name\": \"expr_fn_name\", \"symbols\": [\"expr_fn_name$subexpression$2\"] },\n        { \"name\": \"word_or_keyword\", \"symbols\": [\"word\"] },\n        { \"name\": \"word_or_keyword\", \"symbols\": [\"value_keyword\"], \"postprocess\": x => (0, lexer_2.box)(x, toStr(x)) },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_catalog\") ? { type: \"kw_current_catalog\" } : kw_current_catalog)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_date\") ? { type: \"kw_current_date\" } : kw_current_date)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_role\") ? { type: \"kw_current_role\" } : kw_current_role)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_timestamp\") ? { type: \"kw_current_timestamp\" } : kw_current_timestamp)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_time\") ? { type: \"kw_current_time\" } : kw_current_time)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtimestamp\") ? { type: \"kw_localtimestamp\" } : kw_localtimestamp)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtime\") ? { type: \"kw_localtime\" } : kw_localtime)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"expr_special_calls\", \"symbols\": [\"spe_overlay\"] },\n        { \"name\": \"expr_special_calls\", \"symbols\": [\"spe_substring\"] },\n        { \"name\": \"spe_overlay$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('overlay') },\n        { \"name\": \"spe_overlay$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_placing\") ? { type: \"kw_placing\" } : kw_placing), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$ebnf$1\", \"symbols\": [\"spe_overlay$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_overlay$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_overlay\", \"symbols\": [\"spe_overlay$subexpression$1\", \"spe_overlay$subexpression$2\", \"spe_overlay$subexpression$3\", \"spe_overlay$subexpression$4\", \"spe_overlay$ebnf$1\", (lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'overlay',\n                value: x[1][1],\n                placing: x[2][1],\n                from: x[3][1],\n                ...x[4] && { for: x[4][1] },\n            }) },\n        { \"name\": \"spe_substring$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('substring') },\n        { \"name\": \"spe_substring$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$1\", \"symbols\": [\"spe_substring$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_substring$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_substring$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$2\", \"symbols\": [\"spe_substring$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_substring$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_substring\", \"symbols\": [\"spe_substring$subexpression$1\", \"spe_substring$subexpression$2\", \"spe_substring$ebnf$1\", \"spe_substring$ebnf$2\", (lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'substring',\n                value: x[1][1],\n                ...x[2] && { from: x[2][1] },\n                ...x[3] && { for: x[3][1] },\n            }) },\n        { \"name\": \"various_binaries\", \"symbols\": [\"kw_at\", \"kw_time\", \"kw_zone\"], \"postprocess\": () => 'AT TIME ZONE' },\n        { \"name\": \"createtable_statement$ebnf$1\", \"symbols\": [\"createtable_modifiers\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement$ebnf$3\", \"symbols\": [\"createtable_opts\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"createtable_statement$ebnf$1\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"createtable_statement$ebnf$2\", \"qname\", \"lparen\", \"createtable_declarationlist\", \"rparen\", \"createtable_statement$ebnf$3\"], \"postprocess\": x => {\n                const cols = x[6].filter((v) => 'kind' in v);\n                const constraints = x[6].filter((v) => !('kind' in v));\n                return (0, lexer_2.track)(x, {\n                    type: 'create table',\n                    ...!!x[3] ? { ifNotExists: true } : {},\n                    name: x[4],\n                    columns: cols,\n                    ...unwrap(x[1]),\n                    ...constraints.length ? { constraints } : {},\n                    ...last(x),\n                });\n            } },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"kw_unlogged\"], \"postprocess\": x => x[0] ? { unlogged: true } : {} },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_locglob\"] },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_tmp\"] },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_locglob\", \"m_tmp\"], \"postprocess\": ([a, b]) => ({ ...a, ...b }) },\n        { \"name\": \"m_locglob$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"m_locglob$subexpression$1\", \"symbols\": [\"kw_global\"] },\n        { \"name\": \"m_locglob\", \"symbols\": [\"m_locglob$subexpression$1\"], \"postprocess\": x => ({ locality: toStr(x) }) },\n        { \"name\": \"m_tmp$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"m_tmp$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"m_tmp\", \"symbols\": [\"m_tmp$subexpression$1\"], \"postprocess\": x => ({ temporary: true }) },\n        { \"name\": \"createtable_declarationlist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_declarationlist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"createtable_declaration\"], \"postprocess\": last },\n        { \"name\": \"createtable_declarationlist$ebnf$1\", \"symbols\": [\"createtable_declarationlist$ebnf$1\", \"createtable_declarationlist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_declarationlist\", \"symbols\": [\"createtable_declaration\", \"createtable_declarationlist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_constraint\"] },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_column\"] },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_like\"] },\n        { \"name\": \"createtable_declaration\", \"symbols\": [\"createtable_declaration$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_constraint$macrocall$2\", \"symbols\": [\"createtable_constraint_def\"] },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"word\"] },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_constraint$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_constraint$macrocall$1\", \"symbols\": [\"createtable_constraint$macrocall$1$ebnf$1\", \"createtable_constraint$macrocall$2\"], \"postprocess\": x => {\n                const name = x[0] && asName(x[0][1]);\n                if (!name) {\n                    return (0, lexer_2.track)(x, unwrap(x[1]));\n                }\n                return (0, lexer_2.track)(x, {\n                    constraintName: name,\n                    ...unwrap(x[1]),\n                });\n            } },\n        { \"name\": \"createtable_constraint\", \"symbols\": [\"createtable_constraint$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_def_unique\"] },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_def_check\"] },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_foreignkey\"] },\n        { \"name\": \"createtable_constraint_def_unique$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)] },\n        { \"name\": \"createtable_constraint_def_unique$subexpression$1\", \"symbols\": [\"kw_primary_key\"] },\n        { \"name\": \"createtable_constraint_def_unique\", \"symbols\": [\"createtable_constraint_def_unique$subexpression$1\", \"lparen\", \"createtable_collist\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0], ' '),\n                columns: x[2].map(asName),\n            }) },\n        { \"name\": \"createtable_constraint_def_check\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"expr_paren\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'check',\n                expr: unwrap(x[1]),\n            }) },\n        { \"name\": \"createtable_constraint_foreignkey\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_foreign\") ? { type: \"kw_foreign\" } : kw_foreign), \"kw_key\", \"collist_paren\", \"createtable_references\"], \"postprocess\": (x) => {\n                return (0, lexer_2.track)(x, {\n                    type: 'foreign key',\n                    localColumns: x[2].map(asName),\n                    ...x[3],\n                });\n            } },\n        { \"name\": \"createtable_references$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_references$ebnf$1\", \"symbols\": [\"createtable_references$ebnf$1\", \"createtable_constraint_foreignkey_onsometing\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_references\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_references\") ? { type: \"kw_references\" } : kw_references), \"table_ref\", \"collist_paren\", \"createtable_references$ebnf$1\"], \"postprocess\": (x) => {\n                return (0, lexer_2.track)(x, {\n                    foreignTable: unwrap(x[1]),\n                    foreignColumns: x[2].map(asName),\n                    ...x[3].reduce((a, b) => ({ ...a, ...b }), {}),\n                });\n            } },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_delete\", \"createtable_constraint_on_action\"], \"postprocess\": x => (0, lexer_2.track)(x, { onDelete: last(x) }) },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_update\", \"createtable_constraint_on_action\"], \"postprocess\": x => (0, lexer_2.track)(x, { onUpdate: last(x) }) },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full)] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [\"kw_partial\"] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [\"kw_simple\"] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [\"kw_match\", \"createtable_constraint_foreignkey_onsometing$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { match: toStr(last(x)) }) },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$1\", \"symbols\": [\"kw_no\", \"kw_action\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"createtable_constraint_on_action$subexpression$1$subexpression$1\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_set\", \"createtable_constraint_on_action$subexpression$1$subexpression$2\"] },\n        { \"name\": \"createtable_constraint_on_action\", \"symbols\": [\"createtable_constraint_on_action$subexpression$1\"], \"postprocess\": x => toStr(x, ' ') },\n        { \"name\": \"createtable_collist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_collist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"createtable_collist$ebnf$1\", \"symbols\": [\"createtable_collist$ebnf$1\", \"createtable_collist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_collist\", \"symbols\": [\"ident\", \"createtable_collist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createtable_column$ebnf$1\", \"symbols\": [\"createtable_collate\"], \"postprocess\": id },\n        { \"name\": \"createtable_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_column$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"createtable_column$ebnf$2\", \"symbols\": [\"createtable_column$ebnf$2\", \"createtable_column_constraint\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_column\", \"symbols\": [\"word\", \"data_type\", \"createtable_column$ebnf$1\", \"createtable_column$ebnf$2\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    kind: 'column',\n                    name: asName(x[0]),\n                    dataType: x[1],\n                    ...x[2] ? { collate: x[2][1] } : {},\n                    ...x[3] && x[3].length ? { constraints: x[3] } : {},\n                });\n            } },\n        { \"name\": \"createtable_like$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_like$ebnf$1\", \"symbols\": [\"createtable_like$ebnf$1\", \"createtable_like_opt\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_like\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like), \"qname\", \"createtable_like$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                kind: 'like table',\n                like: x[1],\n                options: x[2],\n            }) },\n        { \"name\": \"createtable_like_opt$subexpression$1\", \"symbols\": [\"kw_including\"] },\n        { \"name\": \"createtable_like_opt$subexpression$1\", \"symbols\": [\"kw_excluding\"] },\n        { \"name\": \"createtable_like_opt\", \"symbols\": [\"createtable_like_opt$subexpression$1\", \"createtable_like_opt_val\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                verb: toStr(x[0]),\n                option: toStr(x[1]),\n            }) },\n        { \"name\": \"createtable_like_opt_val\", \"symbols\": [\"word\"], \"postprocess\": anyKw('defaults', 'constraints', 'indexes', 'storage', 'comments') },\n        { \"name\": \"createtable_like_opt_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"createtable_column_constraint$macrocall$2\", \"symbols\": [\"createtable_column_constraint_def\"] },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"word\"] },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_column_constraint$macrocall$1\", \"symbols\": [\"createtable_column_constraint$macrocall$1$ebnf$1\", \"createtable_column_constraint$macrocall$2\"], \"postprocess\": x => {\n                const name = x[0] && asName(x[0][1]);\n                if (!name) {\n                    return (0, lexer_2.track)(x, unwrap(x[1]));\n                }\n                return (0, lexer_2.track)(x, {\n                    constraintName: name,\n                    ...unwrap(x[1]),\n                });\n            } },\n        { \"name\": \"createtable_column_constraint\", \"symbols\": [\"createtable_column_constraint$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unique' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"kw_primary_key\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'primary key' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"kw_not_null\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'not null' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'null' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default', default: unwrap(x[1]) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"expr_paren\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'check', expr: unwrap(x[1]) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"createtable_references\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'reference', ...unwrap(x) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"altercol_generated\"] },\n        { \"name\": \"createtable_collate\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate), \"qualified_name\"] },\n        { \"name\": \"createtable_opts$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('inherits') },\n        { \"name\": \"createtable_opts$macrocall$2\", \"symbols\": [\"qname\"] },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtable_opts$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_opts$macrocall$1$ebnf$1\", \"createtable_opts$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_opts$macrocall$1\", \"symbols\": [\"createtable_opts$macrocall$2\", \"createtable_opts$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtable_opts\", \"symbols\": [\"createtable_opts$subexpression$1\", \"lparen\", \"createtable_opts$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, { inherits: x[2] }) },\n        { \"name\": \"createindex_statement$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$3\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$4\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"ident\"], \"postprocess\": last },\n        { \"name\": \"createindex_statement$ebnf$5\", \"symbols\": [\"createindex_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$6\", \"symbols\": [\"createindex_with\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$7\", \"symbols\": [\"createindex_tblspace\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$7\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$8\", \"symbols\": [\"createindex_predicate\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$8\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"createindex_statement$ebnf$1\", \"kw_index\", \"createindex_statement$ebnf$2\", \"createindex_statement$ebnf$3\", \"createindex_statement$ebnf$4\", (lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"table_ref\", \"createindex_statement$ebnf$5\", \"lparen\", \"createindex_expressions\", \"rparen\", \"createindex_statement$ebnf$6\", \"createindex_statement$ebnf$7\", \"createindex_statement$ebnf$8\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create index',\n                ...x[1] && { unique: true },\n                ...x[3] && { concurrently: true },\n                ...x[4] && { ifNotExists: true },\n                ...x[5] && { indexName: asName(x[5]) },\n                table: x[7],\n                ...x[8] && { using: asName(x[8]) },\n                expressions: x[10],\n                ...x[12] && { with: x[12] },\n                ...x[13] && { tablespace: unwrap(x[13]) },\n                ...x[14] && { where: unwrap(x[14]) },\n            }) },\n        { \"name\": \"createindex_expressions$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createindex_expressions$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"createindex_expression\"], \"postprocess\": last },\n        { \"name\": \"createindex_expressions$ebnf$1\", \"symbols\": [\"createindex_expressions$ebnf$1\", \"createindex_expressions$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createindex_expressions\", \"symbols\": [\"createindex_expression\", \"createindex_expressions$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createindex_expression$subexpression$1\", \"symbols\": [\"expr_basic\"] },\n        { \"name\": \"createindex_expression$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"createindex_expression$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate), \"qualified_name\"], \"postprocess\": last },\n        { \"name\": \"createindex_expression$ebnf$1\", \"symbols\": [\"createindex_expression$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$2\", \"symbols\": [\"qualified_name\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"createindex_expression$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"createindex_expression$ebnf$3\", \"symbols\": [\"createindex_expression$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\", \"symbols\": [\"kw_last\"] },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1\", \"symbols\": [\"kw_nulls\", \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"createindex_expression$ebnf$4\", \"symbols\": [\"createindex_expression$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression\", \"symbols\": [\"createindex_expression$subexpression$1\", \"createindex_expression$ebnf$1\", \"createindex_expression$ebnf$2\", \"createindex_expression$ebnf$3\", \"createindex_expression$ebnf$4\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                expression: unwrap(x[0]),\n                ...x[1] && { collate: unwrap(x[1]) },\n                ...x[2] && { opclass: unwrap(x[2]) },\n                ...x[3] && { order: unwrap(x[3]).value },\n                ...x[4] && { nulls: unwrap(x[4]) },\n            }) },\n        { \"name\": \"createindex_predicate\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"createindex_with$macrocall$2\", \"symbols\": [\"createindex_with_item\"] },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createindex_with$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1\", \"symbols\": [\"createindex_with$macrocall$1$ebnf$1\", \"createindex_with$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createindex_with$macrocall$1\", \"symbols\": [\"createindex_with$macrocall$2\", \"createindex_with$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createindex_with\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"lparen\", \"createindex_with$macrocall$1\", \"rparen\"], \"postprocess\": get(2) },\n        { \"name\": \"createindex_with_item$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"createindex_with_item$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"createindex_with_item\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"createindex_with_item$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { parameter: toStr(x[0]), value: unwrap(x[2]).toString() }) },\n        { \"name\": \"createindex_tblspace\", \"symbols\": [\"kw_tablespace\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$3$subexpression$1\", \"symbols\": [\"kw_schema\", \"word\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$3\", \"symbols\": [\"createextension_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$4$subexpression$1\", \"symbols\": [\"kw_version\", \"string\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$4\", \"symbols\": [\"createextension_statement$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"string\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$5\", \"symbols\": [\"createextension_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_extension\", \"createextension_statement$ebnf$1\", \"word\", \"createextension_statement$ebnf$2\", \"createextension_statement$ebnf$3\", \"createextension_statement$ebnf$4\", \"createextension_statement$ebnf$5\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create extension',\n                ...!!x[2] ? { ifNotExists: true } : {},\n                extension: asName(x[3]),\n                ...!!x[5] ? { schema: asName(x[5]) } : {},\n                ...!!x[6] ? { version: asLit(x[6]) } : {},\n                ...!!x[7] ? { from: asLit(x[7]) } : {},\n            }) },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_start_transaction\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_commit\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_rollback\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_tablespace\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_set\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_show\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_begin\"] },\n        { \"name\": \"simplestatements_start_transaction$subexpression$1\", \"symbols\": [\"kw_start\", \"kw_transaction\"] },\n        { \"name\": \"simplestatements_start_transaction\", \"symbols\": [\"simplestatements_start_transaction$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'start transaction' }) },\n        { \"name\": \"simplestatements_commit\", \"symbols\": [\"kw_commit\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'commit' }) },\n        { \"name\": \"simplestatements_rollback\", \"symbols\": [\"kw_rollback\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'rollback' }) },\n        { \"name\": \"simplestatements_tablespace\", \"symbols\": [\"kw_tablespace\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'tablespace',\n                tablespace: asName(x[1]),\n            }) },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_simple\"] },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_timezone\"] },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_names\"] },\n        { \"name\": \"simplestatements_set\", \"symbols\": [\"kw_set\", \"simplestatements_set$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"simplestatements_set_timezone\", \"symbols\": [\"kw_time\", \"kw_zone\", \"simplestatements_set_timezone_val\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set timezone', to: x[2] }) },\n        { \"name\": \"simplestatements_set_timezone_val$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_timezone_val$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"simplestatements_set_timezone_val$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x[0]) }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"kw_local\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'local' }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"kw_interval\", \"string\", \"kw_hour\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"kw_minute\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'interval', value: (0, lexer_2.unbox)(x[1]) }) },\n        { \"name\": \"simplestatements_set_names\", \"symbols\": [\"kw_names\", \"simplestatements_set_names_val\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set names', to: x[1] }) },\n        { \"name\": \"simplestatements_set_names_val$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_names_val\", \"symbols\": [\"simplestatements_set_names_val$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x[0]) }) },\n        { \"name\": \"simplestatements_set_simple$ebnf$1$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"simplestatements_set_simple$ebnf$1$subexpression$1\", \"symbols\": [\"kw_session\"] },\n        { \"name\": \"simplestatements_set_simple$ebnf$1\", \"symbols\": [\"simplestatements_set_simple$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"simplestatements_set_simple$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_set_simple$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq)] },\n        { \"name\": \"simplestatements_set_simple$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to)] },\n        { \"name\": \"simplestatements_set_simple\", \"symbols\": [\"simplestatements_set_simple$ebnf$1\", \"ident\", \"simplestatements_set_simple$subexpression$1\", \"simplestatements_set_val\"], \"postprocess\": x => {\n                var _a;\n                return (0, lexer_2.track)(x, {\n                    type: 'set',\n                    variable: asName(x[1]),\n                    scope: (_a = unwrap(x[0])) === null || _a === void 0 ? void 0 : _a.toLowerCase(),\n                    set: (0, lexer_2.unbox)(x[3]),\n                });\n            } },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [\"simplestatements_set_val_raw\"], \"postprocess\": unwrap },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"simplestatements_set_val$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"simplestatements_set_val_raw\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1\", \"symbols\": [\"simplestatements_set_val$ebnf$1$subexpression$1\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1$subexpression$2\", \"symbols\": [\"comma\", \"simplestatements_set_val_raw\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1\", \"symbols\": [\"simplestatements_set_val$ebnf$1\", \"simplestatements_set_val$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [\"simplestatements_set_val_raw\", \"simplestatements_set_val$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'list',\n                values: [x[0], ...(x[1] || [])]\n            }) },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [\"simplestatements_set_val_raw$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x) }) },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [\"simplestatements_set_val_raw$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'identifier', name: unwrap(x).value }) },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [(lexer_1.lexerAny.has(\"quoted_word\") ? { type: \"quoted_word\" } : quoted_word)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'identifier', doubleQuoted: true, name: unwrap(x).value }) },\n        { \"name\": \"simplestatements_show\", \"symbols\": [\"kw_show\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'show', variable: asName(x[1]) }) },\n        { \"name\": \"create_schema$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_schema\"] },\n        { \"name\": \"create_schema$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_schema$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_schema\", \"symbols\": [\"create_schema$subexpression$1\", \"create_schema$ebnf$1\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create schema',\n                name: asName(x[2]),\n                ...!!x[1] ? { ifNotExists: true } : {},\n            }) },\n        { \"name\": \"raise_statement$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('debug', 'log', 'info', 'notice', 'warning', 'exception') },\n        { \"name\": \"raise_statement$ebnf$1\", \"symbols\": [\"raise_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement$ebnf$2$subexpression$1\", \"symbols\": [\"comma\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"raise_statement$ebnf$2\", \"symbols\": [\"raise_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement$ebnf$3\", \"symbols\": [\"raise_using\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement\", \"symbols\": [\"kw_raise\", \"raise_statement$ebnf$1\", \"string\", \"raise_statement$ebnf$2\", \"raise_statement$ebnf$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'raise',\n                format: toStr(x[2]),\n                ...x[1] && { level: toStr(x[1]) },\n                ...x[3] && x[3].length && { formatExprs: x[3] },\n                ...x[4] && x[4].length && { using: x[4] },\n            }) },\n        { \"name\": \"raise_using$macrocall$2\", \"symbols\": [\"raise_using_one\"] },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"raise_using$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1\", \"symbols\": [\"raise_using$macrocall$1$ebnf$1\", \"raise_using$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"raise_using$macrocall$1\", \"symbols\": [\"raise_using$macrocall$2\", \"raise_using$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"raise_using\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"raise_using$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"raise_using_one\", \"symbols\": [\"raise_using_what\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0]),\n                value: x[2],\n            }) },\n        { \"name\": \"raise_using_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"raise_using_what\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('message', 'detail', 'hint', 'errcode', 'column', 'constraint', 'datatype', 'schema') },\n        { \"name\": \"comment_statement\", \"symbols\": [\"kw_comment\", (lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"comment_what\", (lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"string\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'comment',\n                comment: (0, lexer_2.unbox)(last(x)),\n                on: unwrap(x[2]),\n            }) },\n        { \"name\": \"comment_what\", \"symbols\": [\"comment_what_col\"] },\n        { \"name\": \"comment_what\", \"symbols\": [\"comment_what_nm\"] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [\"kw_materialized\", \"kw_view\"] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('database', 'index', 'trigger', 'type', 'view') },\n        { \"name\": \"comment_what_nm\", \"symbols\": [\"comment_what_nm$subexpression$1\", \"qualified_name\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0]),\n                name: x[1],\n            }) },\n        { \"name\": \"comment_what_col\", \"symbols\": [\"kw_column\", \"qcolumn\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'column',\n                column: last(x),\n            }) },\n        { \"name\": \"simplestatements_begin$ebnf$1$subexpression$1\", \"symbols\": [\"kw_transaction\"] },\n        { \"name\": \"simplestatements_begin$ebnf$1$subexpression$1\", \"symbols\": [\"kw_work\"] },\n        { \"name\": \"simplestatements_begin$ebnf$1\", \"symbols\": [\"simplestatements_begin$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"simplestatements_begin$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_begin$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_isol\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_writ\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_def\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2\", \"symbols\": [\"simplestatements_begin$ebnf$2\", \"simplestatements_begin$ebnf$2$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"simplestatements_begin\", \"symbols\": [\"kw_begin\", \"simplestatements_begin$ebnf$1\", \"simplestatements_begin$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'begin',\n                ...x[2].reduce((a, b) => ({ ...unwrap(a), ...unwrap(b) }), {}),\n            })\n        },\n        { \"name\": \"simplestatements_begin_isol$subexpression$1\", \"symbols\": [\"kw_isolation\", \"kw_level\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_serializable\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('repeatable') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"simplestatements_begin_isol$subexpression$2$subexpression$1\", \"kw_read\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$2\", \"symbols\": [\"word\"], \"postprocess\": kw('committed') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_read\", \"simplestatements_begin_isol$subexpression$2$subexpression$2\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$3\", \"symbols\": [\"word\"], \"postprocess\": kw('uncommitted') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_read\", \"simplestatements_begin_isol$subexpression$2$subexpression$3\"] },\n        { \"name\": \"simplestatements_begin_isol\", \"symbols\": [\"simplestatements_begin_isol$subexpression$1\", \"simplestatements_begin_isol$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                isolationLevel: toStr(x[1], ' '),\n            }) },\n        { \"name\": \"simplestatements_begin_writ$subexpression$1\", \"symbols\": [\"kw_read\", \"kw_write\"] },\n        { \"name\": \"simplestatements_begin_writ$subexpression$1\", \"symbols\": [\"kw_read\", (lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)] },\n        { \"name\": \"simplestatements_begin_writ\", \"symbols\": [\"simplestatements_begin_writ$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                writeable: toStr(x, ' '),\n            }) },\n        { \"name\": \"simplestatements_begin_def$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"simplestatements_begin_def$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_begin_def\", \"symbols\": [\"simplestatements_begin_def$ebnf$1\", (lexer_1.lexerAny.has(\"kw_deferrable\") ? { type: \"kw_deferrable\" } : kw_deferrable)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                deferrable: !x[0]\n            }) },\n        { \"name\": \"insert_statement$subexpression$1\", \"symbols\": [\"kw_insert\", (lexer_1.lexerAny.has(\"kw_into\") ? { type: \"kw_into\" } : kw_into)] },\n        { \"name\": \"insert_statement$ebnf$1\", \"symbols\": [\"collist_paren\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_system\"] },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_overriding\", \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"kw_value\"], \"postprocess\": get(1) },\n        { \"name\": \"insert_statement$ebnf$2\", \"symbols\": [\"insert_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$3$subexpression$1\", \"symbols\": [\"selection\"] },\n        { \"name\": \"insert_statement$ebnf$3$subexpression$1\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"insert_statement$ebnf$3\", \"symbols\": [\"insert_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$4$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_conflict\", \"insert_on_conflict\"], \"postprocess\": last },\n        { \"name\": \"insert_statement$ebnf$4\", \"symbols\": [\"insert_statement$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"insert_statement$ebnf$5\", \"symbols\": [\"insert_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement\", \"symbols\": [\"insert_statement$subexpression$1\", \"table_ref_aliased\", \"insert_statement$ebnf$1\", \"insert_statement$ebnf$2\", \"insert_statement$ebnf$3\", \"insert_statement$ebnf$4\", \"insert_statement$ebnf$5\"], \"postprocess\": x => {\n                const columns = x[2] && x[2].map(asName);\n                const overriding = toStr(x[3]);\n                const insert = unwrap(x[4]);\n                const onConflict = x[5];\n                const returning = x[6];\n                return (0, lexer_2.track)(x, {\n                    type: 'insert',\n                    into: unwrap(x[1]),\n                    insert,\n                    ...overriding && { overriding },\n                    ...columns && { columns },\n                    ...returning && { returning },\n                    ...onConflict && { onConflict },\n                });\n            } },\n        { \"name\": \"insert_values$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"insert_values$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"insert_value\"], \"postprocess\": last },\n        { \"name\": \"insert_values$ebnf$1\", \"symbols\": [\"insert_values$ebnf$1\", \"insert_values$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"insert_values\", \"symbols\": [\"insert_value\", \"insert_values$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"insert_value\", \"symbols\": [\"lparen\", \"insert_expr_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"insert_expr_list_raw$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"insert_expr_list_raw$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"expr_or_select\"], \"postprocess\": last },\n        { \"name\": \"insert_expr_list_raw$ebnf$1\", \"symbols\": [\"insert_expr_list_raw$ebnf$1\", \"insert_expr_list_raw$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"insert_expr_list_raw\", \"symbols\": [\"expr_or_select\", \"insert_expr_list_raw$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"insert_on_conflict$ebnf$1\", \"symbols\": [\"insert_on_conflict_what\"], \"postprocess\": id },\n        { \"name\": \"insert_on_conflict$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_on_conflict\", \"symbols\": [\"insert_on_conflict$ebnf$1\", \"insert_on_conflict_do\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...x[0] ? { on: unwrap(x[0]) } : {},\n                ...x[1],\n            }) },\n        { \"name\": \"insert_on_conflict_what\", \"symbols\": [\"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'on expr',\n                exprs: x[1],\n            }) },\n        { \"name\": \"insert_on_conflict_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"qname\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'on constraint',\n                constraint: last(x),\n            }) },\n        { \"name\": \"insert_on_conflict_do\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"kw_nothing\"], \"postprocess\": x => ({ do: 'do nothing' }) },\n        { \"name\": \"insert_on_conflict_do$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"kw_update\", \"kw_set\"] },\n        { \"name\": \"insert_on_conflict_do$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"insert_on_conflict_do$ebnf$1\", \"symbols\": [\"insert_on_conflict_do$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_on_conflict_do$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_on_conflict_do\", \"symbols\": [\"insert_on_conflict_do$subexpression$1\", \"update_set_list\", \"insert_on_conflict_do$ebnf$1\"], \"postprocess\": x => ({\n                do: { sets: x[1] },\n                ...x[2] && { where: x[2] },\n            }) },\n        { \"name\": \"update_statement$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"select_from_subject\"], \"postprocess\": last },\n        { \"name\": \"update_statement$ebnf$1\", \"symbols\": [\"update_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement$ebnf$2\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"update_statement$ebnf$3\", \"symbols\": [\"update_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement\", \"symbols\": [\"kw_update\", \"table_ref_aliased\", \"kw_set\", \"update_set_list\", \"update_statement$ebnf$1\", \"update_statement$ebnf$2\", \"update_statement$ebnf$3\"], \"postprocess\": x => {\n                const from = unwrap(x[4]);\n                const where = unwrap(x[5]);\n                const returning = x[6];\n                return (0, lexer_2.track)(x, {\n                    type: 'update',\n                    table: unwrap(x[1]),\n                    sets: x[3],\n                    ...where ? { where } : {},\n                    ...from ? { from } : {},\n                    ...returning ? { returning } : {},\n                });\n            } },\n        { \"name\": \"update_set_list$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"update_set_list$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"update_set\"], \"postprocess\": last },\n        { \"name\": \"update_set_list$ebnf$1\", \"symbols\": [\"update_set_list$ebnf$1\", \"update_set_list$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"update_set_list\", \"symbols\": [\"update_set\", \"update_set_list$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                const ret = [];\n                for (const _t of [head, ...(tail || [])]) {\n                    const t = unwrap(_t);\n                    if (Array.isArray(t)) {\n                        ret.push(...t);\n                    }\n                    else {\n                        ret.push(t);\n                    }\n                }\n                return ret;\n            } },\n        { \"name\": \"update_set\", \"symbols\": [\"update_set_one\"] },\n        { \"name\": \"update_set\", \"symbols\": [\"update_set_multiple\"] },\n        { \"name\": \"update_set_one\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => (0, lexer_2.box)(x, {\n                column: asName(x[0]),\n                value: unwrap(x[2]),\n            }) },\n        { \"name\": \"update_set_multiple$subexpression$1\", \"symbols\": [\"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"update_set_multiple\", \"symbols\": [\"collist_paren\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"update_set_multiple$subexpression$1\"], \"postprocess\": x => {\n                const cols = x[0];\n                const exprs = x[2];\n                if (cols.length !== exprs.length) {\n                    throw new Error('number of columns does not match number of values');\n                }\n                return (0, lexer_2.box)(x, cols.map((x, i) => ({\n                    column: asName(x),\n                    value: unwrap(exprs[i]),\n                })));\n            } },\n        { \"name\": \"altertable_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)], \"postprocess\": id },\n        { \"name\": \"altertable_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_statement\", \"symbols\": [\"kw_alter\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"altertable_statement$ebnf$1\", \"altertable_statement$ebnf$2\", \"table_ref\", \"altertable_actions\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter table',\n                ...x[2] ? { ifExists: true } : {},\n                ...x[3] ? { only: true } : {},\n                table: unwrap(x[4]),\n                changes: (0, lexer_2.unbox)(x[5]).map(unwrap),\n            }) },\n        { \"name\": \"altertable_actions$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"altertable_actions$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"altertable_action\"], \"postprocess\": last },\n        { \"name\": \"altertable_actions$ebnf$1\", \"symbols\": [\"altertable_actions$ebnf$1\", \"altertable_actions$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"altertable_actions\", \"symbols\": [\"altertable_action\", \"altertable_actions$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_table\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_add_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_drop_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_alter_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_add_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_drop_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_owner\"] },\n        { \"name\": \"altertable_rename_table\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_rename_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_rename_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_rename_column\", \"symbols\": [\"kw_rename\", \"altertable_rename_column$ebnf$1\", \"ident\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename column',\n                column: asName(x[2]),\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_rename_constraint\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"ident\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename constraint',\n                constraint: asName(x[2]),\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_add_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_add_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_add_column$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_add_column$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_add_column\", \"symbols\": [\"kw_add\", \"altertable_add_column$ebnf$1\", \"altertable_add_column$ebnf$2\", \"createtable_column\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add column',\n                ...x[2] ? { ifNotExists: true } : {},\n                column: unwrap(x[3]),\n            }) },\n        { \"name\": \"altertable_drop_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column$ebnf$2\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column$ebnf$3$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"altertable_drop_column$ebnf$3$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"altertable_drop_column$ebnf$3\", \"symbols\": [\"altertable_drop_column$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column\", \"symbols\": [\"kw_drop\", \"altertable_drop_column$ebnf$1\", \"altertable_drop_column$ebnf$2\", \"ident\", \"altertable_drop_column$ebnf$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop column',\n                ...x[2] ? { ifExists: true } : {},\n                column: asName(x[3]),\n                ...x[4] ? { behaviour: toStr(x[4], ' ') } : {},\n            }) },\n        { \"name\": \"altertable_alter_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_alter_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_alter_column\", \"symbols\": [\"kw_alter\", \"altertable_alter_column$ebnf$1\", \"ident\", \"altercol\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter column',\n                column: asName(x[2]),\n                alter: unwrap(x[3])\n            }) },\n        { \"name\": \"altercol$ebnf$1$subexpression$1\", \"symbols\": [\"kw_set\", \"kw_data\"] },\n        { \"name\": \"altercol$ebnf$1\", \"symbols\": [\"altercol$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol$ebnf$1\", \"kw_type\", \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set type', dataType: unwrap(last(x)) }) },\n        { \"name\": \"altercol\", \"symbols\": [\"kw_set\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set default', default: unwrap(last(x)) }) },\n        { \"name\": \"altercol\", \"symbols\": [\"kw_drop\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop default' }) },\n        { \"name\": \"altercol$subexpression$1\", \"symbols\": [\"kw_set\"] },\n        { \"name\": \"altercol$subexpression$1\", \"symbols\": [\"kw_drop\"] },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol$subexpression$1\", \"kw_not_null\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: toStr(x, ' ') }) },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol_generated_add\"], \"postprocess\": unwrap },\n        { \"name\": \"altertable_add_constraint\", \"symbols\": [\"kw_add\", \"createtable_constraint\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add constraint',\n                constraint: unwrap(last(x)),\n            }) },\n        { \"name\": \"altertable_drop_constraint$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_constraint$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_constraint$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"altertable_drop_constraint$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"altertable_drop_constraint$ebnf$2\", \"symbols\": [\"altertable_drop_constraint$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_constraint$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_constraint\", \"symbols\": [\"kw_drop\", (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"altertable_drop_constraint$ebnf$1\", \"ident\", \"altertable_drop_constraint$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop constraint',\n                ...x[2] ? { ifExists: true } : {},\n                constraint: asName(x[3]),\n                ...x[4] ? { behaviour: toStr(x[4], ' ') } : {},\n            }) },\n        { \"name\": \"altertable_owner\", \"symbols\": [\"kw_owner\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'owner',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altercol_generated_add\", \"symbols\": [\"kw_add\", \"altercol_generated\"], \"postprocess\": last },\n        { \"name\": \"altercol_generated$ebnf$1$subexpression$1\", \"symbols\": [\"kw_always\"] },\n        { \"name\": \"altercol_generated$ebnf$1$subexpression$1\", \"symbols\": [\"kw_by\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"altercol_generated$ebnf$1\", \"symbols\": [\"altercol_generated$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"kw_identity\"] },\n        { \"name\": \"altercol_generated$ebnf$2$subexpression$1\", \"symbols\": [\"lparen\", \"altercol_generated_seq\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"altercol_generated$ebnf$2\", \"symbols\": [\"altercol_generated$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated\", \"symbols\": [\"kw_generated\", \"altercol_generated$ebnf$1\", \"altercol_generated$subexpression$1\", \"altercol_generated$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add generated',\n                ...x[1] && { always: toStr(x[1], ' ') },\n                ...x[3] && { sequence: unwrap(x[3]) },\n            }) },\n        { \"name\": \"altercol_generated_seq$ebnf$1$subexpression$1\", \"symbols\": [\"kw_sequence\", \"kw_name\", \"qualified_name\"] },\n        { \"name\": \"altercol_generated_seq$ebnf$1\", \"symbols\": [\"altercol_generated_seq$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated_seq$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated_seq$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"altercol_generated_seq$ebnf$2\", \"symbols\": [\"altercol_generated_seq$ebnf$2\", \"create_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"altercol_generated_seq\", \"symbols\": [\"altercol_generated_seq$ebnf$1\", \"altercol_generated_seq$ebnf$2\"], \"postprocess\": x => {\n                const ret = {\n                    ...x[0] && { name: unwrap(last(x[0])) },\n                };\n                setSeqOpts(ret, x[1]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alterindex_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"alterindex_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alterindex_statement\", \"symbols\": [\"kw_alter\", \"kw_index\", \"alterindex_statement$ebnf$1\", \"table_ref\", \"alterindex_action\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter index',\n                ...x[2] ? { ifExists: true } : {},\n                index: unwrap(x[3]),\n                change: unwrap(x[4]),\n            }) },\n        { \"name\": \"alterindex_action\", \"symbols\": [\"alterindex_rename\"] },\n        { \"name\": \"alterindex_action\", \"symbols\": [\"alterindex_set_tablespace\"] },\n        { \"name\": \"alterindex_rename\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"alterindex_set_tablespace\", \"symbols\": [\"kw_set\", \"kw_tablespace\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'set tablespace',\n                tablespace: asName(last(x)),\n            }) },\n        { \"name\": \"delete_statement\", \"symbols\": [\"delete_delete\"] },\n        { \"name\": \"delete_statement\", \"symbols\": [\"delete_truncate\"] },\n        { \"name\": \"delete_delete$subexpression$1\", \"symbols\": [\"kw_delete\", (lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from)] },\n        { \"name\": \"delete_delete$ebnf$1\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"delete_delete$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_delete$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"delete_delete$ebnf$2\", \"symbols\": [\"delete_delete$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_delete$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_delete\", \"symbols\": [\"delete_delete$subexpression$1\", \"table_ref_aliased\", \"delete_delete$ebnf$1\", \"delete_delete$ebnf$2\"], \"postprocess\": x => {\n                const where = x[2];\n                const returning = x[3];\n                return (0, lexer_2.track)(x, {\n                    type: 'delete',\n                    from: unwrap(x[1]),\n                    ...where ? { where } : {},\n                    ...returning ? { returning } : {},\n                });\n            } },\n        { \"name\": \"delete_truncate$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)], \"postprocess\": id },\n        { \"name\": \"delete_truncate$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate$subexpression$1\", \"symbols\": [\"kw_truncate\", \"delete_truncate$subexpression$1$ebnf$1\"] },\n        { \"name\": \"delete_truncate$macrocall$2\", \"symbols\": [\"table_ref\"] },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"delete_truncate$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1\", \"symbols\": [\"delete_truncate$macrocall$1$ebnf$1\", \"delete_truncate$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"delete_truncate$macrocall$1\", \"symbols\": [\"delete_truncate$macrocall$2\", \"delete_truncate$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"symbols\": [\"kw_restart\"] },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"symbols\": [\"kw_continue\"] },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1\", \"symbols\": [\"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"kw_identity\"] },\n        { \"name\": \"delete_truncate$ebnf$1\", \"symbols\": [\"delete_truncate$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_truncate$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"delete_truncate$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"delete_truncate$ebnf$2\", \"symbols\": [\"delete_truncate$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_truncate$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate\", \"symbols\": [\"delete_truncate$subexpression$1\", \"delete_truncate$macrocall$1\", \"delete_truncate$ebnf$1\", \"delete_truncate$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'truncate table',\n                tables: x[1],\n                ...x[2] && { identity: toStr(x[2][0]) },\n                ...x[3] && { cascade: toStr(x[3]) },\n            }) },\n        { \"name\": \"create_sequence_statement$ebnf$1$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"create_sequence_statement$ebnf$1$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"create_sequence_statement$ebnf$1\", \"symbols\": [\"create_sequence_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_statement$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_statement$ebnf$3\", \"symbols\": [] },\n        { \"name\": \"create_sequence_statement$ebnf$3\", \"symbols\": [\"create_sequence_statement$ebnf$3\", \"create_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_sequence_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_sequence_statement$ebnf$1\", \"kw_sequence\", \"create_sequence_statement$ebnf$2\", \"qualified_name\", \"create_sequence_statement$ebnf$3\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'create sequence',\n                    ...x[1] && { temp: true },\n                    ...x[3] && { ifNotExists: true },\n                    name: unwrap(x[4]),\n                    options: {},\n                };\n                setSeqOpts(ret.options, x[5]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"create_sequence_option\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"data_type\"], \"postprocess\": x => (0, lexer_2.box)(x, ['as', x[1]]) },\n        { \"name\": \"create_sequence_option$ebnf$1\", \"symbols\": [\"kw_by\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_increment\", \"create_sequence_option$ebnf$1\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['incrementBy', x[2]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_minvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, ['minValue', x[0]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_maxvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, ['maxValue', x[0]]) },\n        { \"name\": \"create_sequence_option$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_start\", \"create_sequence_option$ebnf$2\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['startWith', x[2]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_cache\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['cache', x[1]]) },\n        { \"name\": \"create_sequence_option$ebnf$3\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_option$ebnf$3\", \"kw_cycle\"], \"postprocess\": x => (0, lexer_2.box)(x, ['cycle', toStr(x, ' ')]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_owned_by\"], \"postprocess\": x => (0, lexer_2.box)(x, ['ownedBy', unwrap(x)]) },\n        { \"name\": \"create_sequence_minvalue\", \"symbols\": [\"kw_minvalue\", \"int\"], \"postprocess\": last },\n        { \"name\": \"create_sequence_minvalue\", \"symbols\": [\"kw_no\", \"kw_minvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, 'no minvalue') },\n        { \"name\": \"create_sequence_maxvalue\", \"symbols\": [\"kw_maxvalue\", \"int\"], \"postprocess\": last },\n        { \"name\": \"create_sequence_maxvalue\", \"symbols\": [\"kw_no\", \"kw_maxvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, 'no maxvalue') },\n        { \"name\": \"create_sequence_owned_by$subexpression$1\", \"symbols\": [\"kw_none\"] },\n        { \"name\": \"create_sequence_owned_by$subexpression$1\", \"symbols\": [\"qcolumn\"] },\n        { \"name\": \"create_sequence_owned_by\", \"symbols\": [\"kw_owned\", \"kw_by\", \"create_sequence_owned_by$subexpression$1\"], \"postprocess\": x => (0, lexer_2.box)(x, unwrap(last(x))) },\n        { \"name\": \"alter_sequence_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"alter_sequence_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_statement\", \"symbols\": [\"kw_alter\", \"kw_sequence\", \"alter_sequence_statement$ebnf$1\", \"qualified_name\", \"alter_sequence_statement_body\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'alter sequence',\n                    ...x[2] && { ifExists: true },\n                    name: unwrap(x[3]),\n                    change: x[4],\n                };\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alter_sequence_statement_body$ebnf$1\", \"symbols\": [\"alter_sequence_option\"] },\n        { \"name\": \"alter_sequence_statement_body$ebnf$1\", \"symbols\": [\"alter_sequence_statement_body$ebnf$1\", \"alter_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"alter_sequence_statement_body$ebnf$1\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'set options',\n                };\n                setSeqOpts(ret, x[0]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [\"ident\"] },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_owner\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"alter_sequence_statement_body$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'owner to', owner: asName(last(x)), }) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'rename', newName: asName(last(x)) }) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_set\", \"kw_schema\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set schema', newSchema: asName(last(x)) }) },\n        { \"name\": \"alter_sequence_option\", \"symbols\": [\"create_sequence_option\"], \"postprocess\": unwrap },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1\", \"symbols\": [\"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"int\"], \"postprocess\": last },\n        { \"name\": \"alter_sequence_option$ebnf$1\", \"symbols\": [\"alter_sequence_option$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"alter_sequence_option$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_option\", \"symbols\": [\"kw_restart\", \"alter_sequence_option$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, ['restart', typeof (0, lexer_2.unbox)(x[1]) === 'number' ? (0, lexer_2.unbox)(x[1]) : true]) },\n        { \"name\": \"drop_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"drop_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_statement$macrocall$2\", \"symbols\": [\"qualified_name\"] },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"drop_statement$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1\", \"symbols\": [\"drop_statement$macrocall$1$ebnf$1\", \"drop_statement$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"drop_statement$macrocall$1\", \"symbols\": [\"drop_statement$macrocall$2\", \"drop_statement$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"drop_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"drop_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"drop_statement$ebnf$2\", \"symbols\": [\"drop_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"drop_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_statement\", \"symbols\": [\"kw_drop\", \"drop_what\", \"drop_statement$ebnf$1\", \"drop_statement$macrocall$1\", \"drop_statement$ebnf$2\"], \"postprocess\": (x, rej) => {\n                const v = unwrap(x[1]);\n                return (0, lexer_2.track)(x, {\n                    ...v,\n                    ...x[2] && { ifExists: true },\n                    names: x[3],\n                    ...x[4] && { cascade: toStr(x[4]) },\n                });\n            } },\n        { \"name\": \"drop_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop table' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_sequence\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop sequence' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop type' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_trigger\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop trigger' }) },\n        { \"name\": \"drop_what$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"drop_what$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_index\", \"drop_what$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop index',\n                ...x[1] && { concurrently: true },\n            }) },\n        { \"name\": \"with_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"with_statement_bindings\", \"with_statement_statement\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'with',\n                bind: x[1],\n                in: unwrap(x[2]),\n            }) },\n        { \"name\": \"with_recursive_statement$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"kw_recursive\"] },\n        { \"name\": \"with_recursive_statement\", \"symbols\": [\"with_recursive_statement$subexpression$1\", \"ident\", \"collist_paren\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"union_statement\", \"rparen\", \"with_statement_statement\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'with recursive',\n                alias: asName(x[1]),\n                columnNames: x[2].map(asName),\n                bind: x[5],\n                in: unwrap(x[7]),\n            }) },\n        { \"name\": \"with_statement_bindings$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"with_statement_bindings$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"with_statement_binding\"], \"postprocess\": last },\n        { \"name\": \"with_statement_bindings$ebnf$1\", \"symbols\": [\"with_statement_bindings$ebnf$1\", \"with_statement_bindings$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"with_statement_bindings\", \"symbols\": [\"with_statement_binding\", \"with_statement_bindings$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"with_statement_binding\", \"symbols\": [\"word\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"with_statement_statement\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                alias: asName(x[0]),\n                statement: unwrap(x[3]),\n            }) },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"selection\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"insert_statement\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"update_statement\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"delete_statement\"] },\n        { \"name\": \"createtype_statement$subexpression$1\", \"symbols\": [\"createtype_enum\"] },\n        { \"name\": \"createtype_statement$subexpression$1\", \"symbols\": [\"createtype_composite\"] },\n        { \"name\": \"createtype_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_type\", \"qualified_name\", \"createtype_statement$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: x[2],\n                ...unwrap(x[3]),\n            }) },\n        { \"name\": \"createtype_enum$macrocall$2\", \"symbols\": [\"enum_value\"] },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtype_enum$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1\", \"symbols\": [\"createtype_enum$macrocall$1$ebnf$1\", \"createtype_enum$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtype_enum$macrocall$1\", \"symbols\": [\"createtype_enum$macrocall$2\", \"createtype_enum$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtype_enum\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"kw_enum\", \"lparen\", \"createtype_enum$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create enum',\n                values: x[3],\n            }) },\n        { \"name\": \"enum_value\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { value: toStr(x) }) },\n        { \"name\": \"createtype_composite$macrocall$2\", \"symbols\": [\"createtype_composite_attr\"] },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtype_composite$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1\", \"symbols\": [\"createtype_composite$macrocall$1$ebnf$1\", \"createtype_composite$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtype_composite$macrocall$1\", \"symbols\": [\"createtype_composite$macrocall$2\", \"createtype_composite$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtype_composite\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"createtype_composite$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create composite type',\n                attributes: x[2],\n            }) },\n        { \"name\": \"createtype_composite_attr$ebnf$1\", \"symbols\": [\"createtable_collate\"], \"postprocess\": id },\n        { \"name\": \"createtype_composite_attr$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtype_composite_attr\", \"symbols\": [\"word\", \"data_type\", \"createtype_composite_attr$ebnf$1\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    name: asName(x[0]),\n                    dataType: x[1],\n                    ...x[2] ? { collate: x[2][1] } : {},\n                });\n            } },\n        { \"name\": \"altertype_statement$subexpression$1\", \"symbols\": [\"altertype_enum_add_value\"] },\n        { \"name\": \"altertype_statement$subexpression$1\", \"symbols\": [\"altertype_enum_rename\"] },\n        { \"name\": \"altertype_statement\", \"symbols\": [\"kw_alter\", \"kw_type\", \"qualified_name\", \"altertype_statement$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: x[2],\n                ...unwrap(x[3]),\n            }) },\n        { \"name\": \"altertype_enum_add_value\", \"symbols\": [\"kw_add\", \"kw_value\", \"enum_additional_value\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter enum',\n                change: {\n                    type: 'add value',\n                    add: x[2]\n                }\n            }) },\n        { \"name\": \"enum_additional_value\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { value: toStr(x) }) },\n        { \"name\": \"altertype_enum_rename\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter enum',\n                change: {\n                    type: 'rename',\n                    to: asName(last(x))\n                }\n            }) },\n        { \"name\": \"union_left\", \"symbols\": [\"select_statement\"] },\n        { \"name\": \"union_left\", \"symbols\": [\"select_values\"] },\n        { \"name\": \"union_left\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"union_right\", \"symbols\": [\"selection\"] },\n        { \"name\": \"union_right\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"union_statement$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": id },\n        { \"name\": \"union_statement$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"union_statement$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_union\") ? { type: \"kw_union\" } : kw_union), \"union_statement$subexpression$1$ebnf$1\"] },\n        { \"name\": \"union_statement\", \"symbols\": [\"union_left\", \"union_statement$subexpression$1\", \"union_right\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: toStr(x[1], ' '),\n                    left: unwrap(x[0]),\n                    right: unwrap(x[2]),\n                });\n            } },\n        { \"name\": \"prepare$ebnf$1$subexpression$1\", \"symbols\": [\"lparen\", \"data_type_list\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"prepare$ebnf$1\", \"symbols\": [\"prepare$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"prepare$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"prepare\", \"symbols\": [\"kw_prepare\", \"ident\", \"prepare$ebnf$1\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"statement_noprep\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'prepare',\n                name: asName(x[1]),\n                ...x[2] && { args: x[2] },\n                statement: unwrap(last(x)),\n            }) },\n        { \"name\": \"deallocate$ebnf$1\", \"symbols\": [\"kw_prepare\"], \"postprocess\": id },\n        { \"name\": \"deallocate$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"deallocate\", \"symbols\": [\"kw_deallocate\", \"deallocate$ebnf$1\", \"deallocate_target\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'deallocate',\n                target: x[2],\n            }) },\n        { \"name\": \"deallocate_target\", \"symbols\": [\"deallocate_all\"], \"postprocess\": unwrap },\n        { \"name\": \"deallocate_target\", \"symbols\": [\"deallocate_name\"], \"postprocess\": unwrap },\n        { \"name\": \"deallocate_name\", \"symbols\": [\"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, asName(x[0])) },\n        { \"name\": \"deallocate_all\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": x => (0, lexer_2.track)(x, { option: 'all' }) },\n        { \"name\": \"create_view_statements\", \"symbols\": [\"create_view\"] },\n        { \"name\": \"create_view_statements\", \"symbols\": [\"create_materialized_view\"] },\n        { \"name\": \"create_view$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or), \"kw_replace\"] },\n        { \"name\": \"create_view$ebnf$1\", \"symbols\": [\"create_view$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$2$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"create_view$ebnf$2$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"create_view$ebnf$2\", \"symbols\": [\"create_view$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$3\", \"symbols\": [\"kw_recursive\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_view$ebnf$4$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1\", \"symbols\": [\"create_view$ebnf$4$subexpression$1$macrocall$2\", \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_view$ebnf$4$subexpression$1\", \"symbols\": [\"lparen\", \"create_view$ebnf$4$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_view$ebnf$4\", \"symbols\": [\"create_view$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$5\", \"symbols\": [\"create_view_opts\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$6$subexpression$1$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"create_view$ebnf$6$subexpression$1$subexpression$1\", \"symbols\": [\"kw_cascaded\"] },\n        { \"name\": \"create_view$ebnf$6$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_view$ebnf$6$subexpression$1$subexpression$1\", (lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"kw_option\"], \"postprocess\": get(1) },\n        { \"name\": \"create_view$ebnf$6\", \"symbols\": [\"create_view$ebnf$6$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_view$ebnf$1\", \"create_view$ebnf$2\", \"create_view$ebnf$3\", \"kw_view\", \"qualified_name\", \"create_view$ebnf$4\", \"create_view$ebnf$5\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"selection\", \"create_view$ebnf$6\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'create view',\n                    ...x[1] && { orReplace: true },\n                    ...x[2] && { temp: true },\n                    ...x[3] && { recursive: true },\n                    name: x[5],\n                    ...x[6] && { columnNames: x[6].map(asName) },\n                    ...x[7] && { parameters: fromEntries(x[7]) },\n                    query: x[9],\n                    ...x[10] && { checkOption: toStr(x[10]) },\n                });\n            } },\n        { \"name\": \"create_view_opt\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"ident\"], \"postprocess\": ([a, _, b]) => [toStr(a), toStr(b)] },\n        { \"name\": \"create_view_opts$macrocall$2\", \"symbols\": [\"create_view_opt\"] },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_view_opts$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1\", \"symbols\": [\"create_view_opts$macrocall$1$ebnf$1\", \"create_view_opts$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_view_opts$macrocall$1\", \"symbols\": [\"create_view_opts$macrocall$2\", \"create_view_opts$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_view_opts\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_view_opts$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1\", \"symbols\": [\"lparen\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_materialized_view$ebnf$2\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$3\", \"symbols\": [\"create_view_opts\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$4$subexpression$1\", \"symbols\": [\"kw_tablespace\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$4\", \"symbols\": [\"create_materialized_view$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"kw_data\"] },\n        { \"name\": \"create_materialized_view$ebnf$5\", \"symbols\": [\"create_materialized_view$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_materialized\", \"kw_view\", \"create_materialized_view$ebnf$1\", \"qualified_name\", \"create_materialized_view$ebnf$2\", \"create_materialized_view$ebnf$3\", \"create_materialized_view$ebnf$4\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"selection\", \"create_materialized_view$ebnf$5\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'create materialized view',\n                    ...x[3] && { ifNotExists: true },\n                    name: x[4],\n                    ...x[5] && { columnNames: x[6].map(asName) },\n                    ...x[6] && { parameters: fromEntries(x[6]) },\n                    ...x[7] && { tablespace: asName(x[7]) },\n                    query: x[9],\n                    ...x[10] && { withData: toStr(x[10][1]) !== 'no' },\n                });\n            } },\n        { \"name\": \"refresh_view_statements$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"kw_data\"] },\n        { \"name\": \"refresh_view_statements$ebnf$2\", \"symbols\": [\"refresh_view_statements$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements\", \"symbols\": [\"kw_refresh\", \"kw_materialized\", \"kw_view\", \"refresh_view_statements$ebnf$1\", \"qname\", \"refresh_view_statements$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'refresh materialized view',\n                ...!!x[3] ? { concurrently: true } : {},\n                name: x[4],\n                ...!!x[5] ? { withData: toStr(x[5][1]) !== 'no' } : {},\n            }) },\n        { \"name\": \"functions_statements\", \"symbols\": [\"create_func\"] },\n        { \"name\": \"functions_statements\", \"symbols\": [\"do_stm\"] },\n        { \"name\": \"functions_statements\", \"symbols\": [\"drop_func\"] },\n        { \"name\": \"create_func$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or), \"kw_replace\"] },\n        { \"name\": \"create_func$ebnf$1\", \"symbols\": [\"create_func$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_func$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$2\", \"symbols\": [\"func_argdef\"] },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_func$subexpression$1$ebnf$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$2\", \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_func$subexpression$1$ebnf$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$1\"], \"postprocess\": id },\n        { \"name\": \"create_func$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_func$subexpression$1\", \"symbols\": [\"lparen\", \"create_func$subexpression$1$ebnf$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_func$ebnf$2\", \"symbols\": [\"func_spec\"] },\n        { \"name\": \"create_func$ebnf$2\", \"symbols\": [\"create_func$ebnf$2\", \"func_spec\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_func\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_func$ebnf$1\", \"kw_function\", \"qname\", \"create_func$subexpression$1\", \"create_func$ebnf$2\"], \"postprocess\": (x, rej) => {\n                var _a;\n                const specs = {};\n                for (const s of x[5]) {\n                    for (const k in s) {\n                        if (k[0] !== '_' && k in specs) {\n                            throw new Error('conflicting or redundant options ' + k);\n                        }\n                    }\n                    Object.assign(specs, s);\n                }\n                return (0, lexer_2.track)(x, {\n                    type: 'create function',\n                    ...x[1] && { orReplace: true },\n                    name: x[3],\n                    arguments: (_a = x[4]) !== null && _a !== void 0 ? _a : [],\n                    ...specs,\n                });\n            } },\n        { \"name\": \"func_argdef$ebnf$1\", \"symbols\": [\"func_argopts\"], \"postprocess\": id },\n        { \"name\": \"func_argdef$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argdef$ebnf$2\", \"symbols\": [\"func_argdefault\"], \"postprocess\": id },\n        { \"name\": \"func_argdef$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argdef\", \"symbols\": [\"func_argdef$ebnf$1\", \"data_type\", \"func_argdef$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                default: x[2],\n                type: x[1],\n                ...x[0],\n            }) },\n        { \"name\": \"func_argdefault\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => x[1]\n        },\n        { \"name\": \"func_argdefault\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => x[1] },\n        { \"name\": \"func_argopts$ebnf$1\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"func_argopts$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argopts\", \"symbols\": [\"func_argmod\", \"func_argopts$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                mode: toStr(x[0]),\n                ...x[1] && { name: asName(x[1]) },\n            }) },\n        { \"name\": \"func_argopts\", \"symbols\": [\"word\"], \"postprocess\": (x, rej) => {\n                const name = asName(x);\n                if (name === 'out' || name === 'inout' || name === 'variadic') {\n                    return rej; // avoid ambiguous syntax\n                }\n                return (0, lexer_2.track)(x, { name });\n            } },\n        { \"name\": \"func_argmod\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_out\"] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_inout\"] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_variadic\"] },\n        { \"name\": \"func_spec\", \"symbols\": [\"kw_language\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, { language: asName(last(x)) }) },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_purity\"], \"postprocess\": x => (0, lexer_2.track)(x, { purity: toStr(x) }) },\n        { \"name\": \"func_spec$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"codeblock\") ? { type: \"codeblock\" } : codeblock)] },\n        { \"name\": \"func_spec$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"func_spec\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"func_spec$subexpression$1\"], \"postprocess\": x => ({ code: toStr(last(x)) }) },\n        { \"name\": \"func_spec$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"func_spec$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_spec$subexpression$2\", \"symbols\": [\"word\"], \"postprocess\": kw('leakproof') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$ebnf$1\", \"func_spec$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { leakproof: !x[0] }) },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_returns\"], \"postprocess\": x => (0, lexer_2.track)(x, { returns: unwrap(x) }) },\n        { \"name\": \"func_spec$subexpression$3\", \"symbols\": [\"word\"], \"postprocess\": kw('called') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$3\", \"oninp\"], \"postprocess\": () => ({ onNullInput: 'call' }) },\n        { \"name\": \"func_spec$subexpression$4\", \"symbols\": [\"word\"], \"postprocess\": kw('returns') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$4\", (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null), \"oninp\"], \"postprocess\": () => ({ onNullInput: 'null' }) },\n        { \"name\": \"func_spec$subexpression$5\", \"symbols\": [\"word\"], \"postprocess\": kw('strict') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$5\"], \"postprocess\": () => ({ onNullInput: 'strict' }) },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('immutable') },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('stable') },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('volatile') },\n        { \"name\": \"oninp$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('input') },\n        { \"name\": \"oninp\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null), \"oninp$subexpression$1\"] },\n        { \"name\": \"func_returns\", \"symbols\": [\"kw_returns\", \"data_type\"], \"postprocess\": last },\n        { \"name\": \"func_returns$macrocall$2\", \"symbols\": [\"func_ret_table_col\"] },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"func_returns$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1\", \"symbols\": [\"func_returns$macrocall$1$ebnf$1\", \"func_returns$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"func_returns$macrocall$1\", \"symbols\": [\"func_returns$macrocall$2\", \"func_returns$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"func_returns\", \"symbols\": [\"kw_returns\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"lparen\", \"func_returns$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                kind: 'table',\n                columns: x[3],\n            }) },\n        { \"name\": \"func_ret_table_col\", \"symbols\": [\"word\", \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: asName(x[0]), type: x[1] }) },\n        { \"name\": \"do_stm$ebnf$1$subexpression$1\", \"symbols\": [\"kw_language\", \"word\"], \"postprocess\": last },\n        { \"name\": \"do_stm$ebnf$1\", \"symbols\": [\"do_stm$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"do_stm$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"do_stm\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"do_stm$ebnf$1\", (lexer_1.lexerAny.has(\"codeblock\") ? { type: \"codeblock\" } : codeblock)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'do',\n                ...x[1] && { language: asName(x[1]) },\n                code: x[2].value,\n            }) },\n        { \"name\": \"drop_func$ebnf$1$subexpression$1\", \"symbols\": [\"kw_if\", \"kw_exists\"] },\n        { \"name\": \"drop_func$ebnf$1\", \"symbols\": [\"drop_func$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"drop_func$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func$ebnf$2\", \"symbols\": [\"drop_func_overload\"], \"postprocess\": id },\n        { \"name\": \"drop_func$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func\", \"symbols\": [\"kw_drop\", \"kw_function\", \"drop_func$ebnf$1\", \"qname\", \"drop_func$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop function',\n                ...x[2] && { ifExists: true },\n                name: x[3],\n                ...x[4] && { arguments: x[4] },\n            }) },\n        { \"name\": \"drop_func_overload$macrocall$2\", \"symbols\": [\"drop_func_overload_col\"] },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"drop_func_overload$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1\", \"symbols\": [\"drop_func_overload$macrocall$1$ebnf$1\", \"drop_func_overload$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"drop_func_overload$macrocall$1\", \"symbols\": [\"drop_func_overload$macrocall$2\", \"drop_func_overload$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"drop_func_overload\", \"symbols\": [\"lparen\", \"drop_func_overload$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"drop_func_overload_col$ebnf$1\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"drop_func_overload_col$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func_overload_col\", \"symbols\": [\"drop_func_overload_col$ebnf$1\", \"qname\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: x[1],\n                ...x[0] && { name: asName(x[0]) },\n            }) },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"statement_separator\"] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"statement\"] },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [\"main$ebnf$2\", \"main$ebnf$2$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$3\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$3\", \"symbols\": [\"main$ebnf$3\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main\", \"symbols\": [\"main$ebnf$1\", \"statement\", \"main$ebnf$2\", \"main$ebnf$3\"], \"postprocess\": ([_, head, _tail]) => {\n                const tail = _tail;\n                const ret = [unwrap(head), ...tail.map((x) => unwrap(x[1]))];\n                return ret.length === 1\n                    ? ret[0]\n                    : ret;\n            } },\n        { \"name\": \"statement_separator\", \"symbols\": [(lexer_1.lexerAny.has(\"semicolon\") ? { type: \"semicolon\" } : semicolon)] },\n        { \"name\": \"statement\", \"symbols\": [\"statement_noprep\"] },\n        { \"name\": \"statement\", \"symbols\": [\"prepare\"] },\n        { \"name\": \"statement\", \"symbols\": [\"deallocate\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"selection\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createtable_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createextension_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createindex_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"simplestatements_all\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"insert_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"update_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"altertable_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"alterindex_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"delete_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_sequence_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"alter_sequence_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"drop_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createtype_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"altertype_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_view_statements\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"refresh_view_statements\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_schema\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"raise_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"comment_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"functions_statements\"] },\n        { \"name\": \"selection\", \"symbols\": [\"select_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"select_values\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"with_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"with_recursive_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"union_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection_paren\", \"symbols\": [\"lparen\", \"selection\", \"rparen\"], \"postprocess\": get(1) }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst array_lexer_1 = __webpack_require__(12);\nconst get = (i) => (x) => x[i];\nconst last = (x) => x && x[x.length - 1];\n;\n;\n;\n;\nconst grammar = {\n    Lexer: array_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"elements\"], \"postprocess\": id },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"main\", \"symbols\": [(array_lexer_1.lexerAny.has(\"start_list\") ? { type: \"start_list\" } : start_list), \"main$ebnf$1\", (array_lexer_1.lexerAny.has(\"end_list\") ? { type: \"end_list\" } : end_list)], \"postprocess\": x => x[1] || [] },\n        { \"name\": \"elements$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"elements$ebnf$1$subexpression$1\", \"symbols\": [(array_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"elt\"], \"postprocess\": last },\n        { \"name\": \"elements$ebnf$1\", \"symbols\": [\"elements$ebnf$1\", \"elements$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"elements\", \"symbols\": [\"elt\", \"elements$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"elt\", \"symbols\": [(array_lexer_1.lexerAny.has(\"value\") ? { type: \"value\" } : value)], \"postprocess\": x => x[0].value },\n        { \"name\": \"elt\", \"symbols\": [\"main\"], \"postprocess\": x => x[0] }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    valueString: {\n        match: /\"(?:\\\\[\"\\\\]|[^\\n\"\\\\])*\"/,\n        value: x => JSON.parse(x),\n        type: x => 'value',\n    },\n    valueRaw: {\n        match: /[^\\s,\\{\\}\"](?:[^,\\{\\}\"]*[^\\s,\\{\\}\"])?/,\n        type: () => 'value',\n    },\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    start_list: '{',\n    end_list: '}',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst geometric_lexer_1 = __webpack_require__(14);\nconst get = (i) => (x) => x[i];\nconst last = (x) => x && x[x.length - 1];\nfunction unwrap(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrap(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return e;\n}\n;\n;\n;\n;\nconst grammar = {\n    Lexer: geometric_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"float\"] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"number\", \"symbols\": [\"number$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"float\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)], \"postprocess\": args => parseFloat(unwrap(args)) },\n        { \"name\": \"int\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": arg => parseInt(unwrap(arg), 10) },\n        { \"name\": \"comma\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma)], \"postprocess\": id },\n        { \"name\": \"point$macrocall$2\", \"symbols\": [\"point_content\"] },\n        { \"name\": \"point$macrocall$1$subexpression$1\", \"symbols\": [\"point$macrocall$2\"] },\n        { \"name\": \"point$macrocall$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"point$macrocall$2\", (geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": get(1) },\n        { \"name\": \"point$macrocall$1\", \"symbols\": [\"point$macrocall$1$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"point\", \"symbols\": [\"point$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"point_content\", \"symbols\": [\"number\", \"comma\", \"number\"], \"postprocess\": x => ({ x: x[0], y: x[2] }) },\n        { \"name\": \"line\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lcurl\") ? { type: \"lcurl\" } : lcurl), \"number\", \"comma\", \"number\", \"comma\", \"number\", (geometric_lexer_1.lexerAny.has(\"rcurl\") ? { type: \"rcurl\" } : rcurl)], \"postprocess\": x => ({\n                a: x[1],\n                b: x[3],\n                c: x[5],\n            }) },\n        { \"name\": \"box\", \"symbols\": [\"closed_path\"], \"postprocess\": ([x], rej) => {\n                if (x.length !== 2) {\n                    return rej;\n                }\n                return x;\n            } },\n        { \"name\": \"lseg\", \"symbols\": [\"path\"], \"postprocess\": ([x], rej) => {\n                if (x.path.length !== 2) {\n                    return rej;\n                }\n                return x.path;\n            } },\n        { \"name\": \"path\", \"symbols\": [\"open_path\"], \"postprocess\": ([path]) => ({ closed: false, path }) },\n        { \"name\": \"path\", \"symbols\": [\"closed_path\"], \"postprocess\": ([path]) => ({ closed: true, path }) },\n        { \"name\": \"open_path$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket)] },\n        { \"name\": \"open_path$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"open_path$macrocall$1$macrocall$2\", \"symbols\": [\"point\"] },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"open_path$macrocall$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [\"open_path$macrocall$1$macrocall$1$ebnf$1\", \"open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"open_path$macrocall$1$macrocall$1\", \"symbols\": [\"open_path$macrocall$1$macrocall$2\", \"open_path$macrocall$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"open_path$macrocall$1\", \"symbols\": [\"open_path$macrocall$2\", \"open_path$macrocall$1$macrocall$1\", \"open_path$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"open_path\", \"symbols\": [\"open_path$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$2\", \"symbols\": [\"point\"] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"closed_path$subexpression$1$macrocall$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1$macrocall$2\", \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$2\", \"closed_path$subexpression$1$macrocall$1$macrocall$1\", \"closed_path$subexpression$1$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"closed_path$subexpression$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$5\", \"symbols\": [\"point\"] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"closed_path$subexpression$1$macrocall$5\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4\", \"symbols\": [\"closed_path$subexpression$1$macrocall$5\", \"closed_path$subexpression$1$macrocall$4$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"closed_path$subexpression$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$4\"], \"postprocess\": last },\n        { \"name\": \"closed_path\", \"symbols\": [\"closed_path$subexpression$1\"], \"postprocess\": get(0) },\n        { \"name\": \"polygon\", \"symbols\": [\"closed_path\"], \"postprocess\": get(0) },\n        { \"name\": \"circle_body\", \"symbols\": [\"point\", \"comma\", \"number\"], \"postprocess\": x => ({ c: x[0], r: x[2] }) },\n        { \"name\": \"circle$subexpression$1$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lcomp\") ? { type: \"lcomp\" } : lcomp)] },\n        { \"name\": \"circle$subexpression$1$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rcomp\") ? { type: \"rcomp\" } : rcomp)] },\n        { \"name\": \"circle$subexpression$1$macrocall$1\", \"symbols\": [\"circle$subexpression$1$macrocall$2\", \"circle_body\", \"circle$subexpression$1$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle$subexpression$1$macrocall$1\"] },\n        { \"name\": \"circle$subexpression$1$macrocall$5\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"circle$subexpression$1$macrocall$6\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"circle$subexpression$1$macrocall$4\", \"symbols\": [\"circle$subexpression$1$macrocall$5\", \"circle_body\", \"circle$subexpression$1$macrocall$6\"], \"postprocess\": get(1) },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle$subexpression$1$macrocall$4\"] },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle_body\"] },\n        { \"name\": \"circle\", \"symbols\": [\"circle$subexpression$1\"], \"postprocess\": unwrap }\n    ],\n    ParserStart: \"number\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    lcurl: '{',\n    rcurl: '}',\n    lparen: '(',\n    rparen: ')',\n    lbracket: '[',\n    rbracket: ']',\n    lcomp: '<',\n    rcomp: '>',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst interval_lexer_1 = __webpack_require__(16);\n;\n;\n;\n;\nconst grammar = {\n    Lexer: interval_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"elt\"] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"elt\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main\", \"symbols\": [\"main$ebnf$1\"], \"postprocess\": ([elts]) => {\n                // check unicity\n                const s = new Set();\n                for (const e of elts) {\n                    const k = typeof e[1] === 'number'\n                        ? e[0]\n                        : 'time';\n                    if (s.has(k)) {\n                        return 'invalid';\n                    }\n                    s.add(k);\n                }\n                return elts;\n            } },\n        { \"name\": \"elt\", \"symbols\": [\"time\"] },\n        { \"name\": \"elt\", \"symbols\": [\"num\", \"unit\"], \"postprocess\": ([[n], u]) => {\n                u = u[0].type;\n                return [u, n];\n            } },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"years\") ? { type: \"years\" } : years)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"months\") ? { type: \"months\" } : months)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"days\") ? { type: \"days\" } : days)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"hours\") ? { type: \"hours\" } : hours)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"minutes\") ? { type: \"minutes\" } : minutes)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"seconds\") ? { type: \"seconds\" } : seconds)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"milliseconds\") ? { type: \"milliseconds\" } : milliseconds)] },\n        { \"name\": \"num\", \"symbols\": [\"int\"] },\n        { \"name\": \"num\", \"symbols\": [\"float\"] },\n        { \"name\": \"uint\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([x]) => parseInt(x, 10) },\n        { \"name\": \"int$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"neg\") ? { type: \"neg\" } : neg)] },\n        { \"name\": \"int$ebnf$1\", \"symbols\": [\"int$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"int$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"int\", \"symbols\": [\"int$ebnf$1\", (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([neg, x]) => parseInt(x, 10) * (neg ? -1 : 1) },\n        { \"name\": \"float$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"neg\") ? { type: \"neg\" } : neg)] },\n        { \"name\": \"float$ebnf$1\", \"symbols\": [\"float$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"float$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"float$ebnf$2\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": id },\n        { \"name\": \"float$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"float\", \"symbols\": [\"float$ebnf$1\", \"float$ebnf$2\", (interval_lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([neg, ...v]) => parseFloat(v.map(v => v ? v.text : '0').join('')) * (neg ? -1 : 1) },\n        { \"name\": \"time$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"colon\") ? { type: \"colon\" } : colon), \"uint\"] },\n        { \"name\": \"time$ebnf$1\", \"symbols\": [\"time$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"time$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"time$ebnf$2$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)] },\n        { \"name\": \"time$ebnf$2\", \"symbols\": [\"time$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"time$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"time\", \"symbols\": [\"uint\", (interval_lexer_1.lexerAny.has(\"colon\") ? { type: \"colon\" } : colon), \"uint\", \"time$ebnf$1\", \"time$ebnf$2\"], \"postprocess\": ([a, _, b, c, d]) => {\n                c = c && c[1];\n                d = d && d[1];\n                const ret = typeof c === 'number' ? [\n                    ['hours', a],\n                    ['minutes', b],\n                    ['seconds', c],\n                ] : [\n                    ['minutes', a],\n                    ['seconds', b],\n                ];\n                if (d) {\n                    ret.push(['milliseconds', parseFloat('0.' + d) * 1000]);\n                }\n                return ret;\n            } }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    int: /\\d+/,\n    neg: '-',\n    dot: '.',\n    years: /(?:y|yrs?|years?)\\b/,\n    months: /(?:mon(?:th)?s?)\\b/,\n    days: /(?:d|days?)\\b/,\n    hours: /(?:h|hrs?|hours?)\\b/,\n    minutes: /(?:m|mins?|minutes?)\\b/,\n    seconds: /(?:s|secs?|seconds?)\\b/,\n    milliseconds: /(?:ms|milliseconds?)\\b/,\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    colon: ':',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst interval_iso_lexer_1 = __webpack_require__(18);\n;\n;\n;\n;\nconst grammar = {\n    Lexer: interval_iso_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"num\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)] },\n        { \"name\": \"num\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"long\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"short\"] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"short\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"T\") ? { type: \"T\" } : T), \"main$ebnf$2$subexpression$1$ebnf$1\"] },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [\"main$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"main\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"P\") ? { type: \"P\" } : P), \"main$ebnf$1\", \"main$ebnf$2\"], \"postprocess\": ([_, a, b], rej) => {\n                b = !b ? [] : b[1];\n                { }\n                if (!a.length && !b.length) {\n                    return rej;\n                }\n                return !a.length ? b\n                    : !b.length ? a\n                        : [...a, ...b];\n            } },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"Y\") ? { type: \"Y\" } : Y)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"M\") ? { type: \"M\" } : M)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"W\") ? { type: \"W\" } : W)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"D\") ? { type: \"D\" } : D)] },\n        { \"name\": \"long\", \"symbols\": [\"num\", \"long$subexpression$1\"], \"postprocess\": ([n, u]) => {\n                n = parseFloat(n[0].value);\n                u = u[0].type;\n                switch (u) {\n                    case 'Y':\n                        return ['years', n];\n                    case 'M':\n                        return ['months', n];\n                    case 'W':\n                        return ['days', n * 7];\n                    case 'D':\n                        return ['days', n];\n                    default:\n                        throw new Error('Unexpected unit ' + u);\n                }\n            } },\n        { \"name\": \"short$ebnf$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"T\") ? { type: \"T\" } : T)], \"postprocess\": id },\n        { \"name\": \"short$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"H\") ? { type: \"H\" } : H)] },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"M\") ? { type: \"M\" } : M)] },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"S\") ? { type: \"S\" } : S)] },\n        { \"name\": \"short\", \"symbols\": [\"short$ebnf$1\", \"num\", \"short$subexpression$1\"], \"postprocess\": ([_, n, u]) => {\n                n = parseFloat(n[0].value);\n                u = u[0].type;\n                switch (u) {\n                    case 'H':\n                        return ['hours', n];\n                    case 'M':\n                        return ['minutes', n];\n                    case 'S':\n                        return ['seconds', n];\n                    default:\n                        throw new Error('Unexpected unit ' + u);\n                }\n            } }\n    ],\n    ParserStart: \"num\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    P: 'P',\n    Y: 'Y',\n    M: 'M',\n    W: 'W',\n    D: 'D',\n    H: 'H',\n    S: 'S',\n    T: 'T',\n});\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSql = void 0;\nconst ast_mapper_1 = __webpack_require__(2);\nconst ast_visitor_1 = __webpack_require__(5);\nconst utils_1 = __webpack_require__(6);\nconst pg_escape_1 = __webpack_require__(20);\nconst keywords_1 = __webpack_require__(3);\nconst kwSet = new Set(keywords_1.sqlKeywords.map(x => x.toLowerCase()));\nlet ret = [];\nfunction name(nm) {\n    return ident(nm.name);\n}\nfunction ident(nm, forceDoubleQuote) {\n    if (!forceDoubleQuote) {\n        // only add quotes if has upper cases, or if it is a keyword.\n        const low = nm.toLowerCase();\n        if (low === nm && !kwSet.has(low) && /^[a-z][a-z0-9_]*$/.test(low)) {\n            return nm;\n        }\n    }\n    return '\"' + nm + '\"';\n}\nfunction list(elems, act, addParen) {\n    if (addParen) {\n        ret.push('(');\n    }\n    let first = true;\n    for (const e of elems) {\n        if (!first) {\n            ret.push(', ');\n        }\n        first = false;\n        act(e);\n    }\n    if (addParen) {\n        ret.push(')');\n    }\n}\nfunction addConstraint(c, m) {\n    switch (c.type) {\n        case 'foreign key':\n            ret.push(' foreign key (', ...c.localColumns.map(name).join(', '), ')');\n        // 👈 There is no \"break\" here... that's not an error, we want to fall throught the 'reference' case\n        case 'reference':\n            ret.push(' REFERENCES ');\n            m.tableRef(c.foreignTable);\n            ret.push('(', ...c.foreignColumns.map(name).join(', '), ') ');\n            if (c.match) {\n                ret.push(' MATCH ', c.match.toUpperCase());\n            }\n            if (c.onDelete) {\n                ret.push(' ON DELETE ', c.onDelete);\n            }\n            if (c.onUpdate) {\n                ret.push(' ON UPDATE ', c.onUpdate);\n            }\n            break;\n        case 'primary key':\n        case 'unique':\n            ret.push(' ', c.type, ' ');\n            if ('columns' in c) {\n                ret.push('(', ...c.columns.map(name).join(', '), ') ');\n            }\n            break;\n        case 'check':\n            ret.push(' check ');\n            m.expr(c.expr);\n            break;\n        case 'not null':\n        case 'null':\n            ret.push(' ', c.type, ' ');\n            break;\n        case 'default':\n            ret.push(' default ');\n            m.expr(c.default);\n            break;\n        case 'add generated':\n            ret.push(' GENERATED ');\n            visitGenerated(m, c);\n            break;\n        default:\n            throw utils_1.NotSupported.never(c);\n    }\n    ret.push(' ');\n}\nfunction visitQualifiedName(cs, forceDoubleQuote) {\n    if (cs.schema) {\n        ret.push(ident(cs.schema), '.');\n    }\n    ret.push(ident(cs.name, forceDoubleQuote), ' ');\n}\nfunction visitQualifiedNameAliased(cs) {\n    visitQualifiedName(cs);\n    if (cs.alias) {\n        ret.push(' AS ', ident(cs.alias), ' ');\n    }\n}\nfunction visitOrderBy(m, orderBy) {\n    ret.push(' ORDER BY ');\n    list(orderBy, e => {\n        m.expr(e.by);\n        if (e.order) {\n            ret.push(' ', e.order, ' ');\n        }\n        if (e.nulls) {\n            ret.push(' NULLS ', e.nulls, ' ');\n        }\n    }, false);\n}\nfunction visitSetVal(set) {\n    switch (set.type) {\n        case 'default':\n            ret.push('DEFAULT ');\n            break;\n        case 'identifier':\n            ret.push(set.name);\n            break;\n        case 'list':\n            let first = true;\n            for (const v of set.values) {\n                if (!first) {\n                    ret.push(', ');\n                }\n                first = false;\n                visitSetVal(v);\n            }\n            break;\n        case 'value':\n            ret.push(typeof set.value === 'number' ? set.value.toString() : (0, pg_escape_1.literal)(set.value));\n            break;\n        default:\n            throw utils_1.NotSupported.never(set);\n    }\n}\nfunction visitGenerated(m, alter) {\n    if (alter.always) {\n        ret.push(alter.always.toUpperCase(), ' ');\n    }\n    ret.push('AS IDENTITY ');\n    if (alter.sequence) {\n        ret.push('(');\n        if (alter.sequence.name) {\n            ret.push('SEQUENCE NAME ');\n            visitQualifiedName(alter.sequence.name);\n            ret.push(' ');\n        }\n        visitSeqOpts(m, alter.sequence);\n        ret.push(') ');\n    }\n}\nfunction visitSeqOpts(m, cs) {\n    if (cs.as) {\n        ret.push('AS ');\n        m.dataType(cs.as);\n        ret.push(' ');\n    }\n    if (typeof cs.incrementBy === 'number') {\n        ret.push('INCREMENT BY ', cs.incrementBy.toString(), ' ');\n    }\n    if (cs.minValue === 'no minvalue') {\n        ret.push('NO MINVALUE ');\n    }\n    if (typeof cs.minValue === 'number') {\n        ret.push('MINVALUE ', cs.minValue.toString(), ' ');\n    }\n    if (cs.maxValue === 'no maxvalue') {\n        ret.push('NO MAXVALUE ');\n    }\n    if (typeof cs.maxValue === 'number') {\n        ret.push('MAXVALUE ', cs.maxValue.toString(), ' ');\n    }\n    if (typeof cs.startWith === 'number') {\n        ret.push('START WITH ', cs.startWith.toString(), ' ');\n    }\n    if (typeof cs.cache === 'number') {\n        ret.push('CACHE ', cs.cache.toString(), ' ');\n    }\n    if (cs.cycle) {\n        ret.push(cs.cycle, ' ');\n    }\n    if (cs.ownedBy === 'none') {\n        ret.push('OWNED BY NONE ');\n    }\n    else if (cs.ownedBy) {\n        ret.push('OWNED BY ');\n        visitQColumn(cs.ownedBy);\n    }\n    if ('restart' in cs) {\n        if (cs.restart === true) {\n            ret.push('RESTART ');\n        }\n        else if (cs.restart) {\n            ret.push('RESTART WITH ', cs.restart.toString(), ' ');\n        }\n    }\n}\nfunction visitQColumn(col) {\n    if (col.schema) {\n        ret.push(ident(col.schema), '.');\n    }\n    ret.push(ident(col.table), '.', ident(col.column), ' ');\n}\nfunction join(m, j, tbl) {\n    if (!j) {\n        tbl();\n        return;\n    }\n    ret.push(j.type, ' ');\n    tbl();\n    if (j.on) {\n        ret.push('ON ');\n        m.expr(j.on);\n    }\n    if (j.using) {\n        ret.push('USING (');\n        list(j.using, x => ret.push(name(x)), false);\n        ret.push(') ');\n    }\n    ret.push(' ');\n}\nfunction visitOp(v) {\n    if (v.opSchema) {\n        ret.push(' operator(', ident(v.opSchema), '.', v.op, ') ');\n    }\n    else {\n        ret.push(' ', v.op, ' ');\n    }\n}\nconst visitor = (0, ast_visitor_1.astVisitor)(m => ({\n    addColumn: (...args) => {\n        ret.push(' ADD COLUMN ');\n        if (args[0].ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        m.super().addColumn(...args);\n    },\n    createExtension: e => {\n        ret.push('CREATE EXTENSION ');\n        if (e.ifNotExists) {\n            ret.push(' IF NOT EXISTS ');\n        }\n        ret.push(name(e.extension));\n        if (!e.from && !e.version && !e.schema) {\n            return;\n        }\n        ret.push(' WITH');\n        if (e.schema) {\n            ret.push(' SCHEMA ', name(e.schema));\n        }\n        if (e.version) {\n            ret.push(' VERSION ', (0, pg_escape_1.literal)(e.version.value));\n        }\n        if (e.from) {\n            ret.push(' FROM ', (0, pg_escape_1.literal)(e.from.value));\n        }\n    },\n    tablespace: t => {\n        ret.push('TABLESPACE ', name(t.tablespace));\n    },\n    addConstraint: c => {\n        ret.push(' ADD ');\n        const cname = c.constraint.constraintName;\n        if (cname) {\n            ret.push(' CONSTRAINT ', name(cname), ' ');\n        }\n        addConstraint(c.constraint, m);\n    },\n    alterColumn: (c, t) => {\n        ret.push(' ALTER COLUMN ', name(c.column), ' ');\n        m.super().alterColumn(c, t);\n    },\n    setColumnDefault: (a, t, c) => {\n        ret.push(' SET DEFAULT ');\n        m.expr(a.default);\n        if (a.updateExisting) {\n            throw new Error('Not implemented: updateExisting on set column default');\n        }\n    },\n    createEnum: t => {\n        ret.push('CREATE TYPE ');\n        visitQualifiedName(t.name);\n        ret.push(' AS ENUM ');\n        list(t.values, x => ret.push((0, pg_escape_1.literal)(x.value)), true);\n        ret.push(' ');\n    },\n    alterEnum: t => {\n        ret.push('ALTER TYPE ');\n        visitQualifiedName(t.name);\n        if (t.change.type === 'rename') {\n            ret.push(' RENAME TO ');\n            visitQualifiedName(t.change.to);\n        }\n        else {\n            ret.push(' ADD VALUE ', (0, pg_escape_1.literal)(t.change.add.value));\n        }\n    },\n    createCompositeType: c => {\n        ret.push('CREATE TYPE ');\n        visitQualifiedName(c.name);\n        ret.push(' AS ');\n        list(c.attributes, x => {\n            ret.push(name(x.name), ' ');\n            m.dataType(x.dataType);\n            if (x.collate) {\n                ret.push('COLLATE ');\n                visitQualifiedName(x.collate);\n            }\n        }, true);\n        ret.push(' ');\n    },\n    setTableOwner: o => {\n        ret.push(' OWNER TO ', name(o.to));\n    },\n    alterColumnSimple: c => ret.push(c.type),\n    alterColumnAddGenerated: (alter) => {\n        ret.push(' ADD GENERATED ');\n        visitGenerated(m, alter);\n    },\n    setColumnType: t => {\n        ret.push(' SET DATA TYPE ');\n        m.dataType(t.dataType);\n        ret.push(' ');\n    },\n    alterTable: t => {\n        ret.push('ALTER TABLE ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        if (t.only) {\n            ret.push(' ONLY ');\n        }\n        visitQualifiedNameAliased(t.table);\n        list(t.changes, change => m.tableAlteration(change, t.table), false);\n    },\n    alterIndex: t => {\n        ret.push('ALTER INDEX ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        visitQualifiedNameAliased(t.index);\n        switch (t.change.type) {\n            case 'rename':\n                ret.push(' RENAME TO ');\n                visitQualifiedName(t.change.to);\n                ret.push(' ');\n                break;\n            case 'set tablespace':\n                ret.push(' SET TABLESPACE ');\n                visitQualifiedName(t.change.tablespace);\n                ret.push(' ');\n                break;\n            default:\n                throw utils_1.NotSupported.never(t.change, 'Alter index type not supported: ');\n        }\n    },\n    tableAlteration: (change, table) => {\n        switch (change.type) {\n            case 'add column':\n                return m.addColumn(change, table);\n            case 'add constraint':\n                return m.addConstraint(change, table);\n            case 'alter column':\n                return m.alterColumn(change, table);\n            case 'rename':\n                return m.renameTable(change, table);\n            case 'rename column':\n                return m.renameColumn(change, table);\n            case 'rename constraint':\n                return m.renameConstraint(change, table);\n            case 'drop column':\n                return m.dropColumn(change, table);\n            case 'drop constraint':\n                return m.dropConstraint(change, table);\n            case 'owner':\n                return m.setTableOwner(change, table);\n            default:\n                throw utils_1.NotSupported.never(change);\n        }\n    },\n    array: v => {\n        ret.push(v.type === 'array' ? 'ARRAY[' : '(');\n        list(v.expressions, e => m.expr(e), false);\n        ret.push(v.type === 'array' ? ']' : ')');\n    },\n    arrayIndex: v => {\n        m.expr(v.array);\n        ret.push('[');\n        m.expr(v.index);\n        ret.push('] ');\n    },\n    expr: e => {\n        if (e.type === 'ref') {\n            m.ref(e);\n            return;\n        }\n        // lists can become incorrect with an additional set of parentheses\n        if (e.type === 'list') {\n            m.super().expr(e);\n            return;\n        }\n        // this forces to respect precedence\n        // (however, it will introduce lots of unecessary parenthesis)\n        ret.push('(');\n        m.super().expr(e);\n        ret.push(')');\n    },\n    callOverlay: o => {\n        ret.push('OVERLAY(');\n        m.expr(o.value);\n        ret.push(' PLACING ');\n        m.expr(o.placing);\n        ret.push(' FROM ');\n        m.expr(o.from);\n        if (o.for) {\n            ret.push(' FOR ');\n            m.expr(o.for);\n        }\n        ret.push(')');\n    },\n    callSubstring: s => {\n        ret.push('SUBSTRING(');\n        m.expr(s.value);\n        if (s.from) {\n            ret.push(' FROM ');\n            m.expr(s.from);\n        }\n        if (s.for) {\n            ret.push(' FOR ');\n            m.expr(s.for);\n        }\n        ret.push(')');\n    },\n    binary: v => {\n        m.expr(v.left);\n        visitOp(v);\n        m.expr(v.right);\n    },\n    call: v => {\n        visitQualifiedName(v.function);\n        ret.push('(');\n        if (v.distinct) {\n            ret.push(v.distinct, ' ');\n        }\n        list(v.args, e => m.expr(e), false);\n        if (v.orderBy) {\n            visitOrderBy(m, v.orderBy);\n        }\n        ret.push(') ');\n        if (v.filter) {\n            ret.push('filter (where ');\n            m.expr(v.filter);\n            ret.push(') ');\n        }\n        if (v.withinGroup) {\n            ret.push('WITHIN GROUP (');\n            visitOrderBy(m, [v.withinGroup]);\n            ret.push(') ');\n        }\n        if (v.over) {\n            ret.push('over (');\n            if (v.over.partitionBy) {\n                ret.push('PARTITION BY ');\n                list(v.over.partitionBy, x => m.expr(x), false);\n                ret.push(' ');\n            }\n            if (v.over.orderBy) {\n                visitOrderBy(m, v.over.orderBy);\n                ret.push(' ');\n            }\n            ret.push(') ');\n        }\n    },\n    case: c => {\n        ret.push('CASE ');\n        if (c.value) {\n            m.expr(c.value);\n        }\n        for (const e of c.whens) {\n            ret.push(' WHEN ');\n            m.expr(e.when);\n            ret.push(' THEN ');\n            m.expr(e.value);\n        }\n        if (c.else) {\n            ret.push(' ELSE ');\n            m.expr(c.else);\n        }\n        ret.push(' END ');\n    },\n    cast: c => {\n        m.expr(c.operand);\n        ret.push('::');\n        m.dataType(c.to);\n    },\n    constant: c => {\n        switch (c.type) {\n            case 'boolean':\n                ret.push(c.value ? 'true' : 'false');\n                break;\n            case 'integer':\n                ret.push(c.value.toString(10));\n                break;\n            case 'numeric':\n                ret.push(c.value.toString());\n                if (Number.isInteger(c.value)) {\n                    ret.push('.');\n                }\n                break;\n            case 'null':\n                ret.push('null');\n                break;\n            case 'constant':\n                break;\n            case 'string':\n                ret.push((0, pg_escape_1.literal)(c.value));\n                break;\n            default:\n                throw utils_1.NotSupported.never(c);\n        }\n    },\n    valueKeyword: v => {\n        ret.push(v.keyword, ' ');\n    },\n    comment: c => {\n        ret.push('COMMENT ON ', c.on.type.toUpperCase(), ' ');\n        switch (c.on.type) {\n            case 'column':\n                visitQColumn(c.on.column);\n                break;\n            default:\n                visitQualifiedName(c.on.name);\n                break;\n        }\n        ret.push(' IS ', (0, pg_escape_1.literal)(c.comment), ' ');\n    },\n    extract: v => {\n        ret.push('EXTRACT (', v.field.name.toUpperCase(), ' FROM ');\n        m.expr(v.from);\n        ret.push(') ');\n    },\n    createColumn: c => {\n        var _a;\n        ret.push(name(c.name), ' ');\n        m.dataType(c.dataType);\n        ret.push(' ');\n        if (c.collate) {\n            ret.push('COLLATE ');\n            visitQualifiedName(c.collate);\n        }\n        for (const cst of (_a = c.constraints) !== null && _a !== void 0 ? _a : []) {\n            m.constraint(cst);\n        }\n    },\n    begin: beg => {\n        ret.push('BEGIN ');\n        if (beg.isolationLevel) {\n            ret.push('ISOLATION LEVEL ', beg.isolationLevel.toUpperCase(), ' ');\n        }\n        if (beg.writeable) {\n            ret.push(beg.writeable.toUpperCase(), ' ');\n        }\n        if (typeof beg.deferrable === 'boolean') {\n            if (!beg.deferrable) {\n                ret.push('NOT ');\n            }\n            ret.push('DEFERRABLE ');\n        }\n    },\n    alterSequence: cs => {\n        ret.push('ALTER SEQUENCE ');\n        if (cs.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        visitQualifiedName(cs.name);\n        switch (cs.change.type) {\n            case 'set options':\n                visitSeqOpts(m, cs.change);\n                break;\n            case 'rename':\n                ret.push('RENAME TO ', name(cs.change.newName), ' ');\n                break;\n            case 'set schema':\n                ret.push('SET SCHEMA ', name(cs.change.newSchema), ' ');\n                break;\n            case 'owner to':\n                const own = cs.change.owner;\n                ret.push('OWNER TO ', name(cs.change.owner), ' ');\n                break;\n            default:\n                throw utils_1.NotSupported.never(cs.change);\n        }\n    },\n    createSequence: cs => {\n        ret.push('CREATE ');\n        if (cs.temp) {\n            ret.push('TEMPORARY ');\n        }\n        ret.push('SEQUENCE ');\n        if (cs.ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        visitQualifiedName(cs.name);\n        visitSeqOpts(m, cs.options);\n    },\n    drop: val => {\n        ret.push(val.type.toUpperCase(), ' ');\n        if (val.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        if (val.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        list(val.names, x => m.tableRef(x), false);\n        if (val.cascade) {\n            ret.push(val.cascade.toUpperCase(), ' ');\n        }\n    },\n    constraint: cst => {\n        if (cst.constraintName) {\n            ret.push(' CONSTRAINT ', name(cst.constraintName), ' ');\n        }\n        addConstraint(cst, m);\n    },\n    do: d => {\n        ret.push('DO');\n        if (d.language) {\n            ret.push(' LANGUAGE ', d.language.name);\n        }\n        ret.push(' $$', d.code, '$$');\n    },\n    createFunction: c => {\n        var _a;\n        ret.push(c.orReplace ? 'CREATE OR REPLACE FUNCTION ' : 'CREATE FUNCTION ');\n        visitQualifiedName(c.name);\n        // args\n        list(c.arguments, a => {\n            if (a.mode) {\n                ret.push(a.mode, ' ');\n            }\n            if (a.name) {\n                ret.push(name(a.name), ' ');\n            }\n            m.dataType(a.type);\n            if (a.default) {\n                ret.push(\" = \");\n                m.expr(a.default);\n            }\n        }, true);\n        // ret type\n        if (c.returns) {\n            switch (c.returns.kind) {\n                case 'table':\n                    ret.push(' RETURNS TABLE ');\n                    list(c.returns.columns, t => {\n                        ret.push(name(t.name), ' ');\n                        m.dataType(t.type);\n                    }, true);\n                    break;\n                case undefined:\n                case null:\n                case 'array':\n                    ret.push(' RETURNS ');\n                    m.dataType(c.returns);\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(c.returns);\n            }\n        }\n        ret.push(' AS $$', (_a = c.code) !== null && _a !== void 0 ? _a : '', '$$');\n        // function settings\n        if (c.language) {\n            ret.push('LANGUAGE ', c.language.name, ' ');\n        }\n        if (c.purity) {\n            ret.push(c.purity.toUpperCase(), ' ');\n        }\n        if (typeof c.leakproof === 'boolean') {\n            ret.push(c.leakproof ? 'LEAKPROOF ' : 'NOT LEAKPROOF ');\n        }\n        switch (c.onNullInput) {\n            case 'call':\n                ret.push('CALLED ON NULL INPUT ');\n                break;\n            case 'null':\n                ret.push('RETURNS NULL ON NULL INPUT ');\n                break;\n            case 'strict':\n                ret.push('STRICT ');\n                break;\n            case null:\n            case undefined:\n                break;\n            default:\n                throw utils_1.NotSupported.never(c.onNullInput);\n        }\n    },\n    dropFunction: d => {\n        ret.push('DROP FUNCTION ');\n        if (d.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        visitQualifiedName(d.name);\n        if (d.arguments) {\n            list(d.arguments, a => {\n                if (a.name) {\n                    visitQualifiedName(a.name);\n                    ret.push(' ');\n                }\n                m.dataType(a.type);\n            }, true);\n        }\n        ret.push(' ');\n    },\n    with: w => {\n        ret.push('WITH ');\n        list(w.bind, b => {\n            ret.push(name(b.alias), ' AS (');\n            m.statement(b.statement);\n            ret.push(') ');\n        }, false);\n        m.statement(w.in);\n    },\n    withRecursive: val => {\n        ret.push('WITH RECURSIVE ', name(val.alias), '(', ...val.columnNames.map(name).join(', '), ') AS (');\n        m.union(val.bind);\n        ret.push(') ');\n        m.statement(val.in);\n    },\n    setGlobal: g => {\n        ret.push('SET ');\n        if (g.scope) {\n            ret.push(g.scope.toUpperCase() + ' ');\n        }\n        ret.push(name(g.variable), ' = ');\n        visitSetVal(g.set);\n    },\n    setTimezone: g => {\n        ret.push('SET TIME ZONE ');\n        switch (g.to.type) {\n            case 'default':\n            case 'local':\n                ret.push(g.to.type.toUpperCase(), ' ');\n                break;\n            case 'value':\n                ret.push(typeof g.to.value === 'string'\n                    ? (0, pg_escape_1.literal)(g.to.value)\n                    : g.to.value.toString(10));\n                break;\n            case 'interval':\n                ret.push('INTERVAL ', (0, pg_escape_1.literal)(g.to.value), ' HOUR TO MINUTE');\n                break;\n            default:\n                throw utils_1.NotSupported.never(g.to);\n        }\n    },\n    setNames: g => {\n        ret.push('SET NAMES ');\n        switch (g.to.type) {\n            case 'value':\n                ret.push((0, pg_escape_1.literal)(g.to.value));\n                break;\n        }\n    },\n    dataType: d => {\n        var _a, _b;\n        if ((d === null || d === void 0 ? void 0 : d.kind) === 'array') {\n            m.dataType(d.arrayOf);\n            ret.push('[]');\n            return;\n        }\n        if (!(d === null || d === void 0 ? void 0 : d.name)) {\n            ret.push('unkown');\n            return;\n        }\n        let appendConfig = true;\n        if (d.schema) {\n            visitQualifiedName(d, d.doubleQuoted);\n        }\n        else {\n            // see https://www.postgresql.org/docs/13/datatype.html\n            // & issue https://github.com/oguimbal/pgsql-ast-parser/issues/38\n            if (d.doubleQuoted) {\n                visitQualifiedName(d, true);\n            }\n            else {\n                switch (d.name) {\n                    case 'double precision':\n                    case 'character varying':\n                    case 'bit varying':\n                        ret.push(d.name, ' ');\n                        break;\n                    case 'time without time zone':\n                    case 'timestamp without time zone':\n                    case 'time with time zone':\n                    case 'timestamp with time zone':\n                        const parts = d.name.split(' ');\n                        ret.push(parts.shift());\n                        if ((_a = d.config) === null || _a === void 0 ? void 0 : _a.length) {\n                            list(d.config, v => ret.push(v.toString(10)), true);\n                        }\n                        ret.push(' ');\n                        ret.push(parts.join(' '), ' ');\n                        appendConfig = false;\n                        break;\n                    default:\n                        visitQualifiedName(d);\n                        break;\n                }\n            }\n        }\n        if (appendConfig && ((_b = d.config) === null || _b === void 0 ? void 0 : _b.length)) {\n            list(d.config, v => ret.push(v.toString(10)), true);\n        }\n    },\n    createIndex: c => {\n        ret.push(c.unique ? 'CREATE UNIQUE INDEX ' : 'CREATE INDEX ');\n        if (c.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        if (c.ifNotExists) {\n            ret.push(' IF NOT EXISTS ');\n        }\n        if (c.indexName) {\n            ret.push(name(c.indexName), ' ');\n        }\n        ret.push('ON ');\n        m.tableRef(c.table);\n        if (c.using) {\n            ret.push('USING ', name(c.using), ' ');\n        }\n        list(c.expressions, e => {\n            m.expr(e.expression);\n            ret.push(' ');\n            if (e.collate) {\n                ret.push('COLLATE ');\n                visitQualifiedName(e.collate);\n            }\n            if (e.opclass) {\n                visitQualifiedName(e.opclass);\n            }\n            if (e.order) {\n                ret.push(e.order, ' ');\n            }\n            if (e.nulls) {\n                ret.push('nulls ', e.nulls, ' ');\n            }\n        }, true);\n        if (c.with) {\n            ret.push('WITH ');\n            list(c.with, w => {\n                ret.push(w.parameter, ' = ', (0, pg_escape_1.literal)(w.value));\n            }, true);\n        }\n        if (c.tablespace) {\n            ret.push('TABLESPACE ', ident(c.tablespace));\n        }\n        if (c.where) {\n            ret.push(' WHERE ');\n            m.expr(c.where);\n        }\n        ret.push(' ');\n    },\n    createTable: t => {\n        var _a;\n        ret.push('CREATE ');\n        if (t.locality) {\n            ret.push(t.locality.toUpperCase(), ' ');\n        }\n        if (t.temporary) {\n            ret.push('TEMPORARY ');\n        }\n        if (t.unlogged) {\n            ret.push('UNLOGGED ');\n        }\n        ret.push(t.ifNotExists ? 'TABLE IF NOT EXISTS ' : 'TABLE ');\n        m.tableRef(t.name);\n        ret.push('(');\n        list(t.columns, c => {\n            switch (c.kind) {\n                case 'column':\n                    return m.createColumn(c);\n                case 'like table':\n                    return m.likeTable(c);\n                default:\n                    throw utils_1.NotSupported.never(c);\n            }\n        }, false);\n        if (t.constraints) {\n            ret.push(', ');\n            list(t.constraints, c => {\n                const cname = c.constraintName;\n                if (cname) {\n                    ret.push('CONSTRAINT ', name(cname), ' ');\n                }\n                addConstraint(c, m);\n            }, false);\n        }\n        ret.push(') ');\n        if ((_a = t.inherits) === null || _a === void 0 ? void 0 : _a.length) {\n            ret.push(' INHERITS ');\n            list(t.inherits, i => visitQualifiedName(i), true);\n        }\n    },\n    likeTable: l => {\n        ret.push(' LIKE ');\n        m.tableRef(l.like);\n        ret.push(' ');\n        for (const { verb, option } of l.options) {\n            ret.push(verb.toUpperCase(), ' ', option.toUpperCase(), ' ');\n        }\n    },\n    createSchema: s => {\n        ret.push(s.ifNotExists ? 'CREATE SCHEMA IF NOT EXISTS ' : 'CREATE SCHEMA ');\n        ret.push(name(s.name));\n    },\n    truncateTable: t => {\n        ret.push('TRUNCATE TABLE ');\n        let first = true;\n        for (const tbl of t.tables) {\n            if (!first) {\n                ret.push(', ');\n            }\n            first = false;\n            m.tableRef(tbl);\n        }\n        if (t.identity) {\n            switch (t.identity) {\n                case 'restart':\n                    ret.push(' RESTART IDENTITY ');\n                    break;\n                case 'continue':\n                    ret.push(' CONTINUE IDENTITY ');\n                    break;\n            }\n        }\n        if (t.cascade) {\n            ret.push(' ', t.cascade, ' ');\n        }\n    },\n    delete: t => {\n        ret.push('DELETE FROM ');\n        m.tableRef(t.from);\n        if (t.where) {\n            ret.push(' WHERE ');\n            m.expr(t.where);\n        }\n        if (t.returning) {\n            ret.push(' RETURNING ');\n            list(t.returning, r => m.selectionColumn(r), false);\n        }\n        ret.push(' ');\n    },\n    dropColumn: t => {\n        ret.push(' DROP COLUMN ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        ret.push(name(t.column));\n        if (t.behaviour) {\n            ret.push(' ', t.behaviour);\n        }\n        ret.push(' ');\n    },\n    dropConstraint: t => {\n        ret.push(' DROP CONSTRAINT ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        ret.push(name(t.constraint));\n        if (t.behaviour) {\n            ret.push(' ', t.behaviour.toUpperCase(), ' ');\n        }\n    },\n    from: t => m.super().from(t),\n    fromCall: s => {\n        join(m, s.join, () => {\n            var _a, _b;\n            if (s.lateral) {\n                ret.push(\"LATERAL \");\n            }\n            m.call(s);\n            if (s.withOrdinality) {\n                ret.push(' WITH ORDINALITY');\n            }\n            if (s.alias) {\n                ret.push(' AS ', name(s.alias), ' ');\n                const len = (_b = (_a = s.alias.columns) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n                if (len > 0) {\n                    ret.push('(');\n                    for (let ix = 0; ix < len; ++ix) {\n                        if (ix !== 0) {\n                            ret.push(', ');\n                        }\n                        ret.push(name(s.alias.columns[ix]));\n                    }\n                    ret.push(')');\n                }\n            }\n        });\n        ret.push(' ');\n    },\n    fromStatement: s => {\n        // todo: use 's.db' if defined\n        join(m, s.join, () => {\n            if (s.lateral) {\n                ret.push(\"LATERAL \");\n            }\n            ret.push('(');\n            m.select(s.statement);\n            ret.push(') ');\n            if (s.alias) {\n                ret.push(' AS ', ident(s.alias));\n                if (s.columnNames) {\n                    list(s.columnNames, c => ret.push(name(c)), true);\n                }\n                ret.push(' ');\n            }\n        });\n        ret.push(' ');\n    },\n    values: s => {\n        ret.push('VALUES ');\n        list(s.values, vlist => {\n            list(vlist, e => {\n                m.expr(e);\n            }, true);\n        }, false);\n    },\n    fromTable: s => {\n        join(m, s.join, () => {\n            m.tableRef(s.name);\n            if (s.name.columnNames) {\n                if (!s.name.alias) {\n                    throw new Error('Cannot specify aliased column names without an alias');\n                }\n                list(s.name.columnNames, c => ret.push(name(c)), true);\n            }\n        });\n    },\n    join: j => {\n        throw new Error('Should not happen 💀');\n    },\n    insert: i => {\n        ret.push('INSERT INTO ');\n        m.tableRef(i.into);\n        if (i.columns) {\n            ret.push('(', i.columns.map(name).join(', '), ')');\n        }\n        ret.push(' ');\n        if (i.overriding) {\n            ret.push('OVERRIDING ', i.overriding.toUpperCase(), ' VALUE ');\n        }\n        m.select(i.insert);\n        ret.push(' ');\n        if (i.onConflict) {\n            ret.push('ON CONFLICT ');\n            const on = i.onConflict.on;\n            switch (on === null || on === void 0 ? void 0 : on.type) {\n                case 'on expr':\n                    list(on.exprs, e => m.expr(e), true);\n                    break;\n                case 'on constraint':\n                    ret.push('ON CONSTRAINT ');\n                    visitQualifiedName(on.constraint);\n                case null:\n                case undefined:\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(on);\n            }\n            if (i.onConflict.do === 'do nothing') {\n                ret.push(' DO NOTHING');\n            }\n            else {\n                ret.push(' DO UPDATE SET ');\n                list(i.onConflict.do.sets, s => m.set(s), false);\n                if (i.onConflict.where) {\n                    ret.push(' WHERE ');\n                    m.expr(i.onConflict.where);\n                }\n            }\n            ret.push(' ');\n        }\n        if (i.returning) {\n            ret.push(' RETURNING ');\n            list(i.returning, r => m.selectionColumn(r), false);\n        }\n    },\n    raise: r => {\n        var _a, _b;\n        ret.push('RAISE ');\n        if (r.level) {\n            ret.push(r.level.toUpperCase(), ' ');\n        }\n        ret.push((0, pg_escape_1.literal)(r.format), ' ');\n        if ((_a = r.formatExprs) === null || _a === void 0 ? void 0 : _a.length) {\n            ret.push(', ');\n            list(r.formatExprs, e => m.expr(e), false);\n        }\n        if ((_b = r.using) === null || _b === void 0 ? void 0 : _b.length) {\n            ret.push(' USING ');\n            list(r.using, ({ type, value }) => {\n                ret.push(type.toUpperCase(), '=');\n                m.expr(value);\n            }, false);\n        }\n        ret.push(' ');\n    },\n    default: () => {\n        ret.push(' DEFAULT ');\n    },\n    member: e => {\n        m.expr(e.operand);\n        ret.push(e.op);\n        ret.push(typeof e.member === 'number'\n            ? e.member.toString(10)\n            : (0, pg_escape_1.literal)(e.member));\n    },\n    ref: r => {\n        if (r.table) {\n            visitQualifiedName(r.table);\n            ret.push('.');\n        }\n        ret.push(r.name === '*' ? '*' : ident(r.name));\n    },\n    parameter: p => {\n        ret.push(p.name);\n    },\n    renameColumn: r => {\n        ret.push(' RENAME COLUMN ', name(r.column), ' TO ', name(r.to));\n    },\n    renameConstraint: r => {\n        ret.push(' RENAME CONSTRAINT ', name(r.constraint), ' TO ', name(r.to));\n    },\n    renameTable: r => {\n        ret.push(' RENAME TO ', name(r.to));\n    },\n    createView: c => {\n        ret.push('CREATE ');\n        if (c.orReplace) {\n            ret.push('OR REPLACE ');\n        }\n        if (c.temp) {\n            ret.push('TEMP ');\n        }\n        if (c.recursive) {\n            ret.push('RECURSIVE ');\n        }\n        ret.push('VIEW ');\n        m.tableRef(c.name);\n        if (c.columnNames) {\n            list(c.columnNames, c => ret.push(name(c)), true);\n        }\n        const opts = c.parameters && Object.entries(c.parameters);\n        if (opts === null || opts === void 0 ? void 0 : opts.length) {\n            ret.push(' WITH ');\n            list(opts, ([k, v]) => ret.push(k, '=', v), false);\n        }\n        ret.push(' AS ');\n        m.select(c.query);\n        if (c.checkOption) {\n            ret.push(' WITH ', c.checkOption.toUpperCase(), ' CHECK OPTION');\n        }\n    },\n    createMaterializedView: c => {\n        ret.push('CREATE MATERIALIZED VIEW ');\n        if (c.ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        m.tableRef(c.name);\n        if (c.columnNames) {\n            list(c.columnNames, c => ret.push(name(c)), true);\n        }\n        const opts = c.parameters && Object.entries(c.parameters);\n        if (opts === null || opts === void 0 ? void 0 : opts.length) {\n            ret.push(' WITH ');\n            list(opts, ([k, v]) => ret.push(k, '=', v), false);\n        }\n        if (c.tablespace) {\n            ret.push(' TABLESPACE ', name(c.tablespace));\n        }\n        ret.push(' AS ');\n        m.select(c.query);\n        if (typeof c.withData === 'boolean') {\n            ret.push(c.withData ? ' WITH DATA' : ' WITH NO DATA');\n        }\n    },\n    refreshMaterializedView: val => {\n        ret.push('REFRESH MATERIALIZED VIEW ');\n        if (val.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        m.tableRef(val.name);\n        if (typeof val.withData === 'boolean') {\n            ret.push(val.withData ? ' WITH DATA' : ' WITH NO DATA');\n        }\n    },\n    select: s => m.super().select(s),\n    selection: s => {\n        ret.push('SELECT ');\n        if (s.distinct) {\n            if (typeof s.distinct === 'string') {\n                ret.push(s.distinct.toUpperCase());\n            }\n            else {\n                ret.push(' DISTINCT ON ');\n                list(s.distinct, v => m.expr(v), true);\n            }\n            ret.push(' ');\n        }\n        if (s.columns) {\n            list(s.columns, c => m.selectionColumn(c), false);\n        }\n        ret.push(' ');\n        if (s.from) {\n            ret.push('FROM ');\n            const tblCnt = s.from.length;\n            for (let i = 0; i < tblCnt; i++) {\n                const f = s.from[i];\n                if (i > 0 && !f.join) {\n                    // implicit cross join (https://www.postgresql.org/docs/9.5/sql-select.html#SQL-FROM)\n                    ret.push(',');\n                }\n                m.from(f);\n            }\n            ret.push(' ');\n        }\n        if (s.where) {\n            ret.push('WHERE ');\n            m.expr(s.where);\n            ret.push(' ');\n        }\n        if (s.groupBy) {\n            ret.push('GROUP BY ');\n            list(s.groupBy, e => m.expr(e), false);\n            ret.push(' ');\n            if (s.having) {\n                ret.push(' HAVING ');\n                m.expr(s.having);\n                ret.push(' ');\n            }\n        }\n        if (s.orderBy) {\n            visitOrderBy(m, s.orderBy);\n            ret.push(' ');\n        }\n        if (s.limit) {\n            if (s.limit.offset) {\n                ret.push(`OFFSET `);\n                m.expr(s.limit.offset);\n            }\n            if (s.limit.limit) {\n                ret.push(`LIMIT `);\n                m.expr(s.limit.limit);\n            }\n        }\n        if (s.for) {\n            ret.push('FOR ', s.for.type.toUpperCase());\n            if (s.skip) {\n                ret.push(' ', s.skip.type.toUpperCase());\n            }\n        }\n    },\n    show: s => {\n        ret.push('SHOW ', name(s.variable));\n    },\n    prepare: s => {\n        var _a;\n        ret.push('PREPARE ', name(s.name));\n        if ((_a = s.args) === null || _a === void 0 ? void 0 : _a.length) {\n            list(s.args, a => m.dataType(a), true);\n        }\n        ret.push(' AS ');\n        m.statement(s.statement);\n    },\n    deallocate: s => {\n        ret.push('DEALLOCATE ');\n        if ('name' in s.target) {\n            ret.push(s.target.name);\n            return;\n        }\n        ret.push('ALL');\n    },\n    arraySelect: s => {\n        ret.push('array(');\n        m.select(s.select);\n        ret.push(')');\n    },\n    union: s => {\n        ret.push('(');\n        m.statement(s.left);\n        ret.push(') ', s.type.toUpperCase(), ' ');\n        if (s.right.type === 'union' || s.right.type === 'union all') {\n            m.union(s.right);\n        }\n        else {\n            ret.push('(');\n            m.statement(s.right);\n            ret.push(')');\n        }\n    },\n    selectionColumn: c => {\n        m.expr(c.expr);\n        if (c.alias) {\n            ret.push(' AS ', name(c.alias));\n        }\n        ret.push(' ');\n    },\n    set: s => {\n        ret.push(name(s.column), ' = ');\n        m.expr(s.value);\n        ret.push(' ');\n    },\n    statement: s => m.super().statement(s),\n    tableRef: r => {\n        visitQualifiedName(r);\n        if (r.alias) {\n            ret.push(' AS ', ident(r.alias));\n        }\n        ret.push(' ');\n    },\n    ternary: t => {\n        m.expr(t.value);\n        ret.push(' ', t.op, ' ');\n        m.expr(t.lo);\n        ret.push(' AND ');\n        m.expr(t.hi);\n        ret.push(' ');\n    },\n    transaction: t => {\n        ret.push(t.type);\n    },\n    unary: t => {\n        switch (t.op) {\n            case '+':\n            case '-':\n                // prefix ops\n                visitOp(t);\n                m.expr(t.operand);\n                break;\n            case 'NOT':\n                // prefix ops\n                ret.push(t.op);\n                ret.push(' ');\n                m.expr(t.operand);\n                break;\n            default:\n                // postfix ops\n                m.expr(t.operand);\n                ret.push(' ');\n                ret.push(t.op);\n        }\n    },\n    update: u => {\n        ret.push('UPDATE ');\n        m.tableRef(u.table);\n        ret.push(' SET ');\n        list(u.sets, s => m.set(s), false);\n        ret.push(' ');\n        if (u.from) {\n            ret.push('FROM ');\n            m.from(u.from);\n            ret.push(' ');\n        }\n        if (u.where) {\n            ret.push('WHERE ');\n            m.expr(u.where);\n            ret.push(' ');\n        }\n        if (u.returning) {\n            ret.push(' RETURNING ');\n            list(u.returning, r => m.selectionColumn(r), false);\n            ret.push(' ');\n        }\n    },\n}));\nexports.toSql = {};\nconst proto = ast_mapper_1.AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    exports.toSql[k] = function (...args) {\n        try {\n            visitor[k].apply(visitor, args);\n            return ret.join('').trim();\n        }\n        finally {\n            ret = [];\n        }\n    };\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// stolen from https://github.com/segmentio/pg-escape/blob/master/index.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.literal = void 0;\nfunction literal(val) {\n    if (null == val)\n        return 'NULL';\n    if (Array.isArray(val)) {\n        var vals = val.map(literal);\n        return \"(\" + vals.join(\", \") + \")\";\n    }\n    var backslash = ~val.indexOf('\\\\');\n    var prefix = backslash ? 'E' : '';\n    val = val.replace(/'/g, \"''\");\n    val = val.replace(/\\\\/g, '\\\\\\\\');\n    return prefix + \"'\" + val + \"'\";\n}\nexports.literal = literal;\n;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.locationOf = void 0;\nfunction locationOf(node) {\n    const n = node._location;\n    if (!n) {\n        throw new Error('This statement has not been parsed using location tracking (which has a small performance hit). ');\n    }\n    return n;\n}\nexports.locationOf = locationOf;\n;\n;\n\n\n/***/ })\n/******/ ])));\n//# sourceMappingURL=index.js.map","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3545__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2650__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1177__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface FieldLabel {\n  label: string;\n  tooltip: string;\n}\n\nexport enum BuilderMode {\n  List = 'list',\n  Aggregate = 'aggregate',\n  Trend = 'trend',\n}\n\n/**\n * QueryType determines the display/query format.\n */\nexport enum QueryType {\n  Table = 'table',\n  Logs = 'logs',\n  TimeSeries = 'timeseries',\n  Traces = 'traces',\n}\n\nexport interface QueryBuilderOptions {\n  database: string;\n  table: string;\n  queryType: QueryType;\n  \n  mode?: BuilderMode; // TODO: no longer required?\n\n  columns?: SelectedColumn[];\n  aggregates?: AggregateColumn[];\n  filters?: Filter[];\n  groupBy?: string[];\n  orderBy?: OrderBy[];\n  limit?: number;\n\n  /**\n   * Contains metadata for editor-specific use cases.\n   */\n  meta?: {\n    /**\n     * When enabled, will hide most/all of the query builder options.\n     * \n     * Intended to be used for trace ID lookups where we only care to show the visualization panel\n     */\n    minimized?: boolean;\n\n    // Logs\n    liveView?: boolean;\n    logMessageLike?: string;\n\n    // Trace\n    traceDurationUnit?: TimeUnit;\n    /**\n     * true for trace ID mode, false for trace search mode\n     */\n    isTraceIdMode?: boolean;\n    traceId?: string;\n\n    // Logs & Traces\n    otelEnabled?: boolean;\n    otelVersion?: string;\n  }\n}\n\nexport enum AggregateType {\n  Sum = 'sum',\n  Average = 'avg',\n  Min = 'min',\n  Max = 'max',\n  Count = 'count',\n  Any = 'any',\n  // Count_Distinct = 'count_distinct',\n}\n\nexport type AggregateColumn = {\n  aggregateType: AggregateType;\n  column: string;\n  alias?: string;\n}\n\nexport interface Field {\n  name: string;\n  type: string;\n  rel: string;\n  label: string;\n  ref: string[];\n}\n\nexport interface FullEntity {\n  name: string;\n  label: string;\n  custom: boolean;\n  queryable: boolean;\n}\n\ninterface TableColumnPickListItem {\n  label: string;\n  value: string;\n}\n\n/**\n * Represents a column retrieved from ClickHouse\n */\nexport interface TableColumn {\n  name: string;\n  type: string;\n  picklistValues: TableColumnPickListItem[];\n  label?: string;\n  filterable?: boolean;\n  sortable?: boolean;\n  groupable?: boolean;\n  aggregatable?: boolean;\n}\n\n/**\n * Some columns are used to enable certain features.\n * This enum defines the different use cases that a column may be used for in the query generator.\n * For example, \"Time\" would be used to identify the primary time column for a time series.\n */\nexport enum ColumnHint {\n  Time = 'time',\n\n  LogLevel = 'log_level',\n  LogMessage = 'log_message',\n  LogLabels = 'log_labels',\n\n  TraceId = 'trace_id',\n  TraceSpanId = 'trace_span_id',\n  TraceParentSpanId = 'trace_parent_span_id',\n  TraceServiceName = 'trace_service_name',\n  TraceOperationName = 'trace_operation_name',\n  TraceDurationTime = 'trace_duration_time',\n  TraceTags = 'trace_tags',\n  TraceServiceTags = 'trace_service_tags',\n  TraceStatusCode = 'trace_status_code',\n}\n\n/**\n * TimeUnit determines a unit of time.\n */\nexport enum TimeUnit {\n  Seconds = 'seconds',\n  Milliseconds = 'milliseconds',\n  Microseconds = 'microseconds',\n  Nanoseconds = 'nanoseconds',\n}\n\n/**\n * Represents a column selection, including metadata for the query generator to use.\n */\nexport interface SelectedColumn {\n  name: string;\n  type?: string;\n  alias?: string;\n  custom?: boolean;\n  hint?: ColumnHint;\n}\n\nexport enum OrderByDirection {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\nexport interface OrderBy {\n  name: string;\n  dir: OrderByDirection;\n  /**\n   * true if this orderBy was configured to be present by default\n   */\n  default?: boolean;\n\n  /**\n   * If provided, SQL generator will ignore \"name\" and instead\n   * find the intended column by the hint\n   */\n  hint?: ColumnHint;\n}\n\nexport enum FilterOperator {\n  /**\n   * A placeholder filter that gets excluded from SQL generation\n   */\n  IsAnything = 'IS ANYTHING',\n\n  /**\n   * Compares to an empty string\n   */\n  IsEmpty = 'IS EMPTY',\n  IsNotEmpty = 'IS NOT EMPTY',\n\n  IsNull = 'IS NULL',\n  IsNotNull = 'IS NOT NULL',\n  Equals = '=',\n  NotEquals = '!=',\n  LessThan = '<',\n  LessThanOrEqual = '<=',\n  GreaterThan = '>',\n  GreaterThanOrEqual = '>=',\n  Like = 'LIKE',\n  NotLike = 'NOT LIKE',\n  In = 'IN',\n  NotIn = 'NOT IN',\n  WithInGrafanaTimeRange = 'WITH IN DASHBOARD TIME RANGE',\n  OutsideGrafanaTimeRange = 'OUTSIDE DASHBOARD TIME RANGE',\n}\n\nexport interface CommonFilterProps {\n  filterType: 'custom';\n  /**\n   * Column name\n   */\n  key: string;\n  /**\n   * key used when using a map type: exampleMap['mapKey']\n   */\n  mapKey?: string;\n  type: string;\n  condition: 'AND' | 'OR';\n\n  /**\n   * Used to uniquely identify a dynamically added filter\n   * For example, might be set to 'timeRange' for the default added time range filter.\n   */\n  id?: string;\n  /**\n   * If provided, SQL generator will ignore \"key\" and instead\n   * find the intended column by the hint.\n   * \n   * Note that the column MUST be present in the selected columns array in order\n   * for the filter to be applied unless key is also provided.\n   */\n  hint?: ColumnHint;\n\n  /**\n   * Display label for filter\n   */\n  label?: string;\n}\n\nexport interface NullFilter extends CommonFilterProps {\n  operator: FilterOperator.IsAnything | FilterOperator.IsNull | FilterOperator.IsNotNull;\n}\n\nexport interface BooleanFilter extends CommonFilterProps {\n  type: 'boolean';\n  operator: FilterOperator.IsAnything | FilterOperator.Equals | FilterOperator.NotEquals;\n  value: boolean;\n}\n\nexport interface StringFilter extends CommonFilterProps {\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.IsEmpty\n    | FilterOperator.IsNotEmpty\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.Like\n    | FilterOperator.NotLike;\n  value: string;\n}\n\nexport interface NumberFilter extends CommonFilterProps {\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.LessThan\n    | FilterOperator.LessThanOrEqual\n    | FilterOperator.GreaterThan\n    | FilterOperator.GreaterThanOrEqual;\n  value: number;\n}\n\nexport interface DateFilterWithValue extends CommonFilterProps {\n  type: 'datetime' | 'date';\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.LessThan\n    | FilterOperator.LessThanOrEqual\n    | FilterOperator.GreaterThan\n    | FilterOperator.GreaterThanOrEqual;\n  value: string;\n}\n\nexport interface DateFilterWithoutValue extends CommonFilterProps {\n  type: 'datetime' | 'date';\n  operator: FilterOperator.IsAnything | FilterOperator.WithInGrafanaTimeRange | FilterOperator.OutsideGrafanaTimeRange;\n}\n\nexport type DateFilter = DateFilterWithValue | DateFilterWithoutValue;\n\nexport interface MultiFilter extends CommonFilterProps {\n  operator: FilterOperator.IsAnything | FilterOperator.In | FilterOperator.NotIn;\n  value: string[];\n}\n\nexport type Filter = NullFilter | BooleanFilter | NumberFilter | DateFilter | StringFilter | MultiFilter;\n","import { DataQuery } from '@grafana/schema';\nimport { BuilderMode, QueryType, QueryBuilderOptions } from './queryBuilder';\n\n/**\n * EditorType determines the query editor type.\n */\nexport enum EditorType {\n  SQL = 'sql',\n  Builder = 'builder',\n}\n\nexport interface CHQueryBase extends DataQuery {\n  pluginVersion: string,\n  editorType: EditorType;\n  rawSql: string;\n\n  /**\n   * REQUIRED by backend for auto selecting preferredVisualizationType.\n   * Only used in explore view.\n   * src: https://github.com/grafana/sqlds/blob/dda2dc0a54b128961fc9f7885baabf555f3ddfdc/query.go#L36\n   */\n  format?: number;\n}\n\nexport interface CHSqlQuery extends CHQueryBase {\n  editorType: EditorType.SQL;\n  queryType?: QueryType; // only used in explore view\n  meta?: {\n    timezone?: string;\n    // meta fields to be used just for building builder options when migrating back to EditorType.Builder\n    builderOptions?: QueryBuilderOptions;\n  };\n  expand?: boolean;\n}\n\nexport interface CHBuilderQuery extends CHQueryBase {\n  editorType: EditorType.Builder;\n  builderOptions: QueryBuilderOptions;\n  meta?: {\n    timezone?: string;\n  };\n}\n\nexport type CHQuery = CHSqlQuery | CHBuilderQuery;\n\n// TODO: these aren't really types\nexport const defaultEditorType: EditorType = EditorType.Builder;\nexport const defaultCHBuilderQuery: Omit<CHBuilderQuery, 'refId'> = {\n  pluginVersion: '',\n  editorType: EditorType.Builder,\n  rawSql: '',\n  builderOptions: {\n    database: '',\n    table: '',\n    queryType: QueryType.Table,\n    mode: BuilderMode.List,\n    columns: [],\n    meta: {},\n    limit: 1000\n  },\n};\nexport const defaultCHSqlQuery: Omit<CHSqlQuery, 'refId'> = {\n  pluginVersion: '',\n  editorType: EditorType.SQL,\n  rawSql: '',\n  expand: false,\n};\n","import { parseFirst, Statement, SelectFromStatement, astMapper, toSql, ExprRef } from 'pgsql-ast-parser';\n\ninterface ReplacePart {\n  startIndex: number;\n  name: string;\n  replacementName: string;\n};\ntype ReplaceParts = ReplacePart[];\n\nfunction getReplacementKey(isVariable: boolean) {\n  const prefix = isVariable ? 'v' : 'f';\n  return prefix + (Math.random() + 1).toString(36).substring(7);\n}\n\n/**\n * Replaces macro functions and keywords such as $__timeFilter() and \"default\"\n */\nfunction replaceMacroFunctions(sql: string): [ReplaceParts, string] {\n  const replaceFuncs: ReplaceParts = [];\n  // default is a keyword in this grammar, but it can be used in CH\n  const keywordRegex = /(\\$__|\\$|default|settings)/gi;\n  let regExpArray: RegExpExecArray | null;\n  while ((regExpArray = keywordRegex.exec(sql)) !== null) {\n    replaceFuncs.push({ startIndex: regExpArray.index, name: regExpArray[0], replacementName: '' });\n  }\n\n  // need to process in reverse so starting positions aren't affected by replacing other things\n  for (let i = replaceFuncs.length - 1; i >= 0; i--) {\n    const si = replaceFuncs[i].startIndex;\n    const replacementName = getReplacementKey(false);\n    replaceFuncs[i].replacementName = replacementName;\n    // settings do not parse and we do not need information from them so we will remove them\n    if (replaceFuncs[i].name.toLowerCase() === 'settings') {\n      sql = sql.substring(0, si);\n      continue;\n    }\n    sql = sql.substring(0, si) + replacementName + sql.substring(si + replaceFuncs[i].name.length);\n  }\n\n  return [replaceFuncs, sql];\n}\n\n/**\n * Replaces Grafana variables such as ${var} ${var.key} ${var.key:singlequote}\n * https://grafana.com/docs/grafana/latest/dashboards/variables\n */\nfunction replaceMacroVariables(sql: string): [ReplaceParts, string] {\n  const replaceVariables: ReplaceParts = [];\n  const variableRegex = /\\${[a-zA-Z0-9_:.\\w]+}/g;\n\n  let regExpArray: RegExpExecArray | null;\n  while ((regExpArray = variableRegex.exec(sql)) !== null) {\n    replaceVariables.push({ startIndex: regExpArray.index, name: regExpArray[0], replacementName: '' });\n  }\n\n  // need to process in reverse so starting positions aren't affected by replacing other things\n  for (let i = replaceVariables.length - 1; i >= 0; i--) {\n    const si = replaceVariables[i].startIndex;\n    const replacementName = getReplacementKey(true);\n    replaceVariables[i].replacementName = replacementName;\n    sql = sql.substring(0, si) + replacementName + sql.substring(si + replaceVariables[i].name.length);\n  }\n\n  return [replaceVariables, sql];\n}\n\n// TODO: support query parameters: https://clickhouse.com/docs/en/interfaces/cli#cli-queries-with-parameters\n\nexport function sqlToStatement(rawSql: string): Statement {\n  const [replaceVars, variableSql] = replaceMacroVariables(rawSql);\n  const [replaceFuncs, sql] = replaceMacroFunctions(variableSql);\n  const replaceParts = replaceVars.concat(replaceFuncs);\n\n  let ast: Statement;\n  try {\n    ast = parseFirst(sql);\n  } catch (err) {\n    console.error(`Failed to parse SQL statement into an AST: ${err}`);\n    return {} as Statement;\n  }\n\n  const mapper = astMapper((map) => ({\n    tableRef: (t) => {\n      const rfs = replaceParts.find((x) => x.replacementName === t.schema);\n      if (rfs) {\n        return { ...t, schema: t.schema?.replace(rfs.replacementName, rfs.name) };\n      }\n      const rft = replaceParts.find((x) => x.replacementName === t.name);\n      if (rft) {\n        return { ...t, name: t.name.replace(rft.replacementName, rft.name) };\n      }\n      return map.super().tableRef(t);\n    },\n    ref: (r) => {\n      const rf = replaceParts.find((x) => r.name.startsWith(x.replacementName));\n      if (rf) {\n        const d = r.name.replace(rf.replacementName, rf.name);\n        return { ...r, name: d };\n      }\n      return map.super().ref(r);\n    },\n    expr: (e) => {\n      if (!e || e.type !== 'string') {\n        return map.super().expr(e);\n      }\n\n      const rf = replaceParts.find(x => e.value.startsWith(x.replacementName));\n      if (rf) {\n        const d = e.value.replace(rf.replacementName, rf.name);\n        return { ...e, value: d };\n      }\n\n      return map.super().expr(e);\n    },\n    call: (c) => {\n      const rf = replaceParts.find((x) => c.function.name.startsWith(x.replacementName));\n      if (rf) {\n        return { ...c, function: { ...c.function, name: c.function.name.replace(rf.replacementName, rf.name) } };\n      }\n      return map.super().call(c);\n    },\n  }));\n  return mapper.statement(ast)!;\n}\n\nexport function getTable(sql: string): string {\n  const stm = sqlToStatement(sql);\n  if (stm.type !== 'select' || !stm.from?.length || stm.from?.length <= 0) {\n    return '';\n  }\n  switch (stm.from![0].type) {\n    case 'table': {\n      const table = stm.from![0];\n      const tableName = `${table.name.schema ? `${table.name.schema}.` : ''}${table.name.name}`;\n      // clickhouse table names are case-sensitive and pgsql parser removes casing,\n      // so we need to get the casing from the raw sql\n      const s = new RegExp(`\\\\b${tableName}\\\\b`, 'gi').exec(sql);\n      return s ? s[0] : tableName;\n    }\n    case 'statement': {\n      const table = stm.from![0];\n      return getTable(toSql.statement(table.statement));\n    }\n  }\n  return '';\n}\n\nexport function getFields(sql: string): string[] {\n  const stm = sqlToStatement(sql) as SelectFromStatement;\n  if (stm.type !== 'select' || !stm.columns?.length || stm.columns?.length <= 0) {\n    return [];\n  }\n\n  return stm.columns.map((x) => {\n    const exprName = (x.expr as ExprRef).name;\n\n    if (x.alias !== undefined) {\n      return `${exprName} as ${x.alias?.name}`;\n    } else {\n      return `${exprName}`;\n    }\n  });\n}\n","import { getTable } from './ast';\n\nexport class AdHocFilter {\n  private _targetTable = '';\n\n  setTargetTableFromQuery(query: string) {\n    this._targetTable = getTable(query);\n    if (this._targetTable === '') {\n      throw new Error('Failed to get table from adhoc query.');\n    }\n  }\n\n  apply(sql: string, adHocFilters: AdHocVariableFilter[]): string {\n    if (sql === '' || !adHocFilters || adHocFilters.length === 0) {\n      return sql;\n    }\n\n    // sql can contain a query with double quotes around the database and table name, e.g. \"default\".\"table\", so we remove those\n    if (this._targetTable !== '' && !sql.replace(/\"/g, '').match(new RegExp(`.*\\\\b${this._targetTable}\\\\b.*`, 'gi'))) {\n      return sql;\n    }\n\n    if (this._targetTable === '') {\n      this._targetTable = getTable(sql);\n    }\n\n    if (this._targetTable === '') {\n      return sql;\n    }\n\n    const filters = adHocFilters\n      .filter((filter: AdHocVariableFilter) => {\n        const valid = isValid(filter);\n        if (!valid) {\n          console.warn('Invalid adhoc filter will be ignored:', filter);\n        }\n        return valid;\n      })\n      .map((f, i) => {\n        const key = f.key.includes('.') ? f.key.split('.')[1] : f.key;\n        const value = `\\\\'${f.value}\\\\'`;\n        const condition = i !== adHocFilters.length - 1 ? (f.condition ? f.condition : 'AND') : '';\n        const operator = convertOperatorToClickHouseOperator(f.operator);\n        return ` ${key} ${operator} ${value} ${condition}`;\n      })\n      .join('');\n\n    if (filters === '') {\n      return sql;\n    }\n    // Semicolons are not required and cause problems when building the SQL\n    sql = sql.replace(';', '');\n    return `${sql} settings additional_table_filters={'${this._targetTable}' : '${filters}'}`;\n  }\n}\n\nfunction isValid(filter: AdHocVariableFilter): boolean {\n  return filter.key !== undefined && filter.operator !== undefined && filter.value !== undefined;\n}\n\nfunction convertOperatorToClickHouseOperator(operator: AdHocVariableFilterOperator): string {\n  if (operator === '=~') {\n    return 'ILIKE';\n  }\n  if (operator === '!~') {\n    return 'NOT ILIKE';\n  }\n  return operator;\n}\n\ntype AdHocVariableFilterOperator = '>' | '<' | '=' | '!=' | '=~' | '!~';\n\nexport type AdHocVariableFilter = {\n  key: string;\n  operator: AdHocVariableFilterOperator;\n  value: string;\n  condition?: string;\n};\n","var ScaleDimensionMode = /* @__PURE__ */ ((ScaleDimensionMode2) => {\n  ScaleDimensionMode2[\"Linear\"] = \"linear\";\n  ScaleDimensionMode2[\"Quad\"] = \"quad\";\n  return ScaleDimensionMode2;\n})(ScaleDimensionMode || {});\nvar ScalarDimensionMode = /* @__PURE__ */ ((ScalarDimensionMode2) => {\n  ScalarDimensionMode2[\"Clamped\"] = \"clamped\";\n  ScalarDimensionMode2[\"Mod\"] = \"mod\";\n  return ScalarDimensionMode2;\n})(ScalarDimensionMode || {});\nvar TextDimensionMode = /* @__PURE__ */ ((TextDimensionMode2) => {\n  TextDimensionMode2[\"Field\"] = \"field\";\n  TextDimensionMode2[\"Fixed\"] = \"fixed\";\n  TextDimensionMode2[\"Template\"] = \"template\";\n  return TextDimensionMode2;\n})(TextDimensionMode || {});\nvar ResourceDimensionMode = /* @__PURE__ */ ((ResourceDimensionMode2) => {\n  ResourceDimensionMode2[\"Field\"] = \"field\";\n  ResourceDimensionMode2[\"Fixed\"] = \"fixed\";\n  ResourceDimensionMode2[\"Mapping\"] = \"mapping\";\n  return ResourceDimensionMode2;\n})(ResourceDimensionMode || {});\nvar FrameGeometrySourceMode = /* @__PURE__ */ ((FrameGeometrySourceMode2) => {\n  FrameGeometrySourceMode2[\"Auto\"] = \"auto\";\n  FrameGeometrySourceMode2[\"Coords\"] = \"coords\";\n  FrameGeometrySourceMode2[\"Geohash\"] = \"geohash\";\n  FrameGeometrySourceMode2[\"Lookup\"] = \"lookup\";\n  return FrameGeometrySourceMode2;\n})(FrameGeometrySourceMode || {});\nvar HeatmapCalculationMode = /* @__PURE__ */ ((HeatmapCalculationMode2) => {\n  HeatmapCalculationMode2[\"Count\"] = \"count\";\n  HeatmapCalculationMode2[\"Size\"] = \"size\";\n  return HeatmapCalculationMode2;\n})(HeatmapCalculationMode || {});\nvar HeatmapCellLayout = /* @__PURE__ */ ((HeatmapCellLayout2) => {\n  HeatmapCellLayout2[\"auto\"] = \"auto\";\n  HeatmapCellLayout2[\"ge\"] = \"ge\";\n  HeatmapCellLayout2[\"le\"] = \"le\";\n  HeatmapCellLayout2[\"unknown\"] = \"unknown\";\n  return HeatmapCellLayout2;\n})(HeatmapCellLayout || {});\nvar LogsSortOrder = /* @__PURE__ */ ((LogsSortOrder2) => {\n  LogsSortOrder2[\"Ascending\"] = \"Ascending\";\n  LogsSortOrder2[\"Descending\"] = \"Descending\";\n  return LogsSortOrder2;\n})(LogsSortOrder || {});\nvar AxisPlacement = /* @__PURE__ */ ((AxisPlacement2) => {\n  AxisPlacement2[\"Auto\"] = \"auto\";\n  AxisPlacement2[\"Bottom\"] = \"bottom\";\n  AxisPlacement2[\"Hidden\"] = \"hidden\";\n  AxisPlacement2[\"Left\"] = \"left\";\n  AxisPlacement2[\"Right\"] = \"right\";\n  AxisPlacement2[\"Top\"] = \"top\";\n  return AxisPlacement2;\n})(AxisPlacement || {});\nvar AxisColorMode = /* @__PURE__ */ ((AxisColorMode2) => {\n  AxisColorMode2[\"Series\"] = \"series\";\n  AxisColorMode2[\"Text\"] = \"text\";\n  return AxisColorMode2;\n})(AxisColorMode || {});\nvar VisibilityMode = /* @__PURE__ */ ((VisibilityMode2) => {\n  VisibilityMode2[\"Always\"] = \"always\";\n  VisibilityMode2[\"Auto\"] = \"auto\";\n  VisibilityMode2[\"Never\"] = \"never\";\n  return VisibilityMode2;\n})(VisibilityMode || {});\nvar GraphDrawStyle = /* @__PURE__ */ ((GraphDrawStyle2) => {\n  GraphDrawStyle2[\"Bars\"] = \"bars\";\n  GraphDrawStyle2[\"Line\"] = \"line\";\n  GraphDrawStyle2[\"Points\"] = \"points\";\n  return GraphDrawStyle2;\n})(GraphDrawStyle || {});\nvar GraphTransform = /* @__PURE__ */ ((GraphTransform2) => {\n  GraphTransform2[\"Constant\"] = \"constant\";\n  GraphTransform2[\"NegativeY\"] = \"negative-Y\";\n  return GraphTransform2;\n})(GraphTransform || {});\nvar LineInterpolation = /* @__PURE__ */ ((LineInterpolation2) => {\n  LineInterpolation2[\"Linear\"] = \"linear\";\n  LineInterpolation2[\"Smooth\"] = \"smooth\";\n  LineInterpolation2[\"StepAfter\"] = \"stepAfter\";\n  LineInterpolation2[\"StepBefore\"] = \"stepBefore\";\n  return LineInterpolation2;\n})(LineInterpolation || {});\nvar ScaleDistribution = /* @__PURE__ */ ((ScaleDistribution2) => {\n  ScaleDistribution2[\"Linear\"] = \"linear\";\n  ScaleDistribution2[\"Log\"] = \"log\";\n  ScaleDistribution2[\"Ordinal\"] = \"ordinal\";\n  ScaleDistribution2[\"Symlog\"] = \"symlog\";\n  return ScaleDistribution2;\n})(ScaleDistribution || {});\nvar GraphGradientMode = /* @__PURE__ */ ((GraphGradientMode2) => {\n  GraphGradientMode2[\"Hue\"] = \"hue\";\n  GraphGradientMode2[\"None\"] = \"none\";\n  GraphGradientMode2[\"Opacity\"] = \"opacity\";\n  GraphGradientMode2[\"Scheme\"] = \"scheme\";\n  return GraphGradientMode2;\n})(GraphGradientMode || {});\nvar StackingMode = /* @__PURE__ */ ((StackingMode2) => {\n  StackingMode2[\"None\"] = \"none\";\n  StackingMode2[\"Normal\"] = \"normal\";\n  StackingMode2[\"Percent\"] = \"percent\";\n  return StackingMode2;\n})(StackingMode || {});\nvar BarAlignment = /* @__PURE__ */ ((BarAlignment2) => {\n  BarAlignment2[BarAlignment2[\"After\"] = 1] = \"After\";\n  BarAlignment2[BarAlignment2[\"Before\"] = -1] = \"Before\";\n  BarAlignment2[BarAlignment2[\"Center\"] = 0] = \"Center\";\n  return BarAlignment2;\n})(BarAlignment || {});\nvar ScaleOrientation = /* @__PURE__ */ ((ScaleOrientation2) => {\n  ScaleOrientation2[ScaleOrientation2[\"Horizontal\"] = 0] = \"Horizontal\";\n  ScaleOrientation2[ScaleOrientation2[\"Vertical\"] = 1] = \"Vertical\";\n  return ScaleOrientation2;\n})(ScaleOrientation || {});\nvar ScaleDirection = /* @__PURE__ */ ((ScaleDirection2) => {\n  ScaleDirection2[ScaleDirection2[\"Down\"] = -1] = \"Down\";\n  ScaleDirection2[ScaleDirection2[\"Left\"] = -1] = \"Left\";\n  ScaleDirection2[ScaleDirection2[\"Right\"] = 1] = \"Right\";\n  ScaleDirection2[ScaleDirection2[\"Up\"] = 1] = \"Up\";\n  return ScaleDirection2;\n})(ScaleDirection || {});\nconst defaultLineStyle = {\n  dash: []\n};\nvar GraphTresholdsStyleMode = /* @__PURE__ */ ((GraphTresholdsStyleMode2) => {\n  GraphTresholdsStyleMode2[\"Area\"] = \"area\";\n  GraphTresholdsStyleMode2[\"Dashed\"] = \"dashed\";\n  GraphTresholdsStyleMode2[\"DashedAndArea\"] = \"dashed+area\";\n  GraphTresholdsStyleMode2[\"Line\"] = \"line\";\n  GraphTresholdsStyleMode2[\"LineAndArea\"] = \"line+area\";\n  GraphTresholdsStyleMode2[\"Off\"] = \"off\";\n  GraphTresholdsStyleMode2[\"Series\"] = \"series\";\n  return GraphTresholdsStyleMode2;\n})(GraphTresholdsStyleMode || {});\nvar LegendDisplayMode = /* @__PURE__ */ ((LegendDisplayMode2) => {\n  LegendDisplayMode2[\"Hidden\"] = \"hidden\";\n  LegendDisplayMode2[\"List\"] = \"list\";\n  LegendDisplayMode2[\"Table\"] = \"table\";\n  return LegendDisplayMode2;\n})(LegendDisplayMode || {});\nconst defaultReduceDataOptions = {\n  calcs: []\n};\nvar VizOrientation = /* @__PURE__ */ ((VizOrientation2) => {\n  VizOrientation2[\"Auto\"] = \"auto\";\n  VizOrientation2[\"Horizontal\"] = \"horizontal\";\n  VizOrientation2[\"Vertical\"] = \"vertical\";\n  return VizOrientation2;\n})(VizOrientation || {});\nconst defaultOptionsWithTimezones = {\n  timezone: []\n};\nvar BigValueColorMode = /* @__PURE__ */ ((BigValueColorMode2) => {\n  BigValueColorMode2[\"Background\"] = \"background\";\n  BigValueColorMode2[\"BackgroundSolid\"] = \"background_solid\";\n  BigValueColorMode2[\"None\"] = \"none\";\n  BigValueColorMode2[\"Value\"] = \"value\";\n  return BigValueColorMode2;\n})(BigValueColorMode || {});\nvar BigValueGraphMode = /* @__PURE__ */ ((BigValueGraphMode2) => {\n  BigValueGraphMode2[\"Area\"] = \"area\";\n  BigValueGraphMode2[\"Line\"] = \"line\";\n  BigValueGraphMode2[\"None\"] = \"none\";\n  return BigValueGraphMode2;\n})(BigValueGraphMode || {});\nvar BigValueJustifyMode = /* @__PURE__ */ ((BigValueJustifyMode2) => {\n  BigValueJustifyMode2[\"Auto\"] = \"auto\";\n  BigValueJustifyMode2[\"Center\"] = \"center\";\n  return BigValueJustifyMode2;\n})(BigValueJustifyMode || {});\nvar BigValueTextMode = /* @__PURE__ */ ((BigValueTextMode2) => {\n  BigValueTextMode2[\"Auto\"] = \"auto\";\n  BigValueTextMode2[\"Name\"] = \"name\";\n  BigValueTextMode2[\"None\"] = \"none\";\n  BigValueTextMode2[\"Value\"] = \"value\";\n  BigValueTextMode2[\"ValueAndName\"] = \"value_and_name\";\n  return BigValueTextMode2;\n})(BigValueTextMode || {});\nvar TooltipDisplayMode = /* @__PURE__ */ ((TooltipDisplayMode2) => {\n  TooltipDisplayMode2[\"Multi\"] = \"multi\";\n  TooltipDisplayMode2[\"None\"] = \"none\";\n  TooltipDisplayMode2[\"Single\"] = \"single\";\n  return TooltipDisplayMode2;\n})(TooltipDisplayMode || {});\nvar SortOrder = /* @__PURE__ */ ((SortOrder2) => {\n  SortOrder2[\"Ascending\"] = \"asc\";\n  SortOrder2[\"Descending\"] = \"desc\";\n  SortOrder2[\"None\"] = \"none\";\n  return SortOrder2;\n})(SortOrder || {});\nconst defaultVizLegendOptions = {\n  calcs: []\n};\nvar BarGaugeDisplayMode = /* @__PURE__ */ ((BarGaugeDisplayMode2) => {\n  BarGaugeDisplayMode2[\"Basic\"] = \"basic\";\n  BarGaugeDisplayMode2[\"Gradient\"] = \"gradient\";\n  BarGaugeDisplayMode2[\"Lcd\"] = \"lcd\";\n  return BarGaugeDisplayMode2;\n})(BarGaugeDisplayMode || {});\nvar BarGaugeValueMode = /* @__PURE__ */ ((BarGaugeValueMode2) => {\n  BarGaugeValueMode2[\"Color\"] = \"color\";\n  BarGaugeValueMode2[\"Hidden\"] = \"hidden\";\n  BarGaugeValueMode2[\"Text\"] = \"text\";\n  return BarGaugeValueMode2;\n})(BarGaugeValueMode || {});\nvar TableCellDisplayMode = /* @__PURE__ */ ((TableCellDisplayMode2) => {\n  TableCellDisplayMode2[\"Auto\"] = \"auto\";\n  TableCellDisplayMode2[\"BasicGauge\"] = \"basic\";\n  TableCellDisplayMode2[\"ColorBackground\"] = \"color-background\";\n  TableCellDisplayMode2[\"ColorBackgroundSolid\"] = \"color-background-solid\";\n  TableCellDisplayMode2[\"ColorText\"] = \"color-text\";\n  TableCellDisplayMode2[\"Custom\"] = \"custom\";\n  TableCellDisplayMode2[\"Gauge\"] = \"gauge\";\n  TableCellDisplayMode2[\"GradientGauge\"] = \"gradient-gauge\";\n  TableCellDisplayMode2[\"Image\"] = \"image\";\n  TableCellDisplayMode2[\"JSONView\"] = \"json-view\";\n  TableCellDisplayMode2[\"LcdGauge\"] = \"lcd-gauge\";\n  TableCellDisplayMode2[\"Sparkline\"] = \"sparkline\";\n  return TableCellDisplayMode2;\n})(TableCellDisplayMode || {});\nvar TableCellBackgroundDisplayMode = /* @__PURE__ */ ((TableCellBackgroundDisplayMode2) => {\n  TableCellBackgroundDisplayMode2[\"Basic\"] = \"basic\";\n  TableCellBackgroundDisplayMode2[\"Gradient\"] = \"gradient\";\n  return TableCellBackgroundDisplayMode2;\n})(TableCellBackgroundDisplayMode || {});\nconst defaultTableFooterOptions = {\n  fields: [],\n  reducer: []\n};\nvar TableCellHeight = /* @__PURE__ */ ((TableCellHeight2) => {\n  TableCellHeight2[\"Lg\"] = \"lg\";\n  TableCellHeight2[\"Md\"] = \"md\";\n  TableCellHeight2[\"Sm\"] = \"sm\";\n  return TableCellHeight2;\n})(TableCellHeight || {});\nvar VariableFormatID = /* @__PURE__ */ ((VariableFormatID2) => {\n  VariableFormatID2[\"CSV\"] = \"csv\";\n  VariableFormatID2[\"Date\"] = \"date\";\n  VariableFormatID2[\"Distributed\"] = \"distributed\";\n  VariableFormatID2[\"DoubleQuote\"] = \"doublequote\";\n  VariableFormatID2[\"Glob\"] = \"glob\";\n  VariableFormatID2[\"HTML\"] = \"html\";\n  VariableFormatID2[\"JSON\"] = \"json\";\n  VariableFormatID2[\"Lucene\"] = \"lucene\";\n  VariableFormatID2[\"PercentEncode\"] = \"percentencode\";\n  VariableFormatID2[\"Pipe\"] = \"pipe\";\n  VariableFormatID2[\"QueryParam\"] = \"queryparam\";\n  VariableFormatID2[\"Raw\"] = \"raw\";\n  VariableFormatID2[\"Regex\"] = \"regex\";\n  VariableFormatID2[\"SQLString\"] = \"sqlstring\";\n  VariableFormatID2[\"SingleQuote\"] = \"singlequote\";\n  VariableFormatID2[\"Text\"] = \"text\";\n  VariableFormatID2[\"UriEncode\"] = \"uriencode\";\n  return VariableFormatID2;\n})(VariableFormatID || {});\nvar LogsDedupStrategy = /* @__PURE__ */ ((LogsDedupStrategy2) => {\n  LogsDedupStrategy2[\"exact\"] = \"exact\";\n  LogsDedupStrategy2[\"none\"] = \"none\";\n  LogsDedupStrategy2[\"numbers\"] = \"numbers\";\n  LogsDedupStrategy2[\"signature\"] = \"signature\";\n  return LogsDedupStrategy2;\n})(LogsDedupStrategy || {});\nvar ComparisonOperation = /* @__PURE__ */ ((ComparisonOperation2) => {\n  ComparisonOperation2[\"EQ\"] = \"eq\";\n  ComparisonOperation2[\"GT\"] = \"gt\";\n  ComparisonOperation2[\"GTE\"] = \"gte\";\n  ComparisonOperation2[\"LT\"] = \"lt\";\n  ComparisonOperation2[\"LTE\"] = \"lte\";\n  ComparisonOperation2[\"NEQ\"] = \"neq\";\n  return ComparisonOperation2;\n})(ComparisonOperation || {});\nconst defaultTimeZone = \"browser\";\n\nexport { AxisColorMode, AxisPlacement, BarAlignment, BarGaugeDisplayMode, BarGaugeValueMode, BigValueColorMode, BigValueGraphMode, BigValueJustifyMode, BigValueTextMode, ComparisonOperation, FrameGeometrySourceMode, GraphDrawStyle, GraphGradientMode, GraphTransform, GraphTresholdsStyleMode, HeatmapCalculationMode, HeatmapCellLayout, LegendDisplayMode, LineInterpolation, LogsDedupStrategy, LogsSortOrder, ResourceDimensionMode, ScalarDimensionMode, ScaleDimensionMode, ScaleDirection, ScaleDistribution, ScaleOrientation, SortOrder, StackingMode, TableCellBackgroundDisplayMode, TableCellDisplayMode, TableCellHeight, TextDimensionMode, TooltipDisplayMode, VariableFormatID, VisibilityMode, VizOrientation, defaultLineStyle, defaultOptionsWithTimezones, defaultReduceDataOptions, defaultTableFooterOptions, defaultTimeZone, defaultVizLegendOptions };\n//# sourceMappingURL=common.gen.js.map\n","import { BarAlignment, DataQuery, DataSourceJsonData, GraphDrawStyle, StackingMode } from '@grafana/schema';\nimport {\n  DataFrame,\n  DataQueryError,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  FieldColorModeId,\n  FieldType,\n  LoadingState,\n  LogLevel,\n  MutableDataFrame,\n  ScopedVars,\n  TimeRange,\n  toDataFrame,\n} from '@grafana/data';\nimport { from, isObservable, Observable } from 'rxjs';\nimport { config } from '@grafana/runtime';\nimport { colors } from '@grafana/ui';\nimport { partition } from 'lodash';\n\n/**\n * Partially copy-pasted and adjusted to ClickHouse server-side aggregations\n * from `public/app/core/logsModel.ts` (release-9.4.3 branch)\n *\n * See https://github.com/grafana/grafana/blob/release-9.4.3/public/app/core/logsModel.ts\n */\n\ntype LogsVolumeQueryOptions<T extends DataQuery> = {\n  targets: T[];\n  range: TimeRange;\n};\n\nconst MILLISECOND = 1;\nconst SECOND = 1000 * MILLISECOND;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\n\nconst LogLevelColor = {\n  [LogLevel.critical]: colors[7],\n  [LogLevel.warning]: colors[1],\n  [LogLevel.error]: colors[4],\n  [LogLevel.info]: colors[0],\n  [LogLevel.debug]: colors[5],\n  [LogLevel.trace]: colors[2],\n  [LogLevel.unknown]: getThemeColor('#8e8e8e', '#bdc4cd'),\n};\n\nfunction getThemeColor(dark: string, light: string): string {\n  return config.bootData.user.lightTheme ? light : dark;\n}\n\n/**\n * Creates an observable, which makes requests to get logs volume and aggregates results.\n */\nexport function queryLogsVolume<TQuery extends DataQuery, TOptions extends DataSourceJsonData>(\n  datasource: DataSourceApi<TQuery, TOptions>,\n  logsVolumeRequest: DataQueryRequest<TQuery>,\n  options: LogsVolumeQueryOptions<TQuery>\n): Observable<DataQueryResponse> {\n  return new Observable((observer) => {\n    let rawLogsVolume: DataFrame[] = [];\n    observer.next({\n      state: LoadingState.Loading,\n      error: undefined,\n      data: [],\n    });\n\n    const queryResponse = datasource.query(logsVolumeRequest);\n    const queryObservable = isObservable(queryResponse) ? queryResponse : from(queryResponse);\n\n    const subscription = queryObservable.subscribe({\n      complete: () => {\n        const aggregatedLogsVolume = aggregateRawLogsVolume(rawLogsVolume);\n        if (aggregatedLogsVolume[0]) {\n          aggregatedLogsVolume[0].meta = {\n            custom: {\n              targets: options.targets,\n              absoluteRange: { from: options.range.from.valueOf(), to: options.range.to.valueOf() },\n            },\n          };\n        }\n        observer.next({\n          state: LoadingState.Done,\n          error: undefined,\n          data: aggregatedLogsVolume,\n        });\n        observer.complete();\n      },\n      next: (dataQueryResponse: DataQueryResponse) => {\n        const { error } = dataQueryResponse;\n        if (error !== undefined) {\n          observer.next({\n            state: LoadingState.Error,\n            error,\n            data: [],\n          });\n          observer.error(error);\n        } else {\n          rawLogsVolume = rawLogsVolume.concat(dataQueryResponse.data.map(toDataFrame));\n        }\n      },\n      error: (error: DataQueryError) => {\n        observer.next({\n          state: LoadingState.Error,\n          error: error,\n          data: [],\n        });\n        observer.error(error);\n      },\n    });\n    return () => {\n      subscription?.unsubscribe();\n    };\n  });\n}\n\n/**\n * Take multiple data frames, sum up values and group by level.\n * Return a list of data frames, each representing single level.\n */\nexport function aggregateRawLogsVolume(rawLogsVolume: DataFrame[]): DataFrame[] {\n  if (rawLogsVolume.length !== 1) {\n    return []; // we always expect a single DataFrame with all the aggregations from ClickHouse\n  }\n\n  const [[timeField], levelFields] = partition(rawLogsVolume[0].fields, (f) => f.name === TIME_FIELD_ALIAS);\n  if (timeField === undefined) {\n    return []; // should never happen if we have a DataFrame available\n  }\n\n  const oneLevelDetected = levelFields.length === 1 && levelFields[0].name === DEFAULT_LOGS_ALIAS;\n  if (oneLevelDetected) {\n    levelFields[0].name = 'logs';\n  }\n\n  const totalLength = timeField.values.length;\n  return levelFields.map((field) => {\n    const logLevel = LogLevel[field.name as keyof typeof LogLevel] || LogLevel.unknown;\n    const df = new MutableDataFrame();\n    df.addField({ name: 'Time', type: FieldType.time, values: timeField.values }, totalLength);\n    df.addField({\n      name: 'Value',\n      type: FieldType.number,\n      config: getLogVolumeFieldConfig(logLevel, oneLevelDetected),\n      values: field.values,\n    });\n    return df;\n  });\n}\n\n/**\n * Returns field configuration used to render logs volume bars\n */\nfunction getLogVolumeFieldConfig(level: LogLevel, oneLevelDetected: boolean) {\n  const name = oneLevelDetected && level === LogLevel.unknown ? 'logs' : level;\n  const color = LogLevelColor[level];\n  return {\n    displayNameFromDS: name,\n    color: {\n      mode: FieldColorModeId.Fixed,\n      fixedColor: color,\n    },\n    custom: {\n      drawStyle: GraphDrawStyle.Bars,\n      barAlignment: BarAlignment.Center,\n      lineColor: color,\n      pointColor: color,\n      fillColor: color,\n      lineWidth: 1,\n      fillOpacity: 100,\n      stacking: {\n        mode: StackingMode.Normal,\n        group: 'A',\n      },\n    },\n  };\n}\n\nexport function getIntervalInfo(scopedVars: ScopedVars): { interval: string; intervalMs?: number } {\n  if (scopedVars.__interval_ms) {\n    let intervalMs: number = scopedVars.__interval_ms.value;\n    let interval;\n    if (intervalMs > HOUR) {\n      intervalMs = DAY;\n      interval = '1d';\n    } else if (intervalMs > MINUTE) {\n      intervalMs = HOUR;\n      interval = '1h';\n    } else if (intervalMs > SECOND) {\n      intervalMs = MINUTE;\n      interval = '1m';\n    } else {\n      intervalMs = SECOND;\n      interval = '1s';\n    }\n\n    return { interval, intervalMs };\n  } else {\n    return { interval: '$__interval' };\n  }\n}\n\nexport function getTimeFieldRoundingClause(scopedVars: ScopedVars, timeField: string): string {\n  // NB: slight discrepancy with getIntervalInfo here\n  // it returns { interval: '$__interval' } when the interval from the ScopedVars is undefined,\n  // but we fall back to DAY here\n  let interval = 'DAY';\n  if (scopedVars.__interval_ms) {\n    let intervalMs: number = scopedVars.__interval_ms.value;\n    if (intervalMs > HOUR) {\n      interval = 'DAY';\n    } else if (intervalMs > MINUTE) {\n      interval = 'HOUR';\n    } else if (intervalMs > SECOND) {\n      interval = 'MINUTE';\n    } else {\n      interval = 'SECOND';\n    }\n  }\n  return `toStartOfInterval(\"${timeField}\", INTERVAL 1 ${interval})`;\n}\n\nexport const TIME_FIELD_ALIAS = 'time';\nexport const DEFAULT_LOGS_ALIAS = 'logs';\n\n/**\n * Mapping of canonical log levels to corresponding IN clauses\n * with all possible lower, upper and capital case values for this level\n *\n * For example: trace -> IN ('trace', 'TRACE', 'Trace')\n *\n * @see {LogLevel} for reference values\n */\ntype LogLevelToInClause = Record<'critical' | 'error' | 'warn' | 'info' | 'debug' | 'trace' | 'unknown', string>;\nexport const LOG_LEVEL_TO_IN_CLAUSE: LogLevelToInClause = (() => {\n  const levels = {\n    critical: ['critical', 'fatal', 'crit', 'alert', 'emerg'],\n    error: ['error', 'err', 'eror'],\n    warn: ['warn', 'warning'],\n    info: ['info', 'information', 'informational'],\n    debug: ['debug', 'dbug'],\n    trace: ['trace'],\n    unknown: ['unknown'],\n  };\n  return (Object.keys(levels) as Array<keyof typeof levels>).reduce((allLevels, level) => {\n    allLevels[level] = `IN (${[\n      ...levels[level].map((l) => `'${l}'`),\n      ...levels[level].map((l) => `'${l.toUpperCase()}'`),\n      ...levels[level].map((l) => `'${l.charAt(0).toUpperCase() + l.slice(1)}'`),\n    ].join(',')})`;\n    return allLevels;\n  }, {} as LogLevelToInClause);\n})();\n\nexport const allLogLevels = [\n  'critical', 'fatal', 'crit', 'alert', 'emerg',\n  'error', 'err', 'eror',\n  'warn', 'warning',\n  'info', 'information', 'informational',\n  'debug', 'dbug',\n  'trace',\n  'unknown'\n];\n","import { ColumnHint, TimeUnit } from \"types/queryBuilder\";\n\nexport const defaultLogsTable = 'otel_logs';\nexport const defaultTraceTable = 'otel_traces';\n\nexport const traceTimestampTableSuffix = '_trace_id_ts';\n\nexport interface OtelVersion {\n  name: string;\n  version: string;\n  specUrl?: string;\n  logsTable: string;\n  logColumnMap: Map<ColumnHint, string>;\n  logLevels: string[];\n  traceTable: string;\n  traceColumnMap: Map<ColumnHint, string>;\n  traceDurationUnit: TimeUnit.Nanoseconds;\n}\n\nconst otel129: OtelVersion = {\n  name: '1.2.9',\n  version: '1.29.0',\n  specUrl: 'https://opentelemetry.io/docs/specs/otel',\n  logsTable: defaultLogsTable,\n  logColumnMap: new Map<ColumnHint, string>([\n    [ColumnHint.Time, 'Timestamp'],\n    [ColumnHint.LogMessage, 'Body'],\n    [ColumnHint.LogLevel, 'SeverityText'],\n    [ColumnHint.LogLabels, 'LogAttributes'],\n    [ColumnHint.TraceId, 'TraceId'],\n  ]),\n  logLevels: [\n    'TRACE',\n    'DEBUG',\n    'INFO',\n    'WARN',\n    'ERROR',\n    'FATAL'\n  ],\n  traceTable: defaultTraceTable,\n  traceColumnMap: new Map<ColumnHint, string>([\n    [ColumnHint.Time, 'Timestamp'],\n    [ColumnHint.TraceId, 'TraceId'],\n    [ColumnHint.TraceSpanId, 'SpanId'],\n    [ColumnHint.TraceParentSpanId, 'ParentSpanId'],\n    [ColumnHint.TraceServiceName, 'ServiceName'],\n    [ColumnHint.TraceOperationName, 'SpanName'],\n    [ColumnHint.TraceDurationTime, 'Duration'],\n    [ColumnHint.TraceTags, 'SpanAttributes'],\n    [ColumnHint.TraceServiceTags, 'ResourceAttributes'],\n    [ColumnHint.TraceStatusCode, 'StatusCode'],\n  ]),\n  traceDurationUnit: TimeUnit.Nanoseconds,\n};\n\nexport const versions: readonly OtelVersion[] = [\n  // When selected, will always keep OTEL config up to date as new versions are added\n  { ...otel129, name: `latest (${otel129.name})`, version: 'latest' },\n  otel129,\n];\n\nexport const getLatestVersion = (): OtelVersion => versions[0];\nexport const getVersion = (version: string | undefined): OtelVersion | undefined => {\n  if (!version) {\n    return;\n  }\n\n  return versions.find(v => v.version === version);\n};\n\nexport default {\n  traceTimestampTableSuffix,\n  versions,\n  getLatestVersion,\n  getVersion\n};\n","import { BooleanFilter, BuilderMode, ColumnHint, DateFilterWithValue, FilterOperator, MultiFilter, NumberFilter, QueryBuilderOptions, QueryType, SelectedColumn, StringFilter, TimeUnit } from 'types/queryBuilder';\nimport otel from 'otel';\n\n/**\n * Generates a SQL string for the given QueryBuilderOptions\n */\nexport const generateSql = (options: QueryBuilderOptions): string => {\n  const hasTraceIdFilter = options.meta?.isTraceIdMode && options.meta?.traceId;\n  if (options.queryType === QueryType.Traces && hasTraceIdFilter) {\n    return generateTraceIdQuery(options);\n  } else if (options.queryType === QueryType.Traces) {\n    return generateTraceSearchQuery(options);\n  } else if (options.queryType === QueryType.Logs) {\n    return generateLogsQuery(options);\n  } else if (options.queryType === QueryType.TimeSeries && options.mode !== BuilderMode.Trend) {\n    return generateSimpleTimeSeriesQuery(options);\n  } else if (options.queryType === QueryType.TimeSeries && options.mode === BuilderMode.Trend) {\n    return generateAggregateTimeSeriesQuery(options);\n  } else if (options.queryType === QueryType.Table) {\n    return generateTableQuery(options);\n  }\n\n  return '';\n}\n\n/**\n * Generates trace search query.\n */\nconst generateTraceSearchQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceId.name)} as traceID`);\n  }\n\n  const traceServiceName = getColumnByHint(options, ColumnHint.TraceServiceName);\n  if (traceServiceName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceServiceName.name)} as serviceName`);\n  }\n\n  const traceOperationName = getColumnByHint(options, ColumnHint.TraceOperationName);\n  if (traceOperationName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceOperationName.name)} as operationName`);\n  }\n\n  const traceStartTime = getColumnByHint(options, ColumnHint.Time);\n  if (traceStartTime !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceStartTime.name)} as startTime`);\n  }\n\n  const traceDurationTime = getColumnByHint(options, ColumnHint.TraceDurationTime);\n  if (traceDurationTime !== undefined) {\n    const timeUnit = options.meta?.traceDurationUnit;\n    selectParts.push(getTraceDurationSelectSql(escapeIdentifier(traceDurationTime.name), timeUnit));\n  }\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates trace query with columns that fit Grafana's Trace panel\n * Column aliases follow this structure:\n * https://grafana.com/docs/grafana/latest/explore/trace-integration/#data-frame-structure\n */\nconst generateTraceIdQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceId.name)} as traceID`);\n  }\n\n  const traceSpanId = getColumnByHint(options, ColumnHint.TraceSpanId);\n  if (traceSpanId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceSpanId.name)} as spanID`);\n  }\n\n  const traceParentSpanId = getColumnByHint(options, ColumnHint.TraceParentSpanId);\n  if (traceParentSpanId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceParentSpanId.name)} as parentSpanID`);\n  }\n\n  const traceServiceName = getColumnByHint(options, ColumnHint.TraceServiceName);\n  if (traceServiceName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceServiceName.name)} as serviceName`);\n  }\n\n  const traceOperationName = getColumnByHint(options, ColumnHint.TraceOperationName);\n  if (traceOperationName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceOperationName.name)} as operationName`);\n  }\n\n  const traceStartTime = getColumnByHint(options, ColumnHint.Time);\n  if (traceStartTime !== undefined) {\n    selectParts.push(`${convertTimeFieldToMilliseconds(escapeIdentifier(traceStartTime.name))} as startTime`);\n  }\n\n  const traceDurationTime = getColumnByHint(options, ColumnHint.TraceDurationTime);\n  if (traceDurationTime !== undefined) {\n    const timeUnit = options.meta?.traceDurationUnit;\n    selectParts.push(getTraceDurationSelectSql(escapeIdentifier(traceDurationTime.name), timeUnit));\n  }\n\n  // TODO: for tags and serviceTags, consider the column type. They might not require mapping, they could already be JSON.\n  const traceTags = getColumnByHint(options, ColumnHint.TraceTags);\n  if (traceTags !== undefined) {\n    selectParts.push(`arrayMap(key -> map('key', key, 'value',${escapeIdentifier(traceTags.name)}[key]), mapKeys(${escapeIdentifier(traceTags.name)})) as tags`);\n  }\n\n  const traceServiceTags = getColumnByHint(options, ColumnHint.TraceServiceTags);\n  if (traceServiceTags !== undefined) {\n    selectParts.push(`arrayMap(key -> map('key', key, 'value',${escapeIdentifier(traceServiceTags.name)}[key]), mapKeys(${escapeIdentifier(traceServiceTags.name)})) as serviceTags`);\n  }\n\n  const traceStatusCode = getColumnByHint(options, ColumnHint.TraceStatusCode);\n  if (traceStatusCode !== undefined) {\n    selectParts.push(`if(${escapeIdentifier(traceStatusCode.name)} IN ('Error', 'STATUS_CODE_ERROR'), 2, 0) as statusCode`);\n  }\n  const selectPartsSql = selectParts.join(', ');\n\n  // Optimize trace ID filtering for OTel enabled trace lookups\n  const hasTraceIdFilter = options.meta?.isTraceIdMode && options.meta?.traceId;\n  const otelVersion = otel.getVersion(options.meta?.otelVersion);\n  const applyTraceIdOptimization = hasTraceIdFilter && traceStartTime !== undefined && options.meta?.otelEnabled && otelVersion;\n  if (applyTraceIdOptimization) {\n    const traceId = options.meta!.traceId;\n    const timestampTable = getTableIdentifier(database, table + otel.traceTimestampTableSuffix);\n    queryParts.push('WITH');\n    queryParts.push(`'${traceId}' as trace_id,`);\n    queryParts.push(`(SELECT min(Start) FROM ${timestampTable} WHERE TraceId = trace_id) as trace_start,`);\n    queryParts.push(`(SELECT max(End) + 1 FROM ${timestampTable} WHERE TraceId = trace_id) as trace_end`);\n  }\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n\n  if (hasTraceIdFilter || filterParts) {\n    queryParts.push('WHERE');\n  }\n\n  if (applyTraceIdOptimization) {\n    queryParts.push('traceID = trace_id');\n    queryParts.push('AND');\n    queryParts.push(`${escapeIdentifier(traceStartTime.name)} >= trace_start`);\n    queryParts.push('AND');\n    queryParts.push(`${escapeIdentifier(traceStartTime.name)} <= trace_end`);\n  } else if (hasTraceIdFilter) {\n    const traceId = options.meta!.traceId;\n    queryParts.push(`traceID = '${traceId}'`);\n  }\n\n  if (filterParts) {\n    if (hasTraceIdFilter) {\n      queryParts.push('AND');\n    }\n\n    queryParts.push(filterParts);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates logs query with columns that fit Grafana's Logs panel\n * Column aliases follow this structure:\n * https://grafana.com/developers/plugin-tools/tutorials/build-a-logs-data-source-plugin#logs-data-frame-format\n *\n * note: column order seems to matter as well as alias name\n */\nconst generateLogsQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map(c => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const logTime = getColumnByHint(options, ColumnHint.Time);\n  if (logTime !== undefined) {\n    // Must be first column in list.\n    logTime.alias = logColumnHintsToAlias.get(ColumnHint.Time);\n    selectParts.push(getColumnIdentifier(logTime));\n  }\n\n  const logMessage = getColumnByHint(options, ColumnHint.LogMessage);\n  if (logMessage !== undefined) {\n    // Must be second column in list.\n    logMessage.alias = logColumnHintsToAlias.get(ColumnHint.LogMessage);\n    selectParts.push(getColumnIdentifier(logMessage));\n  }\n\n  const logLevel = getColumnByHint(options, ColumnHint.LogLevel);\n  if (logLevel !== undefined) {\n    // TODO: \"severity\" should be a number, but \"level\" can be a string? Perhaps we can check the column type here?\n    logLevel.alias = logColumnHintsToAlias.get(ColumnHint.LogLevel);\n    selectParts.push(getColumnIdentifier(logLevel));\n  }\n\n  const logLabels = getColumnByHint(options, ColumnHint.LogLabels);\n  if (logLabels !== undefined) {\n    logLabels.alias = logColumnHintsToAlias.get(ColumnHint.LogLabels);\n    selectParts.push(getColumnIdentifier(logLabels));\n  }\n\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    traceId.alias = logColumnHintsToAlias.get(ColumnHint.TraceId);\n    selectParts.push(getColumnIdentifier(traceId));\n  }\n\n  options.columns?.\n    filter(c => c.hint === undefined). // remove specialized columns\n    forEach(c => selectParts.push(getColumnIdentifier(c)));\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n\n  const filterParts = getFilters(options);\n  const hasLogMessageFilter = logMessage && options.meta?.logMessageLike;\n\n  if (filterParts || hasLogMessageFilter) {\n    queryParts.push('WHERE');\n  }\n\n  if (filterParts) {\n    queryParts.push(filterParts);\n  }\n\n  if (hasLogMessageFilter) {\n    if (filterParts) {\n      queryParts.push('AND');\n    }\n\n    queryParts.push(`(${logMessage.alias || logMessage.name} LIKE '%${options.meta!.logMessageLike}%')`);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates a simple time series query. Includes user selected columns.\n */\nconst generateSimpleTimeSeriesQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map(c => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  const selectParts: string[] = [];\n  const selectNames = new Set<string>();\n  const timeColumn = getColumnByHint(options, ColumnHint.Time);\n  if (timeColumn !== undefined) {\n    timeColumn.alias = 'time';\n    selectParts.push(getColumnIdentifier(timeColumn));\n    selectNames.add(timeColumn.alias);\n  }\n\n  const columnsExcludingTimeColumn = options.columns?.filter(c => c.hint !== ColumnHint.Time);\n  columnsExcludingTimeColumn?.forEach(c => {\n    selectParts.push(getColumnIdentifier(c));\n    selectNames.add(c.alias || c.name);\n  });\n\n  const aggregateSelectParts: string[] = [];\n  options.aggregates?.forEach(agg => {\n    const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n    const name = `${agg.aggregateType}(${agg.column})`;\n    aggregateSelectParts.push(`${name}${alias}`);\n    selectNames.add(alias ? alias.substring(4) : name);\n  });\n\n  options.groupBy?.forEach(g => {\n    if (selectNames.has(g)) {\n      // don't add if already selected\n      return;\n    }\n\n    selectParts.push(g)\n  });\n\n  // (v3) aggregate selections go AFTER group by\n  aggregateSelectParts.forEach(a => selectParts.push(a));\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  const hasAggregates = (options.aggregates?.length || 0 > 0);\n  const hasGroupBy = (options.groupBy?.length || 0 > 0);\n  if (hasAggregates || hasGroupBy) {\n    queryParts.push('GROUP BY');\n  }\n\n  if ((options.groupBy?.length || 0) > 0) {\n    const groupByTime = timeColumn !== undefined ? `, ${timeColumn.alias}` : '';\n    queryParts.push(`${options.groupBy!.join(', ')}${groupByTime}`);\n  } else if (hasAggregates && timeColumn) {\n    queryParts.push(timeColumn.alias!);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates an aggregate time series query.\n */\nconst generateAggregateTimeSeriesQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map(c => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n  const selectParts: string[] = [];\n\n  const timeColumn = getColumnByHint(options, ColumnHint.Time);\n  if (timeColumn !== undefined) {\n    timeColumn.name = `$__timeInterval(${timeColumn.name})`;\n    timeColumn.alias = 'time';\n    selectParts.push(getColumnIdentifier(timeColumn));\n  }\n\n  options.groupBy?.forEach(g => selectParts.push(g));\n\n  options.aggregates?.forEach(agg => {\n    const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n    const name = `${agg.aggregateType}(${agg.column})`;\n    selectParts.push(`${name}${alias}`);\n  });\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  queryParts.push('GROUP BY');\n  if ((options.groupBy?.length || 0) > 0) {\n    const groupByTime = timeColumn !== undefined ? `, ${timeColumn.alias}` : '';\n    queryParts.push(`${options.groupBy!.join(', ')}${groupByTime}`);\n  } else if (timeColumn) {\n    queryParts.push(timeColumn.alias!);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates a table query.\n */\nconst generateTableQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n  const isAggregateMode = options.mode === BuilderMode.Aggregate;\n\n  const queryParts: string[] = [];\n  const selectParts: string[] = [];\n  const selectNames = new Set<string>();\n\n  options.columns?.forEach(c => {\n    selectParts.push(getColumnIdentifier(c));\n    selectNames.add(c.alias || c.name);\n  });\n\n  if (isAggregateMode) {\n    options.aggregates?.forEach(agg => {\n      const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n      const name = `${agg.aggregateType}(${agg.column})`;\n      selectParts.push(`${name}${alias}`);\n      selectNames.add(alias ? alias.substring(4) : name);\n    });\n\n    options.groupBy?.forEach(g => {\n      if (selectNames.has(g)) {\n        // don't add if already selected\n        return;\n      }\n\n      // user must manually select groupBys, for flexibility\n      // selectParts.push(g)\n    });\n  }\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  if (isAggregateMode && (options.groupBy?.length || 0) > 0) {\n    queryParts.push('GROUP BY');\n    queryParts.push(options.groupBy!.join(', '));\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\nexport const isAggregateQuery = (builder: QueryBuilderOptions): boolean => (builder.aggregates?.length || 0) > 0;\nexport const getColumnByHint = (options: QueryBuilderOptions, hint: ColumnHint): SelectedColumn | undefined => options.columns?.find(c => c.hint === hint);\nexport const getColumnIndexByHint = (options: QueryBuilderOptions, hint: ColumnHint): number => (options.columns || []).findIndex(c => c.hint === hint);\nexport const getColumnsByHints = (options: QueryBuilderOptions, hints: readonly ColumnHint[]): readonly SelectedColumn[] => {\n  const columns = [];\n\n  for (let hint of hints) {\n    const col = getColumnByHint(options, hint);\n    if (col !== undefined) {\n      columns.push(col);\n    }\n  }\n\n  return columns;\n}\n\nconst getColumnIdentifier = (col: SelectedColumn): string => {\n  let colName = col.name;\n\n  // allow for functions like count()\n  if (colName.includes('(') || colName.includes(')') || colName.includes('\"') || colName.includes('\"') || colName.includes(' as ')) {\n    colName = col.name\n  } else if (colName.includes(' ')) {\n    colName = escapeIdentifier(col.name);\n  }\n\n  if (col.alias && (col.alias !== col.name && escapeIdentifier(col.alias) !== colName)) {\n    return `${colName} as \"${col.alias}\"`\n  }\n\n  return colName;\n}\n\nconst getTableIdentifier = (database: string, table: string): string => {\n  const sep = (!database || !table) ? '' : '.';\n  return `${escapeIdentifier(database)}${sep}${escapeIdentifier(table)}`;\n}\n\nconst escapeIdentifier = (id: string): string => {\n  return id ? `\"${id}\"` : '';\n}\n\nconst escapeValue = (value: string): string => {\n  if (value.includes('$') || value.includes('(') || value.includes(')') || value.includes('\\'') || value.includes('\"')) {\n    return value;\n  }\n\n  return `'${value}'`;\n}\n\n/**\n * Returns the SELECT column for trace duration.\n * Time unit is used to convert the value to milliseconds, as is required by Grafana's Trace panel.\n */\nconst getTraceDurationSelectSql = (columnIdentifier: string, timeUnit?: TimeUnit): string => {\n  const alias = 'duration';\n  switch (timeUnit) {\n    case TimeUnit.Seconds:\n      return `multiply(${columnIdentifier}, 1000) as ${alias}`;\n    case TimeUnit.Milliseconds:\n      return `${columnIdentifier} as ${alias}`;\n    case TimeUnit.Microseconds:\n      return `multiply(${columnIdentifier}, 0.001) as ${alias}`;\n    case TimeUnit.Nanoseconds:\n      return `multiply(${columnIdentifier}, 0.000001) as ${alias}`;\n    default:\n      return `${columnIdentifier} as ${alias}`;\n  }\n}\n\n/** Returns the input time field converted to a Unix timestamp in nanoseconds and then adjusted to milliseconds. */\nconst convertTimeFieldToMilliseconds = (columnIdentifier: string) =>\n  `multiply(toUnixTimestamp64Nano(${columnIdentifier}), 0.000001)`;\n\n/**\n * Concatenates query parts with no empty spaces.\n */\nconst concatQueryParts = (parts: readonly string[]): string => {\n  let query = '';\n  for (let i = 0; i < parts.length; i++) {\n    const p = parts[i];\n    if (!p) {\n      continue;\n    }\n\n    query += p;\n\n    if (i !== parts.length - 1) {\n      query += ' '\n    }\n  }\n\n  return query;\n}\n\n/**\n * Returns the order by list, excluding the \"ORDER BY\" keyword.\n */\nconst getOrderBy = (options: QueryBuilderOptions): string => {\n  const orderByParts: string[] = [];\n  if ((options.orderBy?.length || 0) > 0) {\n    options.orderBy?.forEach(o => {\n      let colName = o.name;\n      const hintedColumn = o.hint && getColumnByHint(options, o.hint);\n      if (hintedColumn) {\n        colName = hintedColumn.alias || hintedColumn.name;\n      }\n\n      if (!colName) {\n        return;\n      }\n\n      orderByParts.push(`${colName} ${o.dir}`);\n    });\n  }\n\n  return orderByParts.join(', ');\n};\n\n/**\n * Returns the limit clause including the \"LIMIT\" keyword\n */\nconst getLimit = (limit?: number | undefined): string => {\n  limit = Math.max(0, limit || 0);\n  if (limit > 0) {\n    return 'LIMIT ' + limit;\n  }\n\n  return '';\n};\n\n/**\n * Returns the filters in the WHERE clause, excluding the \"WHERE\" keyword\n */\nconst getFilters = (options: QueryBuilderOptions): string => {\n  const filters = options.filters || [];\n  const builtFilters: string[] = [];\n\n  for (const filter of filters) {\n    if (filter.operator === FilterOperator.IsAnything) {\n      continue;\n    }\n\n    const filterParts: string[] = [];\n\n    let column = filter.key;\n    let type = filter.type;\n    const hintedColumn = filter.hint && getColumnByHint(options, filter.hint);\n    if (hintedColumn) {\n      column = hintedColumn.alias || hintedColumn.name;\n      type = hintedColumn.type || type;\n    }\n\n    if (!column) {\n      continue;\n    }\n\n    if (filter.mapKey) {\n      column += `['${filter.mapKey}']`;\n    }\n\n    filterParts.push(column);\n\n    let operator: string = filter.operator;\n    let negate = false;\n    if (filter.operator === FilterOperator.IsEmpty || filter.operator === FilterOperator.IsNotEmpty) {\n      operator = '';\n    } else if (filter.operator === FilterOperator.NotLike) {\n      operator = 'LIKE';\n      negate = true;\n    } else if (filter.operator === FilterOperator.OutsideGrafanaTimeRange) {\n      operator = '';\n      negate = true;\n    } else if (filter.operator === FilterOperator.WithInGrafanaTimeRange) {\n        operator = '';\n    }\n\n    if (operator) {\n      filterParts.push(operator);\n    }\n\n    if (isNullFilter(filter.operator)) {\n      // empty\n    } else if (filter.operator === FilterOperator.IsEmpty) {\n      filterParts.push(`= ''`);\n    } else if (filter.operator === FilterOperator.IsNotEmpty) {\n      filterParts.push(`!= ''`);\n    } else if (isBooleanFilter(type)) {\n      filterParts.push(String((filter as BooleanFilter).value));\n    } else if (isNumberFilter(type)) {\n      filterParts.push(String((filter as NumberFilter).value || '0'));\n    } else if (isDateFilter(type)) {\n      if (isDateFilterWithoutValue(type, filter.operator)) {\n        if (isDateType(type)) {\n          filterParts.push('>=', '\\$__fromTime', 'AND', column, '<=', '\\$__toTime');\n        }\n      } else {\n        switch ((filter as DateFilterWithValue).value) {\n          case 'GRAFANA_START_TIME':\n            if (isDateType(type)) {\n              filterParts.push('\\$__fromTime');\n            }\n            break;\n          case 'GRAFANA_END_TIME':\n            if (isDateType(type)) {\n              filterParts.push('\\$__toTime');\n            }\n            break;\n          default:\n            filterParts.push(escapeValue(String((filter as DateFilterWithValue).value || 'TODAY')));\n        }\n      }\n    } else if (isStringFilter(type, filter.operator)) {\n      if (filter.operator === FilterOperator.Like || filter.operator === FilterOperator.NotLike) {\n        filterParts.push(`'%${filter.value || ''}%'`);\n      } else {\n        filterParts.push(escapeValue((filter as StringFilter).value || ''));\n      }\n    } else if (isMultiFilter(type, filter.operator)) {\n      filterParts.push(`(${(filter as MultiFilter).value?.map(v => escapeValue(v.trim())).join(', ')})`);\n    } else {\n      filterParts.push(escapeValue((filter as StringFilter).value || ''));\n    }\n\n    if (negate) {\n      filterParts.unshift('NOT', '(');\n      filterParts.push(')');\n    }\n\n    filterParts.unshift('(');\n    if (builtFilters.length > 0) {\n      filterParts.unshift(filter.condition);\n    }\n    filterParts.push(')');\n\n    const builtFilter = concatQueryParts(filterParts);\n    builtFilters.push(builtFilter);\n  }\n\n  return concatQueryParts(builtFilters);\n};\n\nconst stripTypeModifiers = (type: string): string => {\n    return type.toLowerCase().\n      replace(/\\(/g, '').\n      replace(/\\)/g, '').\n      replace(/nullable/g, '').\n      replace(/lowcardinality/g, '');\n\n}\nconst isBooleanType = (type: string): boolean => (type?.toLowerCase().startsWith('boolean'));\nconst numberTypes = ['int', 'float', 'decimal'];\nconst isNumberType = (type: string): boolean => numberTypes.some(t => type?.toLowerCase().includes(t));\nconst isDateType = (type: string): boolean => type?.toLowerCase().startsWith('date') || type?.toLowerCase().startsWith('nullable(date');\n// const isDateTimeType = (type: string): boolean => type?.toLowerCase().startsWith('datetime') || type?.toLowerCase().startsWith('nullable(datetime');\nconst isStringType = (type: string): boolean => {\n  type = stripTypeModifiers(type.toLowerCase());\n  return (type === 'string' || type.startsWith('fixedstring'))\n  && !(isBooleanType(type) || isNumberType(type) || isDateType(type));\n}\nconst isNullFilter = (operator: FilterOperator): boolean => operator === FilterOperator.IsNull || operator === FilterOperator.IsNotNull;\nconst isBooleanFilter = (type: string): boolean => isBooleanType(type);\nconst isNumberFilter = (type: string): boolean => isNumberType(type);\nconst isDateFilterWithoutValue = (type: string, operator: FilterOperator): boolean => isDateType(type) && (operator === FilterOperator.WithInGrafanaTimeRange || operator === FilterOperator.OutsideGrafanaTimeRange);\nconst isDateFilter = (type: string): boolean => isDateType(type);\nconst isStringFilter = (type: string, operator: FilterOperator): boolean => isStringType(type) && !(operator === FilterOperator.In || operator === FilterOperator.NotIn);\nconst isMultiFilter = (type: string, operator: FilterOperator): boolean => isStringType(type) && (operator === FilterOperator.In || operator === FilterOperator.NotIn);\n\n/**\n * When filtering in the logs panel in explore view, we need a way to\n * map from the SQL generator's aliases back to the original column hints\n * so that filters can be added properly.\n */\nconst logAliasToColumnHintsEntries: ReadonlyArray<[string, ColumnHint]> = [\n  ['timestamp', ColumnHint.Time],\n  ['body', ColumnHint.LogMessage],\n  ['level', ColumnHint.LogLevel],\n  ['labels', ColumnHint.LogLabels],\n  ['traceID', ColumnHint.TraceId],\n];\nexport const logAliasToColumnHints: Map<string, ColumnHint> = new Map(logAliasToColumnHintsEntries);\nexport const logColumnHintsToAlias: Map<ColumnHint, string> = new Map(logAliasToColumnHintsEntries.map(e => [e[1], e[0]]));\n\n\nexport const _testExports = {\n  getColumnIdentifier,\n  getTableIdentifier,\n  escapeIdentifier,\n  escapeValue,\n  concatQueryParts,\n  getOrderBy,\n  getLimit,\n  getFilters,\n  isStringType,\n};\n","import pluginPackage from '../../package.json';\nimport { isNumber } from 'lodash';\n\nexport const pluginVersion = pluginPackage.version;\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.meta = '';\n\n    const match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    const compared = new SemVersion(version);\n\n    for (let i = 0; i < this.comparable.length; ++i) {\n      if (this.comparable[i] > compared.comparable[i]) {\n        return true;\n      }\n      if (this.comparable[i] < compared.comparable[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isValid(): boolean {\n    return isNumber(this.major);\n  }\n\n  get comparable() {\n    return [this.major, this.minor, this.patch];\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  const aSemver = new SemVersion(a);\n  return aSemver.isGtOrEq(b);\n}\n","import { CoreApp, DataFrame, DataQueryRequest, DataQueryResponse } from \"@grafana/data\";\nimport { ColumnHint, FilterOperator, OrderByDirection, QueryBuilderOptions, QueryType, StringFilter } from \"types/queryBuilder\"\nimport { CHBuilderQuery, CHQuery, EditorType } from \"types/sql\";\nimport { Datasource } from \"./CHDatasource\";\nimport { pluginVersion } from \"utils/version\";\nimport { logColumnHintsToAlias } from \"./sqlGenerator\";\n\n/**\n * Returns true if the builder options contain enough information to start showing a query\n */\nexport const isBuilderOptionsRunnable = (builderOptions: QueryBuilderOptions): boolean => {\n  return (\n    (builderOptions.columns?.length || 0) > 0 ||\n    (builderOptions.filters?.length || 0) > 0 ||\n    (builderOptions.orderBy?.length || 0) > 0 ||\n    (builderOptions.aggregates?.length || 0) > 0 ||\n    (builderOptions.groupBy?.length || 0) > 0\n  );\n};\n\n/**\n * Converts QueryBuilderOptions to Grafana format\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapQueryBuilderOptionsToGrafanaFormat = (t?: QueryBuilderOptions): number => {\n  switch (t?.queryType) {\n    case QueryType.Table:\n      return 1;\n    case QueryType.Logs:\n      return 2;\n    case QueryType.TimeSeries:\n      return 0;\n    case QueryType.Traces:\n      return t.meta?.isTraceIdMode ? 3 : 1;\n    default:\n      return 1 << 8; // an unused u32, defaults to timeseries/graph on plugin backend.\n  }\n};\n\n/**\n * Converts QueryType to Grafana format\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapQueryTypeToGrafanaFormat = (t?: QueryType): number => {\n  switch (t) {\n    case QueryType.Table:\n      return 1;\n    case QueryType.Logs:\n      return 2;\n    case QueryType.TimeSeries:\n      return 0;\n    case QueryType.Traces:\n      return 3;\n    default:\n      return 1 << 8; // an unused u32, defaults to timeseries/graph on plugin backend.\n  }\n};\n\n/**\n * Converts Grafana format to builder QueryType\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapGrafanaFormatToQueryType = (f?: number): QueryType => {\n  switch (f) {\n    case 0:\n      return QueryType.TimeSeries;\n    case 1:\n      return QueryType.Table;\n    case 2:\n      return QueryType.Logs;\n    case 3:\n      return QueryType.Traces;\n    default:\n      return QueryType.Table;\n  }\n};\n\n\n/**\n * Converts label into sql-style column name.\n * Example: \"Test Column\" -> \"test_column\"\n */\nexport const columnLabelToPlaceholder = (label: string) => label.toLowerCase().replace(/ /g, '_');\n\n/**\n * Mutates the DataQueryResponse to include trace/log links on the traceID field.\n * The link will open a second query editor in split view\n * on the explore page with the selected trace ID.\n * \n * Requires defaults to be configured when crossing query types.\n */\nexport const transformQueryResponseWithTraceAndLogLinks = (datasource: Datasource, req: DataQueryRequest<CHQuery>, res: DataQueryResponse): DataQueryResponse => {\n  res.data.forEach((frame: DataFrame) => {\n    const originalQuery = req.targets.find(t => t.refId === frame.refId) as CHBuilderQuery;\n    if (!originalQuery) {\n      return;\n    }\n\n    const traceField = frame.fields.find(field => field.name.toLowerCase() === 'traceid' || field.name.toLowerCase() === 'trace_id');\n    if (!traceField) {\n      return;\n    }\n\n    const traceIdQuery: CHBuilderQuery = {\n      editorType: EditorType.Builder,\n      /**\n       * Evil bug:\n       * The rawSql value might contain time filters such as $__fromTime and $__toTime.\n       * Grafana sees these time range filters as data links and will refuse to enable the traceID link if these are present.\n       * Set rawSql to empty since it gets regenerated when the panel renders anyway.\n       */\n      rawSql: '',\n      builderOptions: {} as QueryBuilderOptions,\n      pluginVersion,\n      refId: 'Trace ID'\n    };\n\n    if (originalQuery.editorType === EditorType.Builder && originalQuery.builderOptions.queryType === QueryType.Traces) {\n      // Copy fields directly from trace search\n\n      traceIdQuery.builderOptions = {\n        ...originalQuery.builderOptions,\n        filters: [], // Clear filters and orderBy since it's an exact ID lookup\n        orderBy: [],\n        meta: {\n          ...originalQuery.builderOptions.meta,\n          minimized: true,\n          isTraceIdMode: true,\n          traceId: '${__value.raw}'\n        }\n      };\n    } else {\n      // Create new query based on trace defaults\n\n      const otelVersion = datasource.getTraceOtelVersion();\n      const options: QueryBuilderOptions = {\n        database: datasource.getDefaultTraceDatabase() || traceIdQuery.builderOptions.database || datasource.getDefaultDatabase(),\n        table: datasource.getDefaultTraceTable() || datasource.getDefaultTable() || traceIdQuery.builderOptions.table,\n        queryType: QueryType.Traces,\n        columns: [],\n        filters: [],\n        orderBy: [],\n        meta: {\n          minimized: true,\n          isTraceIdMode: true,\n          traceId: '${__value.raw}',\n          traceDurationUnit: datasource.getDefaultTraceDurationUnit(),\n          otelEnabled: Boolean(otelVersion),\n          otelVersion: otelVersion,\n        }\n      };\n\n      const defaultColumns = datasource.getDefaultTraceColumns();\n      for (let [hint, colName] of defaultColumns) {\n        options.columns!.push({ name: colName, hint });\n      }\n\n      traceIdQuery.builderOptions = options;\n    }\n\n    const traceLogsQuery: CHBuilderQuery = {\n      editorType: EditorType.Builder,\n      rawSql: '',\n      builderOptions: {} as QueryBuilderOptions,\n      pluginVersion,\n      refId: 'Trace Logs'\n    };\n\n    if (originalQuery.editorType === EditorType.Builder && originalQuery.builderOptions.queryType === QueryType.Logs) {\n      // Copy fields directly from log search\n      traceLogsQuery.builderOptions = {\n        ...originalQuery.builderOptions,\n        filters: [\n          {\n            type: 'string',\n            operator: FilterOperator.Equals,\n            filterType: 'custom',\n            key: '',\n            hint: ColumnHint.TraceId,\n            condition: 'AND',\n            value: '${__value.raw}'\n          } as StringFilter\n        ],\n        orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n        meta: {\n          ...originalQuery.builderOptions.meta,\n          minimized: true,\n        }\n      };\n    } else {\n      // Create new query based on log defaults\n\n      const otelVersion = datasource.getLogsOtelVersion();\n      const options: QueryBuilderOptions = {\n        database: datasource.getDefaultLogsDatabase() || traceLogsQuery.builderOptions.database || datasource.getDefaultDatabase(),\n        table: datasource.getDefaultLogsTable() || datasource.getDefaultTable() || traceLogsQuery.builderOptions.table,\n        queryType: QueryType.Logs,\n        columns: [],\n        orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n        filters: [\n          {\n            type: 'string',\n            operator: FilterOperator.Equals,\n            filterType: 'custom',\n            key: '',\n            hint: ColumnHint.TraceId,\n            condition: 'AND',\n            value: '${__value.raw}'\n          } as StringFilter\n        ],\n        meta: {\n          minimized: true,\n          otelEnabled: Boolean(otelVersion),\n          otelVersion: otelVersion,\n        }\n      };\n\n      const defaultColumns = datasource.getDefaultLogsColumns();\n      for (let [hint, colName] of defaultColumns) {\n        options.columns!.push({ name: colName, hint });\n      }\n\n      traceLogsQuery.builderOptions = options;\n    }\n\n    const openInNewWindow = req.app !== CoreApp.Explore;\n    traceField.config.links = [];\n    traceField.config.links!.push({\n      title: 'View trace',\n      targetBlank: openInNewWindow,\n      url: '',\n      internal: {\n        query: traceIdQuery,\n        datasourceUid: traceIdQuery.datasource?.uid!,\n        datasourceName: traceIdQuery.datasource?.type!,\n        panelsState: {\n          trace: {\n            spanId: '${__value.raw}'\n          }\n        }\n      }\n    });\n    traceField.config.links!.push({\n      title: 'View logs',\n      targetBlank: openInNewWindow,\n      url: '',\n      internal: {\n        query: traceLogsQuery,\n        datasourceUid: traceLogsQuery.datasource?.uid!,\n        datasourceName: traceLogsQuery.datasource?.type!,\n      }\n    }); \n  });\n\n  return res;\n};\n\n\n/**\n * Returns true if the dataframe contains a log label that matches the provided name.\n * \n * This function exists for the logs panel, when clicking \"filter for value\" on a single log row.\n * A dataframe will be provided for that single row, and we need to check the labels object to see if it\n * contains a field with that name. If it does then we can create a filter using the labels column hint.\n */\nexport const dataFrameHasLogLabelWithName = (frame: DataFrame | undefined, name: string): boolean => {\n  if (!frame || !frame.fields || frame.fields.length === 0) {\n    return false;\n  }\n\n  const logLabelsFieldName = logColumnHintsToAlias.get(ColumnHint.LogLabels);\n  const field = frame.fields.find(f => f.name === logLabelsFieldName);\n  if (!field || !field.values || field.values.length < 1 || !field.values.get(0)) {\n    return false;\n  }\n\n  const labels = (field.values.get(0) || {}) as object;\n  const labelKeys = Object.keys(labels);\n\n  return labelKeys.includes(name);\n}\n","import {\n  DataFrame,\n  DataFrameView,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  DataSourceWithLogsContextSupport,\n  DataSourceWithSupplementaryQueriesSupport,\n  getTimeZone,\n  getTimeZoneInfo,\n  LogRowModel,\n  MetricFindValue,\n  QueryFixAction,\n  ScopedVars,\n  SupplementaryQueryType,\n  TypedVariableModel,\n  vectorator,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv } from '@grafana/runtime';\nimport { Observable, map } from 'rxjs';\nimport { CHConfig } from 'types/config';\nimport { EditorType, CHQuery } from 'types/sql';\nimport {\n  QueryType,\n  AggregateColumn,\n  AggregateType,\n  BuilderMode,\n  Filter,\n  FilterOperator,\n  TableColumn,\n  OrderByDirection,\n  QueryBuilderOptions,\n  ColumnHint,\n  TimeUnit,\n  SelectedColumn,\n} from 'types/queryBuilder';\nimport { AdHocFilter } from './adHocFilter';\nimport { cloneDeep, isEmpty, isString } from 'lodash';\nimport {\n  DEFAULT_LOGS_ALIAS,\n  getIntervalInfo,\n  getTimeFieldRoundingClause,\n  LOG_LEVEL_TO_IN_CLAUSE,\n  queryLogsVolume,\n  TIME_FIELD_ALIAS,\n} from './logs';\nimport { generateSql, getColumnByHint, logAliasToColumnHints } from './sqlGenerator';\nimport otel from 'otel';\nimport { ReactNode } from 'react';\nimport { dataFrameHasLogLabelWithName, transformQueryResponseWithTraceAndLogLinks } from './utils';\nimport { pluginVersion } from 'utils/version';\n\nexport class Datasource\n  extends DataSourceWithBackend<CHQuery, CHConfig>\n  implements DataSourceWithSupplementaryQueriesSupport<CHQuery>,\n  DataSourceWithLogsContextSupport<CHQuery>\n{\n  // This enables default annotation support for 7.2+\n  annotations = {};\n  settings: DataSourceInstanceSettings<CHConfig>;\n  adHocFilter: AdHocFilter;\n  skipAdHocFilter = false; // don't apply adhoc filters to the query\n  adHocFiltersStatus = AdHocFilterStatus.none; // ad hoc filters only work with CH 22.7+\n  adHocCHVerReq = { major: 22, minor: 7 };\n\n  constructor(instanceSettings: DataSourceInstanceSettings<CHConfig>) {\n    super(instanceSettings);\n    this.settings = instanceSettings;\n    this.adHocFilter = new AdHocFilter();\n  }\n\n  getDataProvider(\n    type: SupplementaryQueryType,\n    request: DataQueryRequest<CHQuery>\n  ): Observable<DataQueryResponse> | undefined {\n    if (!this.getSupportedSupplementaryQueryTypes().includes(type)) {\n      return undefined;\n    }\n    switch (type) {\n      case SupplementaryQueryType.LogsVolume:\n        const logsVolumeRequest = cloneDeep(request);\n\n        const intervalInfo = getIntervalInfo(logsVolumeRequest.scopedVars);\n        logsVolumeRequest.interval = intervalInfo.interval;\n        logsVolumeRequest.scopedVars.__interval = { value: intervalInfo.interval, text: intervalInfo.interval };\n        logsVolumeRequest.hideFromInspector = true;\n        if (intervalInfo.intervalMs !== undefined) {\n          logsVolumeRequest.intervalMs = intervalInfo.intervalMs;\n          logsVolumeRequest.scopedVars.__interval_ms = {\n            value: intervalInfo.intervalMs,\n            text: intervalInfo.intervalMs,\n          };\n        }\n\n        const targets: CHQuery[] = [];\n        logsVolumeRequest.targets.forEach((target) => {\n          const supplementaryQuery = this.getSupplementaryLogsVolumeQuery(logsVolumeRequest, target);\n          if (supplementaryQuery !== undefined) {\n            targets.push(supplementaryQuery);\n          }\n        });\n\n        if (!targets.length) {\n          return undefined;\n        }\n\n        return queryLogsVolume(\n          this,\n          { ...logsVolumeRequest, targets },\n          {\n            range: logsVolumeRequest.range,\n            targets: logsVolumeRequest.targets,\n          }\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  getSupportedSupplementaryQueryTypes(): SupplementaryQueryType[] {\n    return [SupplementaryQueryType.LogsVolume];\n  }\n\n  getSupplementaryLogsVolumeQuery(logsVolumeRequest: DataQueryRequest<CHQuery>, query: CHQuery): CHQuery | undefined {\n    if (\n      query.editorType !== EditorType.Builder ||\n      query.builderOptions.queryType !== QueryType.Logs ||\n      query.builderOptions.mode !== BuilderMode.List ||\n      query.builderOptions.database === '' ||\n      query.builderOptions.table === ''\n    ) {\n      return undefined;\n    }\n\n    \n\n    const timeColumn = getColumnByHint(query.builderOptions, ColumnHint.Time);\n    if (timeColumn === undefined) {\n      return undefined;\n    }\n\n    const columns: SelectedColumn[] = [];\n    const aggregates: AggregateColumn[] = [];\n    columns.push({\n      name: getTimeFieldRoundingClause(logsVolumeRequest.scopedVars, timeColumn.name),\n      alias: TIME_FIELD_ALIAS,\n      hint: ColumnHint.Time\n    });\n\n    const logLevelColumn = getColumnByHint(query.builderOptions, ColumnHint.LogLevel);\n    if (logLevelColumn) {\n      // Generates aggregates like\n      // sum(toString(\"log_level\") IN ('dbug', 'debug', 'DBUG', 'DEBUG', 'Dbug', 'Debug')) AS debug\n      const llf = `toString(\"${logLevelColumn.name}\")`;\n      let level: keyof typeof LOG_LEVEL_TO_IN_CLAUSE;\n      for (level in LOG_LEVEL_TO_IN_CLAUSE) {\n        aggregates.push({ aggregateType: AggregateType.Sum, column: `${llf} ${LOG_LEVEL_TO_IN_CLAUSE[level]}`, alias: level });\n      }\n    } else {\n      // Count all logs if level column isn't selected\n      aggregates.push({\n        aggregateType: AggregateType.Count,\n        column: '*',\n        alias: DEFAULT_LOGS_ALIAS,\n      });\n    }\n\n    const filters = (query.builderOptions.filters?.slice() || []).map(f => {\n      // In order for a hinted filter to work, the hinted column must be SELECTed OR provide \"key\"\n      // For this histogram query the \"level\" column isn't selected, so we must find the original column name\n      if (f.hint && !f.key) {\n        const originalColumn = getColumnByHint(query.builderOptions, f.hint);\n        f.key = originalColumn?.alias || originalColumn?.name || '';\n      }\n\n      return f;\n    });\n\n    const logVolumeSqlBuilderOptions: QueryBuilderOptions = {\n      database: query.builderOptions.database,\n      table: query.builderOptions.table,\n      queryType: QueryType.TimeSeries,\n      filters,\n      columns,\n      aggregates,\n      orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n    };\n\n    const logVolumeSupplementaryQuery = generateSql(logVolumeSqlBuilderOptions);\n    return {\n      pluginVersion,\n      editorType: EditorType.Builder,\n      builderOptions: logVolumeSqlBuilderOptions,\n      rawSql: logVolumeSupplementaryQuery,\n      refId: '',\n    };\n  }\n\n  getSupplementaryQuery(type: SupplementaryQueryType, query: CHQuery): CHQuery | undefined {\n    return undefined;\n  }\n\n  async metricFindQuery(query: CHQuery | string, options: any) {\n    if (this.adHocFiltersStatus === AdHocFilterStatus.none) {\n      this.adHocFiltersStatus = await this.canUseAdhocFilters();\n    }\n    const chQuery = isString(query) ? { rawSql: query, editorType: EditorType.SQL } : query;\n\n    if (!(chQuery.editorType === EditorType.SQL || chQuery.editorType === EditorType.Builder || !chQuery.editorType)) {\n      return [];\n    }\n\n    if (!chQuery.rawSql) {\n      return [];\n    }\n    const frame = await this.runQuery(chQuery, options);\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    if (frame?.fields?.length === 1) {\n      return vectorator(frame?.fields[0]?.values).map((text) => ({ text, value: text }));\n    }\n    // convention - assume the first field is an id field\n    const ids = frame?.fields[0]?.values;\n    return vectorator(frame?.fields[1]?.values).map((text, i) => ({ text, value: ids.get(i) }));\n  }\n\n  applyTemplateVariables(query: CHQuery, scoped: ScopedVars): CHQuery {\n    let rawQuery = query.rawSql || '';\n    // we want to skip applying ad hoc filters when we are getting values for ad hoc filters\n    const templateSrv = getTemplateSrv();\n    if (!this.skipAdHocFilter) {\n      const adHocFilters = (templateSrv as any)?.getAdhocFilters(this.name);\n      if (this.adHocFiltersStatus === AdHocFilterStatus.disabled && adHocFilters?.length > 0) {\n        throw new Error(\n          `Unable to apply ad hoc filters. Upgrade ClickHouse to >=${this.adHocCHVerReq.major}.${this.adHocCHVerReq.minor} or remove ad hoc filters for the dashboard.`\n        );\n      }\n      rawQuery = this.adHocFilter.apply(rawQuery, adHocFilters);\n    }\n    this.skipAdHocFilter = false;\n    rawQuery = this.applyConditionalAll(rawQuery, getTemplateSrv().getVariables());\n    return {\n      ...query,\n      rawSql: this.replace(rawQuery, scoped) || '',\n    };\n  }\n\n  applyConditionalAll(rawQuery: string, templateVars: TypedVariableModel[]): string {\n    if (!rawQuery) {\n      return rawQuery;\n    }\n    const macro = '$__conditionalAll(';\n    let macroIndex = rawQuery.lastIndexOf(macro);\n\n    while (macroIndex !== -1) {\n      const params = this.getMacroArgs(rawQuery, macroIndex + macro.length - 1);\n      if (params.length !== 2) {\n        return rawQuery;\n      }\n      const templateVarParam = params[1].trim();\n      const varRegex = new RegExp(/(?<=\\$\\{)[\\w\\d]+(?=\\})|(?<=\\$)[\\w\\d]+/);\n      const templateVar = varRegex.exec(templateVarParam);\n      let phrase = params[0];\n      if (templateVar) {\n        const key = templateVars.find((x) => x.name === templateVar[0]) as any;\n        let value = key?.current.value.toString();\n        if (value === '' || value === '$__all') {\n          phrase = '1=1';\n        }\n      }\n      rawQuery = rawQuery.replace(`${macro}${params[0]},${params[1]})`, phrase);\n      macroIndex = rawQuery.lastIndexOf(macro);\n    }\n    return rawQuery;\n  }\n\n  // Support filtering by field value in Explore\n  modifyQuery(query: CHQuery, action: QueryFixAction): CHQuery {\n    if (query.editorType !== EditorType.Builder || !action.options || !action.options.key || !action.options.value) {\n      return query;\n    }\n\n    const columnName = action.options.key;\n    const actionFrame: DataFrame | undefined = (action as any).frame;\n    const actionValue = action.options.value;\n\n    // Find selected column by alias/name\n    const lookupByAlias = query.builderOptions.columns?.find(c => c.alias === columnName); // Check all aliases first,\n    const lookupByName = query.builderOptions.columns?.find(c => c.name === columnName);   // then try matching column name\n    const lookupByLogsAlias = logAliasToColumnHints.has(columnName) ? getColumnByHint(query.builderOptions, logAliasToColumnHints.get(columnName)!) : undefined;\n    const lookupByLogLabels = dataFrameHasLogLabelWithName(actionFrame, columnName) && getColumnByHint(query.builderOptions, ColumnHint.LogLabels);\n    const column = lookupByAlias || lookupByName || lookupByLogsAlias || lookupByLogLabels;\n    \n    let nextFilters: Filter[] = (query.builderOptions.filters?.slice() || []);\n    if (action.type === 'ADD_FILTER') {\n      // we need to remove *any other EQ or NE* for the same field,\n      // because we don't want to end up with two filters like `level=info` AND `level=error`\n      nextFilters = nextFilters.filter(f =>\n        !(\n          f.type === 'string' &&\n          ((column && column.hint && f.hint) ? f.hint === column.hint : f.key === columnName) &&\n          (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals || f.operator === FilterOperator.NotEquals)\n        ) &&\n        !(\n          f.type.toLowerCase().startsWith('map') &&\n          (column && lookupByLogLabels && f.mapKey === columnName) &&\n          (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals || f.operator === FilterOperator.NotEquals)\n        )\n      );\n\n      nextFilters.push({\n        condition: 'AND',\n        key: (column && column.hint) ? '' : columnName,\n        hint: (column && column.hint) ? column.hint : undefined,\n        mapKey: lookupByLogLabels ? columnName : undefined,\n        type: lookupByLogLabels ? 'Map(String, String)' : 'string',\n        filterType: 'custom',\n        operator: FilterOperator.Equals,\n        value: actionValue,\n      });\n    } else if (action.type === 'ADD_FILTER_OUT') {\n      // with this we might want to add multiple values as NE filters\n      // for example, `level != info` AND `level != debug`\n      // thus, here we remove only exactly matching NE filters or an existing EQ filter for this field\n      nextFilters = nextFilters.filter(f =>\n        !(\n          (f.type === 'string' &&\n            ((column && column.hint && f.hint) ? f.hint === column.hint : f.key === columnName) &&\n            'value' in f && f.value === actionValue &&\n            (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.NotEquals)\n          ) ||\n          (\n            f.type === 'string' &&\n            ((column && column.hint && f.hint) ? f.hint === column.hint : f.key === columnName) &&\n            (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals)\n          ) ||\n          (\n            f.type.toLowerCase().startsWith('map') &&\n            (column && lookupByLogLabels && f.mapKey === columnName) &&\n            (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals)\n          )\n        )\n      );\n\n      nextFilters.push({\n        condition: 'AND',\n        key: (column && column.hint) ? '' : columnName,\n        hint: (column && column.hint) ? column.hint : undefined,\n        mapKey: lookupByLogLabels ? columnName : undefined,\n        type: lookupByLogLabels ? 'Map(String, String)' : 'string',\n        filterType: 'custom',\n        operator: FilterOperator.NotEquals,\n        value: actionValue,\n      });\n    }\n\n    // the query is updated to trigger the URL update and propagation to the panels\n    const nextOptions = { ...query.builderOptions, filters: nextFilters };\n    return {\n      ...query,\n      rawSql: generateSql(nextOptions),\n      builderOptions: nextOptions,\n    };\n  }\n\n  private getMacroArgs(query: string, argsIndex: number): string[] {\n    const args = [] as string[];\n    const re = /\\(|\\)|,/g;\n    let bracketCount = 0;\n    let lastArgEndIndex = 1;\n    let regExpArray: RegExpExecArray | null;\n    const argsSubstr = query.substring(argsIndex, query.length);\n    while ((regExpArray = re.exec(argsSubstr)) !== null) {\n      const foundNode = regExpArray[0];\n      if (foundNode === '(') {\n        bracketCount++;\n      } else if (foundNode === ')') {\n        bracketCount--;\n      }\n      if (foundNode === ',' && bracketCount === 1) {\n        args.push(argsSubstr.substring(lastArgEndIndex, re.lastIndex - 1));\n        lastArgEndIndex = re.lastIndex;\n      }\n      if (bracketCount === 0) {\n        args.push(argsSubstr.substring(lastArgEndIndex, re.lastIndex - 1));\n        return args;\n      }\n    }\n    return [];\n  }\n\n  private replace(value?: string, scopedVars?: ScopedVars) {\n    if (value !== undefined) {\n      return getTemplateSrv().replace(value, scopedVars, this.format);\n    }\n    return value;\n  }\n\n  private format(value: any) {\n    if (Array.isArray(value)) {\n      return `'${value.join(\"','\")}'`;\n    }\n    return value;\n  }\n\n  getDefaultDatabase(): string {\n    return this.settings.jsonData.defaultDatabase || 'default';\n  }\n\n  getDefaultTable(): string | undefined {\n    return this.settings.jsonData.defaultTable;\n  }\n\n  getDefaultLogsDatabase(): string | undefined {\n    return this.settings.jsonData.logs?.defaultDatabase;\n  }\n\n  getDefaultLogsTable(): string | undefined {\n    return this.settings.jsonData.logs?.defaultTable;\n  }\n\n  getDefaultLogsColumns(): Map<ColumnHint, string> {\n    const result = new Map<ColumnHint, string>();\n    const logsConfig = this.settings.jsonData.logs;\n    if (!logsConfig) {\n      return result;\n    }\n\n    const otelEnabled = logsConfig.otelEnabled;\n    const otelVersion = logsConfig.otelVersion;\n\n    const otelConfig = otel.getVersion(otelVersion);\n    if (otelEnabled && otelConfig) {\n      return otelConfig.logColumnMap;\n    }\n\n    logsConfig.timeColumn && result.set(ColumnHint.Time, logsConfig.timeColumn);\n    logsConfig.levelColumn && result.set(ColumnHint.LogLevel, logsConfig.levelColumn);\n    logsConfig.messageColumn && result.set(ColumnHint.LogMessage, logsConfig.messageColumn);\n\n    return result;\n  }\n\n  /**\n   * Get configured OTEL version for logs. Returns undefined when versioning is disabled/unset.\n   */\n  getLogsOtelVersion(): string | undefined {\n    const logConfig = this.settings.jsonData.logs;\n    return logConfig?.otelEnabled ? (logConfig.otelVersion || undefined) : undefined;\n  }\n\n  getDefaultTraceDatabase(): string | undefined {\n    return this.settings.jsonData.traces?.defaultDatabase;\n  }\n\n  getDefaultTraceTable(): string | undefined {\n    return this.settings.jsonData.traces?.defaultTable;\n  }\n\n  getDefaultTraceColumns(): Map<ColumnHint, string> {\n    const result = new Map<ColumnHint, string>();\n    const traceConfig = this.settings.jsonData.traces;\n    if (!traceConfig) {\n      return result;\n    }\n\n    const otelEnabled = traceConfig.otelEnabled;\n    const otelVersion = traceConfig.otelVersion;\n\n    const otelConfig = otel.getVersion(otelVersion);\n    if (otelEnabled && otelConfig) {\n      return otelConfig.traceColumnMap;\n    }\n\n    traceConfig.traceIdColumn && result.set(ColumnHint.TraceId, traceConfig.traceIdColumn);\n    traceConfig.spanIdColumn && result.set(ColumnHint.TraceSpanId, traceConfig.spanIdColumn);\n    traceConfig.operationNameColumn && result.set(ColumnHint.TraceOperationName, traceConfig.operationNameColumn);\n    traceConfig.parentSpanIdColumn && result.set(ColumnHint.TraceParentSpanId, traceConfig.parentSpanIdColumn);\n    traceConfig.serviceNameColumn && result.set(ColumnHint.TraceServiceName, traceConfig.serviceNameColumn);\n    traceConfig.durationColumn && result.set(ColumnHint.TraceDurationTime, traceConfig.durationColumn);\n    traceConfig.startTimeColumn && result.set(ColumnHint.Time, traceConfig.startTimeColumn);\n    traceConfig.tagsColumn && result.set(ColumnHint.TraceTags, traceConfig.tagsColumn);\n    traceConfig.serviceTagsColumn && result.set(ColumnHint.TraceServiceTags, traceConfig.serviceTagsColumn);\n\n    return result;\n  }\n\n  /**\n   * Get configured OTEL version for traces. Returns undefined when versioning is disabled/unset.\n   */\n  getTraceOtelVersion(): string | undefined {\n    const traceConfig = this.settings.jsonData.traces;\n    return traceConfig?.otelEnabled ? (traceConfig.otelVersion || undefined) : undefined;\n  }\n\n  getDefaultTraceDurationUnit(): TimeUnit {\n    return this.settings.jsonData.traces?.durationUnit as TimeUnit || TimeUnit.Nanoseconds;\n  }\n\n  async fetchDatabases(): Promise<string[]> {\n    return this.fetchData('SHOW DATABASES');\n  }\n\n  async fetchTables(db?: string): Promise<string[]> {\n    const rawSql = db ? `SHOW TABLES FROM \"${db}\"` : 'SHOW TABLES';\n    return this.fetchData(rawSql);\n  }\n\n  /**\n   * Used to populate suggestions in the filter editor for Map columns.\n   * \n   * Samples rows to get a unique set of keys for the map.\n   * May not include ALL keys for a given dataset.\n   * \n   * TODO: This query can be slow/expensive\n   */\n  async fetchUniqueMapKeys(mapColumn: string, db: string, table: string): Promise<string[]> {\n    const rawSql = `SELECT DISTINCT arrayJoin(${mapColumn}.keys) as keys FROM \"${db}\".\"${table}\" LIMIT 1000`;\n    return this.fetchData(rawSql);\n  }\n\n  async fetchEntities() {\n    return this.fetchTables();\n  }\n\n  async fetchFields(database: string, table: string): Promise<string[]> {\n    return this.fetchData(`DESC TABLE \"${database}\".\"${table}\"`);\n  }\n\n  /**\n   * Fetches column suggestions from the table schema.\n   */\n  async fetchColumnsFromTable(database: string | undefined, table: string): Promise<TableColumn[]> {\n    const prefix = Boolean(database) ? `\"${database}\".` : '';\n    const rawSql = `DESC TABLE ${prefix}\"${table}\"`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const view = new DataFrameView(frame);\n    return view.map(item => ({\n      name: item[0],\n      type: item[1],\n      label: item[0],\n      picklistValues: [],\n    }));\n  }\n\n  /**\n   * Fetches column suggestions from an alias definition table.\n   */\n  async fetchColumnsFromAliasTable(fullTableName: string): Promise<TableColumn[]> {\n    const rawSql = `SELECT alias, select, \"type\" FROM ${fullTableName}`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const view = new DataFrameView(frame);\n    return view.map(item => ({\n      name: item[1],\n      type: item[2],\n      label: item[0],\n      picklistValues: [],\n    }));\n  }\n\n  getAliasTable(targetDatabase: string | undefined, targetTable: string): string | null {\n    const aliasEntries = this.settings?.jsonData?.aliasTables || [];\n    const matchedEntry = aliasEntries.find(e => {\n      const matchDatabase = !e.targetDatabase || (e.targetDatabase === targetDatabase);\n      const matchTable = e.targetTable === targetTable;\n      return matchDatabase && matchTable;\n    }) || null;\n\n    if (matchedEntry === null) {\n      return null;\n    }\n\n    const aliasDatabase = matchedEntry.aliasDatabase || targetDatabase || null;\n    const aliasTable = matchedEntry.aliasTable;\n    const prefix = Boolean(aliasDatabase) ? `\"${aliasDatabase}\".` : '';\n    return `${prefix}\"${aliasTable}\"`;\n  }\n\n  async fetchColumns(database: string | undefined, table: string): Promise<TableColumn[]> {\n    const fullAliasTableName = this.getAliasTable(database, table);\n    if (fullAliasTableName !== null) {\n      return this.fetchColumnsFromAliasTable(fullAliasTableName);\n    }\n\n    return this.fetchColumnsFromTable(database, table);\n  }\n\n  private async fetchData(rawSql: string) {\n    const frame = await this.runQuery({ rawSql });\n    return this.values(frame);\n  }\n\n  private getTimezone(request: DataQueryRequest<CHQuery>): string | undefined {\n    // timezone specified in the time picker\n    if (request.timezone && request.timezone !== 'browser') {\n      return request.timezone;\n    }\n    // fall back to the local timezone\n    const localTimezoneInfo = getTimeZoneInfo(getTimeZone(), Date.now());\n    return localTimezoneInfo?.ianaName;\n  }\n\n  query(request: DataQueryRequest<CHQuery>): Observable<DataQueryResponse> {\n    const targets = request.targets\n      // filters out queries disabled in UI\n      .filter((t) => t.hide !== true)\n      // attach timezone information\n      .map((t) => {\n        return {\n          ...t,\n          meta: {\n            ...t?.meta,\n            timezone: this.getTimezone(request),\n          },\n        };\n      });\n\n    return super.query({\n      ...request,\n      targets,\n    }).pipe(map((res: DataQueryResponse) => transformQueryResponseWithTraceAndLogLinks(this, request, res)));\n  }\n\n  private runQuery(request: Partial<CHQuery>, options?: any): Promise<DataFrame> {\n    return new Promise((resolve) => {\n      const req = {\n        targets: [{ ...request, refId: String(Math.random()) }],\n        range: options ? options.range : (getTemplateSrv() as any).timeRange,\n      } as DataQueryRequest<CHQuery>;\n      this.query(req).subscribe((res: DataQueryResponse) => {\n        resolve(res.data[0] || { fields: [] });\n      });\n    });\n  }\n\n  private values(frame: DataFrame) {\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    return vectorator(frame?.fields[0]?.values).map((text) => text);\n  }\n\n  async getTagKeys(): Promise<MetricFindValue[]> {\n    if (this.adHocFiltersStatus === AdHocFilterStatus.disabled || this.adHocFiltersStatus === AdHocFilterStatus.none) {\n      this.adHocFiltersStatus = await this.canUseAdhocFilters();\n      if (this.adHocFiltersStatus === AdHocFilterStatus.disabled) {\n        return {} as MetricFindValue[];\n      }\n    }\n    const { type, frame } = await this.fetchTags();\n    if (type === TagType.query) {\n      return frame.fields.map((f) => ({ text: f.name }));\n    }\n    const view = new DataFrameView(frame);\n    return view.map((item) => ({\n      text: `${item[2]}.${item[0]}`,\n    }));\n  }\n\n  async getTagValues({ key }: any): Promise<MetricFindValue[]> {\n    const { type } = this.getTagSource();\n    this.skipAdHocFilter = true;\n    if (type === TagType.query) {\n      return this.fetchTagValuesFromQuery(key);\n    }\n    return this.fetchTagValuesFromSchema(key);\n  }\n\n  private async fetchTagValuesFromSchema(key: string): Promise<MetricFindValue[]> {\n    const { from } = this.getTagSource();\n    const [table, col] = key.split('.');\n    const source = from?.includes('.') ? `${from.split('.')[0]}.${table}` : table;\n    const rawSql = `select distinct ${col} from ${source} limit 1000`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const field = frame.fields[0];\n    // Convert to string to avoid https://github.com/grafana/grafana/issues/12209\n    return vectorator(field.values)\n      .filter((value) => value !== null)\n      .map((value) => {\n        return { text: String(value) };\n      });\n  }\n\n  private async fetchTagValuesFromQuery(key: string): Promise<MetricFindValue[]> {\n    const { frame } = await this.fetchTags();\n    const field = frame.fields.find((f) => f.name === key);\n    if (field) {\n      // Convert to string to avoid https://github.com/grafana/grafana/issues/12209\n      return vectorator(field.values)\n        .filter((value) => value !== null)\n        .map((value) => {\n          return { text: String(value) };\n        });\n    }\n    return [];\n  }\n\n  private async fetchTags(): Promise<Tags> {\n    const tagSource = this.getTagSource();\n    this.skipAdHocFilter = true;\n\n    if (tagSource.source === undefined) {\n      const rawSql = 'SELECT name, type, table FROM system.columns';\n      const results = await this.runQuery({ rawSql });\n      return { type: TagType.schema, frame: results };\n    }\n\n    if (tagSource.type === TagType.query) {\n      this.adHocFilter.setTargetTableFromQuery(tagSource.source);\n    }\n\n    const results = await this.runQuery({ rawSql: tagSource.source });\n    return { type: tagSource.type, frame: results };\n  }\n\n  private getTagSource() {\n    // @todo https://github.com/grafana/grafana/issues/13109\n    const ADHOC_VAR = '$clickhouse_adhoc_query';\n    const defaultDatabase = this.getDefaultDatabase();\n    let source = getTemplateSrv().replace(ADHOC_VAR);\n    if (source === ADHOC_VAR && isEmpty(defaultDatabase)) {\n      return { type: TagType.schema, source: undefined };\n    }\n    source = source === ADHOC_VAR ? defaultDatabase! : source;\n    if (source.toLowerCase().startsWith('select')) {\n      return { type: TagType.query, source };\n    }\n    if (!source.includes('.')) {\n      const sql = `SELECT name, type, table FROM system.columns WHERE database IN ('${source}')`;\n      return { type: TagType.schema, source: sql, from: source };\n    }\n    const [db, table] = source.split('.');\n    const sql = `SELECT name, type, table FROM system.columns WHERE database IN ('${db}') AND table = '${table}'`;\n    return { type: TagType.schema, source: sql, from: source };\n  }\n\n  // Returns true if ClickHouse's version is greater than or equal to 22.7\n  // 22.7 added 'settings additional_table_filters' which is used for ad hoc filters\n  private async canUseAdhocFilters(): Promise<AdHocFilterStatus> {\n    this.skipAdHocFilter = true;\n    const data = await this.fetchData(`SELECT version()`);\n    try {\n      const verString = (data[0] as unknown as string).split('.');\n      const ver = { major: Number.parseInt(verString[0], 10), minor: Number.parseInt(verString[1], 10) };\n      return ver.major > this.adHocCHVerReq.major ||\n        (ver.major === this.adHocCHVerReq.major && ver.minor >= this.adHocCHVerReq.minor)\n        ? AdHocFilterStatus.enabled\n        : AdHocFilterStatus.disabled;\n    } catch (err) {\n      console.error(`Unable to parse ClickHouse version: ${err}`);\n      throw err;\n    }\n  }\n\n  // interface DataSourceWithLogsContextSupport\n  async getLogRowContext(row: LogRowModel, options?: any | undefined, query?: CHQuery | undefined): Promise<DataQueryResponse> {\n    return {} as DataQueryResponse;\n  }\n\n  showContextToggle(row?: LogRowModel): boolean {\n    return false;\n  }\n  \n  getLogRowContextUi(row: LogRowModel, runContextQuery?: (() => void) | undefined): ReactNode {\n    return false;\n  }\n}\n\nenum TagType {\n  query,\n  schema,\n}\n\nenum AdHocFilterStatus {\n  none = 0,\n  enabled,\n  disabled,\n}\n\ninterface Tags {\n  type?: TagType;\n  frame: DataFrame;\n}\n","import React, { ChangeEvent, MouseEvent, FC } from 'react';\nimport { Input, Button, TextArea, Field } from '@grafana/ui';\n\ninterface Props {\n  label: string;\n  hasCert: boolean;\n  placeholder: string;\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const CertificationKey: FC<Props> = ({ hasCert, label, onChange, onClick, placeholder }) => {\n  return (\n    <Field label={label}>\n      {hasCert ? (\n        <>\n          <Input type=\"text\" disabled value=\"configured\" width={24} />\n          <Button variant=\"secondary\" onClick={onClick} style={{ marginLeft: 4 }}>\n            Reset\n          </Button>\n        </>\n      ) : (\n        <TextArea rows={7} onChange={onChange} placeholder={placeholder} required />\n      )}\n    </Field>\n  );\n};\n","import { DataSourceJsonData, KeyValue } from '@grafana/data';\n\nexport interface CHConfig extends DataSourceJsonData {\n  /**\n   * The version of the plugin this config was saved with\n   */\n  version: string;\n\n  host: string;\n  port: number;\n  protocol: Protocol;\n  secure?: boolean;\n  path?: string;\n\n  tlsSkipVerify?: boolean;\n  tlsAuth?: boolean;\n  tlsAuthWithCACert?: boolean;\n\n  username: string;\n\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  dialTimeout?: string;\n  queryTimeout?: string;\n  validateSql?: boolean;\n\n  logs?: CHLogsConfig;\n  traces?: CHTracesConfig;\n\n  aliasTables?: AliasTableEntry[];\n\n  httpHeaders?: CHHttpHeader[];\n  forwardGrafanaHeaders?: boolean;\n  \n  customSettings?: CHCustomSetting[];\n  enableSecureSocksProxy?: boolean;\n}\n\ninterface CHSecureConfigProperties {\n  password?: string;\n\n  tlsCACert?: string;\n  tlsClientCert?: string;\n  tlsClientKey?: string;\n}\nexport type CHSecureConfig = CHSecureConfigProperties | KeyValue<string>;\n\nexport interface CHHttpHeader {\n  name: string;\n  value: string;\n  secure: boolean;\n}\n\nexport interface CHCustomSetting {\n  setting: string;\n  value: string;\n}\n\n\nexport interface CHLogsConfig {\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  otelEnabled?: boolean;\n  otelVersion?: string;\n\n  timeColumn?: string;\n  levelColumn?: string;\n  messageColumn?: string;\n}\n\nexport interface CHTracesConfig {\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  otelEnabled?: boolean;\n  otelVersion?: string;\n\n  traceIdColumn?: string;\n  spanIdColumn?: string;\n  operationNameColumn?: string;\n  parentSpanIdColumn?: string;\n  serviceNameColumn?: string;\n  durationColumn?: string;\n  durationUnit?: string;\n  startTimeColumn?: string;\n  tagsColumn?: string;\n  serviceTagsColumn?: string;\n}\n\nexport interface AliasTableEntry {\n  targetDatabase: string;\n  targetTable: string;\n  aliasDatabase: string;\n  aliasTable: string;\n}\n\nexport enum Protocol {\n  Native = 'native',\n  Http = 'http',\n}\n","import React, { useState, ReactNode } from 'react';\nimport { css } from '@emotion/css';\nimport { useTheme2, IconButton, IconName } from '@grafana/ui';\n\nexport type Props = {\n  title: string;\n  description?: ReactNode;\n  isCollapsible?: boolean;\n  isInitiallyOpen?: boolean;\n  kind?: 'section' | 'sub-section';\n  className?: string;\n  children: ReactNode;\n};\n\nexport const GenericConfigSection = ({\n  children,\n  title,\n  description,\n  isCollapsible = false,\n  isInitiallyOpen = true,\n  kind = 'section',\n  className,\n}: Props) => {\n  const { colors, typography, spacing } = useTheme2();\n  const [isOpen, setIsOpen] = useState(isCollapsible ? isInitiallyOpen : true);\n  const iconName: IconName = isOpen ? 'angle-up' : 'angle-down';\n  const isSubSection = kind === 'sub-section';\n  const collapsibleButtonAriaLabel = `${isOpen ? 'Collapse' : 'Expand'} section ${title}`;\n\n  const styles = {\n    header: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    }),\n    title: css({\n      margin: 0,\n    }),\n    subtitle: css({\n      margin: 0,\n      fontWeight: typography.fontWeightRegular,\n    }),\n    descriptionText: css({\n      marginTop: spacing(isSubSection ? 0.25 : 0.5),\n      marginBottom: 0,\n      ...typography.bodySmall,\n      color: colors.text.secondary,\n    }),\n    content: css({\n      marginTop: spacing(2),\n    }),\n  };\n\n  return (\n    <div className={className}>\n      <div className={styles.header}>\n        {kind === 'section' ? <h3 className={styles.title}>{title}</h3> : <h6 className={styles.subtitle}>{title}</h6>}\n        {isCollapsible && (\n          <IconButton\n            name={iconName}\n            onClick={() => setIsOpen(!isOpen)}\n            type=\"button\"\n            size=\"xl\"\n            aria-label={collapsibleButtonAriaLabel}\n          />\n        )}\n      </div>\n      {description && <p className={styles.descriptionText}>{description}</p>}\n      {isOpen && <div className={styles.content}>{children}</div>}\n    </div>\n  );\n};\n","import React from 'react';\nimport { GenericConfigSection, Props as GenericConfigSectionProps } from './GenericConfigSection';\n\ntype Props = Omit<GenericConfigSectionProps, 'kind'>;\n\nexport const ConfigSection = ({ children, ...props }: Props) => {\n  return (\n    <GenericConfigSection {...props} kind=\"section\">\n      {children}\n    </GenericConfigSection>\n  );\n};\n","import React from 'react';\nimport { GenericConfigSection, Props as GenericConfigSectionProps } from './GenericConfigSection';\n\ntype Props = Omit<GenericConfigSectionProps, 'kind'>;\n\nexport const ConfigSubSection = ({ children, ...props }: Props) => {\n  return (\n    <GenericConfigSection {...props} kind=\"sub-section\">\n      {children}\n    </GenericConfigSection>\n  );\n};\n","import React from 'react';\nimport { cx, css } from '@emotion/css';\nimport { useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  dataSourceName: string;\n  docsLink: string;\n  hasRequiredFields?: boolean;\n  className?: string;\n};\n\nexport const DataSourceDescription = ({ dataSourceName, docsLink, hasRequiredFields = true, className }: Props) => {\n  const theme = useTheme2();\n\n  const styles = {\n    container: css({\n      p: {\n        margin: 0,\n      },\n      'p + p': {\n        marginTop: theme.spacing(2),\n      },\n    }),\n    text: css({\n      ...theme.typography.body,\n      color: theme.colors.text.secondary,\n      a: css({\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecoration: 'none',\n        },\n      }),\n    }),\n  };\n\n  return (\n    <div className={cx(styles.container, className)}>\n      <p className={styles.text}>\n        Before you can use the {dataSourceName} data source, you must configure it below or in the config file. For\n        detailed instructions,{' '}\n        <a href={docsLink} target=\"_blank\" rel=\"noreferrer\">\n          view the documentation\n        </a>\n        .\n      </p>\n      {hasRequiredFields && (\n        <p className={styles.text}>\n          <i>Fields marked with * are required</i>\n        </p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Divider as GrafanaDivider, useTheme2 } from '@grafana/ui';\nimport { config } from '@grafana/runtime';\nimport { isVersionGtOrEq } from 'utils/version';\n\nexport function Divider() {\n  const theme = useTheme2();\n  return isVersionGtOrEq(config.buildInfo.version, '10.1.0') ? (\n    <GrafanaDivider />\n  ) : (\n    <div\n      style={{ borderTop: `1px solid ${theme.colors.border.weak}`, margin: theme.spacing(2, 0), width: '100%' }}\n    ></div>\n  );\n}\n","import { ColumnHint } from \"types/queryBuilder\";\n\nexport default {\n  components: {\n    Config: {\n      ConfigEditor: {\n        serverAddress: {\n          label: 'Server address',\n          placeholder: 'Server address',\n          tooltip: 'ClickHouse host address',\n          error: 'Server address required'\n        },\n        serverPort: {\n          label: 'Server port',\n          insecureNativePort: '9000',\n          insecureHttpPort: '8123',\n          secureNativePort: '9440',\n          secureHttpPort: '8443',\n          tooltip: 'ClickHouse server port',\n          error: 'Port is required'\n        },\n        path: {\n          label: 'HTTP URL Path',\n          tooltip: 'Additional URL path for HTTP requests',\n          placeholder: 'additional-path'\n        },\n        protocol: {\n          label: 'Protocol',\n          tooltip: 'Native or HTTP for server protocol',\n        },\n        username: {\n          label: 'Username',\n          placeholder: 'default',\n          tooltip: 'ClickHouse username',\n        },\n        password: {\n          label: 'Password',\n          placeholder: 'password',\n          tooltip: 'ClickHouse password',\n        },\n        tlsSkipVerify: {\n          label: 'Skip TLS Verify',\n          tooltip: 'Skip TLS Verify',\n        },\n        tlsClientAuth: {\n          label: 'TLS Client Auth',\n          tooltip: 'TLS Client Auth',\n        },\n        tlsAuthWithCACert: {\n          label: 'With CA Cert',\n          tooltip: 'Needed for verifying self-signed TLS Certs',\n        },\n        tlsCACert: {\n          label: 'CA Cert',\n          placeholder: 'CA Cert. Begins with -----BEGIN CERTIFICATE-----',\n        },\n        tlsClientCert: {\n          label: 'Client Cert',\n          placeholder: 'Client Cert. Begins with -----BEGIN CERTIFICATE-----',\n        },\n        tlsClientKey: {\n          label: 'Client Key',\n          placeholder: 'Client Key. Begins with -----BEGIN RSA PRIVATE KEY-----',\n        },\n        secure: {\n          label: 'Secure Connection',\n          tooltip: 'Toggle on if the connection is secure',\n        },\n        secureSocksProxy: {\n          label: 'Enable Secure Socks Proxy',\n          tooltip: 'Enable proxying the datasource connection through the secure socks proxy to a different network.',\n        },\n      },\n      HttpHeadersConfig: {\n        title: 'HTTP Headers',\n        label: 'Custom HTTP Headers',\n        description: 'Add Custom HTTP headers when querying the database',\n        headerNameLabel: 'Header Name',\n        headerNamePlaceholder: 'X-Custom-Header',\n        insecureHeaderValueLabel: 'Header Value',\n        secureHeaderValueLabel: 'Secure Header Value',\n        secureLabel: 'Secure',\n        addHeaderLabel: 'Add Header',\n        forwardGrafanaHeaders: {\n          label: 'Forward Grafana HTTP Headers',\n          tooltip: 'Forward Grafana HTTP Headers to datasource.',\n        },\n      },\n      AliasTableConfig: {\n        title: 'Column Alias Tables',\n        descriptionParts: ['Provide alias tables with a', '(`alias` String, `select` String, `type` String)', 'schema to use as a source for column selection.'],\n        addTableLabel: 'Add Table',\n        targetDatabaseLabel: 'Target Database',\n        targetDatabasePlaceholder: '(optional)',\n        targetTableLabel: 'Target Table',\n        aliasDatabaseLabel: 'Alias Database',\n        aliasDatabasePlaceholder: '(optional)',\n        aliasTableLabel: 'Alias Table',\n      },\n\n      DefaultDatabaseTableConfig: {\n        title: 'Default DB and table',\n        database: {\n          label: 'Default database',\n          description: 'the default database used by the query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default'\n        },\n        table: {\n          label: 'Default table',\n          description: 'the default table used by the query builder',\n          name: 'defaultTable',\n          placeholder: 'table'\n        },\n      },\n      QuerySettingsConfig: {\n        title: 'Query settings',\n        dialTimeout: {\n          label: 'Dial Timeout (seconds)',\n          tooltip: 'Timeout in seconds for connection',\n          name: 'dialTimeout',\n          placeholder: '10',\n        },\n        queryTimeout: {\n          label: 'Query Timeout (seconds)',\n          tooltip: 'Timeout in seconds for read queries',\n          name: 'queryTimeout',\n          placeholder: '60',\n        },\n        validateSql: {\n          label: 'Validate SQL',\n          tooltip: 'Validate SQL in the editor.',\n        }\n      },\n      TracesConfig: {\n        title: 'Traces configuration',\n        description: '(Optional) Default settings for trace queries',\n        defaultDatabase: {\n          label: 'Default trace database',\n          description: 'the default database used by the trace query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default'\n        },\n        defaultTable: {\n          label: 'Default trace table',\n          description: 'the default table used by the trace query builder',\n          name: 'defaultTable'\n        },\n        columns: {\n         title: 'Default columns',\n         description: 'Default columns for trace queries. Leave empty to disable.',\n         \n         traceId: {\n          label: 'Trace ID column',\n          tooltip: 'Column for the trace ID'\n          },\n          spanId: {\n            label: 'Span ID column',\n            tooltip: 'Column for the span ID'\n          },\n          parentSpanId: {\n            label: 'Parent Span ID column',\n            tooltip: 'Column for the parent span ID'\n          },\n          serviceName: {\n            label: 'Service Name column',\n            tooltip: 'Column for the service name'\n          },\n          operationName: {\n            label: 'Operation Name column',\n            tooltip: 'Column for the operation name'\n          },\n          startTime: {\n            label: 'Start Time column',\n            tooltip: 'Column for the start time'\n          },\n          durationTime: {\n            label: 'Duration Time column',\n            tooltip: 'Column for the duration time'\n          },\n          tags: {\n            label: 'Tags column',\n            tooltip: 'Column for the trace tags'\n          },\n          serviceTags: {\n            label: 'Service Tags column',\n            tooltip: 'Column for the service tags'\n          }\n        }\n      },\n      LogsConfig: {\n        title: 'Logs configuration',\n        description: '(Optional) default settings for log queries',\n        defaultDatabase: {\n          label: 'Default log database',\n          description: 'the default database used by the logs query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default'\n        },\n        defaultTable: {\n          label: 'Default log table',\n          description: 'the default table used by the logs query builder',\n          name: 'defaultTable'\n        },\n        columns: {\n          title: 'Default columns',\n          description: 'Default columns for log queries. Leave empty to disable.',\n          \n          time: {\n           label: 'Time column',\n           tooltip: 'Column for the log timestamp'\n           },\n           level: {\n             label: 'Log Level column',\n             tooltip: 'Column for the log level'\n           },\n           message: {\n             label: 'Log Message column',\n             tooltip: 'Column for log message'\n           }\n         }\n      }\n    },\n    EditorTypeSwitcher: {\n      label: 'Editor Type',\n      tooltip: 'Switches between the raw SQL Editor and the Query Builder.',\n      switcher: {\n        title: 'Are you sure?',\n        body: 'Queries that are too complex for the Query Builder will be altered.',\n        confirmText: 'Continue',\n        dismissText: 'Cancel',\n      },\n      cannotConvert: {\n        title: 'Cannot convert',\n        message: 'Do you want to delete your current query and use the query builder?',\n        confirmText: 'Yes',\n      },\n    },\n    expandBuilderButton: {\n      label: 'Show full query',\n      tooltip: 'Shows the full query builder'\n    },\n    QueryTypeSwitcher: {\n      label: 'Query Type',\n      tooltip: 'Sets the layout for the query builder',\n      sqlTooltip: 'Sets the panel type for explore view'\n    },\n    DatabaseSelect: {\n      label: 'Database',\n      tooltip: 'ClickHouse database to query from',\n      empty: '<select database>',\n    },\n    TableSelect: {\n      label: 'Table',\n      tooltip: 'ClickHouse table to query from',\n      empty: '<select table>',\n    },\n    ColumnsEditor: {\n      label: 'Columns',\n      tooltip: 'A list of columns to include in the query'\n    },\n    OtelVersionSelect: {\n      label: 'Use OTel',\n      tooltip: 'Enables Open Telemetry schema versioning'\n    },\n    LimitEditor: {\n      label: 'Limit',\n      tooltip: 'Limits the number of rows returned by the query'\n    },\n    SqlPreview: {\n      label: 'SQL Preview',\n      tooltip: 'Preview of the generated SQL. You can safely switch to SQL Editor to customize the generated query',\n    },\n    AggregatesEditor: {\n      label: 'Aggregates',\n      tooltip: 'Aggregate functions to use',\n      aliasLabel: 'as',\n      aliasTooltip: 'alias for this aggregate function',\n      addLabel: 'Aggregate',\n    },\n    OrderByEditor: {\n      label: 'Order By',\n      tooltip: 'Order by column',\n      addLabel: 'Order By',\n    },\n    FilterEditor: {\n      label: 'Filters',\n      tooltip: `List of filters`,\n      addLabel: 'Filter',\n      mapKeyPlaceholder: 'map key'\n    },\n    GroupByEditor: {\n      label: 'Group By',\n      tooltip: 'Group the results by specific column',\n    },\n    LogsQueryBuilder: {\n      logTimeColumn: {\n        label: 'Time',\n        tooltip: 'Column that contains the log timestamp'\n      },\n      logLevelColumn: {\n        label: 'Log Level',\n        tooltip: 'Column that contains the log level'\n      },\n      logMessageColumn: {\n        label: 'Message',\n        tooltip: 'Column that contains the log message'\n      },\n      logLabelsColumn: {\n        label: 'Labels',\n        tooltip: 'A column with a key/value structure for log labels'\n      },\n      liveView: {\n        label: 'Live View',\n        tooltip: 'Enable to update logs in real time'\n      },\n      logMessageFilter: {\n        label: 'Message Filter',\n        tooltip: 'Applies a LIKE filter to the log message body',\n        clearButton: 'Clear'\n      },\n      logLevelFilter: {\n        label: 'Level Filter',\n        tooltip: 'Applies a filter to the log level'\n      },\n    },\n    TimeSeriesQueryBuilder: {\n      simpleQueryModeLabel: 'Simple',\n      aggregateQueryModeLabel: 'Aggregate',\n      builderModeLabel: 'Builder Mode',\n      builderModeTooltip: 'Switches the query builder between the simple and aggregate modes',\n      timeColumn: {\n        label: 'Time',\n        tooltip: 'Column to use for the time series'\n      },\n    },\n    TableQueryBuilder: {\n      simpleQueryModeLabel: 'Simple',\n      aggregateQueryModeLabel: 'Aggregate',\n      builderModeLabel: 'Builder Mode',\n      builderModeTooltip: 'Switches the query builder between the simple and aggregate modes',\n    },\n    TraceQueryBuilder: {\n      traceIdModeLabel: 'Trace ID',\n      traceSearchModeLabel: 'Trace Search',\n      traceModeLabel: 'Trace Mode',\n      traceModeTooltip: 'Switches between trace ID and trace search mode',\n      columnsSection: 'Columns',\n      filtersSection: 'Filters',\n\n      columns: {\n        traceId: {\n          label: 'Trace ID Column',\n          tooltip: 'Column that contains the trace ID'\n        },\n        spanId: {\n          label: 'Span ID Column',\n          tooltip: 'Column that contains the span ID'\n        },\n        parentSpanId: {\n          label: 'Parent Span ID Column',\n          tooltip: 'Column that contains the parent span ID'\n        },\n        serviceName: {\n          label: 'Service Name Column',\n          tooltip: 'Column that contains the service name'\n        },\n        operationName: {\n          label: 'Operation Name Column',\n          tooltip: 'Column that contains the operation name'\n        },\n        startTime: {\n          label: 'Start Time Column',\n          tooltip: 'Column that contains the start time'\n        },\n        durationTime: {\n          label: 'Duration Time Column',\n          tooltip: 'Column that contains the duration time'\n        },\n        durationUnit: {\n          label: 'Duration Unit',\n          tooltip: 'The unit of time used for the duration time'\n        },\n        tags: {\n          label: 'Tags Column',\n          tooltip: 'Column that contains the trace tags'\n        },\n        serviceTags: {\n          label: 'Service Tags Column',\n          tooltip: 'Column that contains the service tags'\n        },\n        traceIdFilter: {\n          label: 'Trace ID',\n          tooltip: 'filter by a specific trace ID'\n        }\n      },\n    }\n  },\n  types: {\n    EditorType: {\n      sql: 'SQL Editor',\n      builder: 'Query Builder',\n    },\n    QueryType: {\n      table: 'Table',\n      logs: 'Logs',\n      timeseries: 'Time Series',\n      traces: 'Traces',\n    },\n    ColumnHint: {\n      [ColumnHint.Time]: 'Time',\n\n      [ColumnHint.LogLevel]: 'Level',\n      [ColumnHint.LogMessage]: 'Message',\n      [ColumnHint.LogLabels]: 'Labels',\n\n      [ColumnHint.TraceId]: 'Trace ID',\n      [ColumnHint.TraceSpanId]: 'Span ID',\n      [ColumnHint.TraceParentSpanId]: 'Parent Span ID',\n      [ColumnHint.TraceServiceName]: 'Service Name',\n      [ColumnHint.TraceOperationName]: 'Operation Name',\n      [ColumnHint.TraceDurationTime]: 'Duration Time',\n      [ColumnHint.TraceTags]: 'Tags',\n      [ColumnHint.TraceServiceTags]: 'Service Tags',\n      [ColumnHint.TraceStatusCode]: 'Status Code',\n    }\n  }\n}\n","import React, { SyntheticEvent } from 'react';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport { Input, Field } from '@grafana/ui';\nimport allLabels from 'labels';\n\ninterface DefaultDatabaseTableConfigProps {\n  defaultDatabase?: string;\n  defaultTable?: string;\n  onDefaultDatabaseChange: (e: SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;\n  onDefaultTableChange: (e: SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;\n}\n\nexport const DefaultDatabaseTableConfig = (props: DefaultDatabaseTableConfigProps) => {\n  const { defaultDatabase, defaultTable, onDefaultDatabaseChange, onDefaultTableChange } = props;\n  const labels = allLabels.components.Config.DefaultDatabaseTableConfig;\n\n  return (\n    <ConfigSection title={labels.title}>\n      <Field\n        label={labels.database.label}\n        description={labels.database.description}\n      >\n        <Input\n          name={labels.database.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={onDefaultDatabaseChange}\n          label={labels.database.label}\n          aria-label={labels.database.label}\n          placeholder={labels.database.placeholder}\n          type=\"text\"\n        />\n      </Field>\n      <Field\n        label={labels.table.label}\n        description={labels.table.description}\n      >\n        <Input\n          name={labels.table.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={onDefaultTableChange}\n          label={labels.table.label}\n          aria-label={labels.table.label}\n          placeholder={labels.table.placeholder}\n          type=\"text\"\n        />\n      </Field>\n    </ConfigSection>\n  );\n}\n","import React, { FormEvent } from 'react';\nimport { Switch, Input, Field } from '@grafana/ui';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport allLabels from 'labels';\n\ninterface QuerySettingsConfigProps {\n  dialTimeout?: string;\n  queryTimeout?: string;\n  validateSql?: boolean;\n  onDialTimeoutChange: (e: FormEvent<HTMLInputElement>) => void;\n  onQueryTimeoutChange: (e: FormEvent<HTMLInputElement>) => void;\n  onValidateSqlChange: (e: FormEvent<HTMLInputElement>) => void;\n}\n\nexport const QuerySettingsConfig = (props: QuerySettingsConfigProps) => {\n  const { dialTimeout, queryTimeout, validateSql, onDialTimeoutChange, onQueryTimeoutChange, onValidateSqlChange } = props;\n  const labels = allLabels.components.Config.QuerySettingsConfig;\n\n  return (\n    <ConfigSection title={labels.title}>\n      <Field label={labels.dialTimeout.label} description={labels.dialTimeout.tooltip}>\n          <Input\n            name={labels.dialTimeout.name}\n            width={40}\n            value={dialTimeout || ''}\n            onChange={onDialTimeoutChange}\n            label={labels.dialTimeout.label}\n            aria-label={labels.dialTimeout.label}\n            placeholder={labels.dialTimeout.placeholder}\n            type=\"number\"\n          />\n        </Field>\n        <Field\n          label={labels.queryTimeout.label}\n          description={labels.queryTimeout.tooltip}\n        >\n          <Input\n            name={labels.queryTimeout.name}\n            width={40}\n            value={queryTimeout || ''}\n            onChange={onQueryTimeoutChange}\n            label={labels.queryTimeout.label}\n            aria-label={labels.queryTimeout.label}\n            placeholder={labels.queryTimeout.placeholder}\n            type=\"number\"\n          />\n        </Field>\n        <Field label={labels.validateSql.label} description={labels.validateSql.tooltip}>\n          <Switch\n            className=\"gf-form\"\n            value={validateSql || false}\n            onChange={onValidateSqlChange}\n            role='checkbox'\n          />\n        </Field>\n    </ConfigSection>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select, Switch as GrafanaSwitch, useTheme } from '@grafana/ui';\nimport otel from 'otel';\nimport selectors from 'labels';\n\ninterface OtelVersionSelectProps {\n  enabled: boolean,\n  onEnabledChange: (enabled: boolean) => void,\n  selectedVersion: string,\n  onVersionChange: (version: string) => void,\n  wide?: boolean,\n}\n\nexport const OtelVersionSelect = (props: OtelVersionSelectProps) => {\n  const { enabled, onEnabledChange, selectedVersion, onVersionChange, wide } = props;\n  const { label, tooltip } = selectors.components.OtelVersionSelect;\n  const options: SelectableValue[] = otel.versions.map(v => ({\n    label: v.name,\n    value: v.version\n  }));\n\n  useEffect(() => {\n    // Use latest version if not set or doesn't exist (which may happen if config is broken)\n    if (selectedVersion === '' || !otel.getVersion(selectedVersion)) {\n      onVersionChange(otel.getLatestVersion().version);\n    }\n  }, [selectedVersion, onVersionChange]);\n\n  const theme = useTheme();\n  const switchContainerStyle: React.CSSProperties = {\n    padding: `0 ${theme.spacing.sm}`,\n    height: `${theme.spacing.formInputHeight}px`,\n    display: 'flex',\n    alignItems: 'center',\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={wide ? 12 : 8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div style={switchContainerStyle}>\n        <GrafanaSwitch\n          className=\"gf-form\"\n          value={enabled}\n          onChange={e => onEnabledChange(e.currentTarget.checked)}\n          role=\"checkbox\"\n        />\n      </div>\n      <Select\n        disabled={!enabled}\n        options={options}\n        width={20}\n        onChange={e => onVersionChange(e.value)}\n        value={selectedVersion}\n        menuPlacement={'bottom'}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Input, InlineFormLabel } from '@grafana/ui';\n\ninterface LabeledInputProps {\n  label: string;\n  tooltip?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  value: string;\n  onChange: (value: string) => void;\n}\n\nexport function LabeledInput(props: LabeledInputProps) {\n  const { label, tooltip, placeholder, disabled, value, onChange } = props;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={12} className=\"query-keyword\" tooltip={tooltip || label}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        disabled={disabled}\n        width={30}\n        value={value}\n        onChange={e => onChange(e.currentTarget.value)}\n        placeholder={placeholder}\n      />\n    </div>\n  )\n}\n","import React from 'react';\nimport { ConfigSection, ConfigSubSection } from 'components/experimental/ConfigSection';\nimport { Input, Field } from '@grafana/ui';\nimport { OtelVersionSelect } from 'components/queryBuilder/OtelVersionSelect';\nimport { ColumnHint } from 'types/queryBuilder';\nimport otel, { defaultLogsTable } from 'otel';\nimport { LabeledInput } from './LabeledInput';\nimport { CHLogsConfig } from 'types/config';\nimport allLabels from 'labels';\nimport { columnLabelToPlaceholder } from 'data/utils';\n\ninterface LogsConfigProps {\n  logsConfig?: CHLogsConfig;\n  onDefaultDatabaseChange: (v: string) => void;\n  onDefaultTableChange: (v: string) => void;\n  onOtelEnabledChange: (v: boolean) => void;\n  onOtelVersionChange: (v: string) => void;\n  onTimeColumnChange: (v: string) => void;\n  onLevelColumnChange: (v: string) => void;\n  onMessageColumnChange: (v: string) => void;\n}\n\nexport const LogsConfig = (props: LogsConfigProps) => {\n  const {\n    onDefaultDatabaseChange, onDefaultTableChange,\n    onOtelEnabledChange, onOtelVersionChange,\n    onTimeColumnChange, onLevelColumnChange, onMessageColumnChange\n  } = props;\n  let {\n    defaultDatabase, defaultTable,\n    otelEnabled, otelVersion,\n    timeColumn, levelColumn, messageColumn\n  } = (props.logsConfig || {});\n  const labels = allLabels.components.Config.LogsConfig;\n\n  const otelConfig = otel.getVersion(otelVersion);\n  if (otelEnabled && otelConfig) {\n    timeColumn = otelConfig.logColumnMap.get(ColumnHint.Time);\n    levelColumn = otelConfig.logColumnMap.get(ColumnHint.LogLevel);\n    messageColumn = otelConfig.logColumnMap.get(ColumnHint.LogMessage);\n  }\n\n  return (\n    <ConfigSection\n      title={labels.title}\n      description={labels.description}\n    >\n      <div id=\"logs-config\" />\n      <Field\n        label={labels.defaultDatabase.label}\n        description={labels.defaultDatabase.description}\n      >\n        <Input\n          name={labels.defaultDatabase.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={e => onDefaultDatabaseChange(e.currentTarget.value)}\n          label={labels.defaultDatabase.label}\n          aria-label={labels.defaultDatabase.label}\n          placeholder={labels.defaultDatabase.placeholder}\n        />\n      </Field>\n      <Field\n        label={labels.defaultTable.label}\n        description={labels.defaultTable.description}\n      >\n        <Input\n          name={labels.defaultTable.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={e => onDefaultTableChange(e.currentTarget.value)}\n          label={labels.defaultTable.label}\n          aria-label={labels.defaultTable.label}\n          placeholder={defaultLogsTable}\n        />\n      </Field>\n     <ConfigSubSection\n        title={labels.columns.title}\n        description={labels.columns.description}\n      >\n        <OtelVersionSelect\n          enabled={otelEnabled || false}\n          selectedVersion={otelVersion || ''}\n          onEnabledChange={onOtelEnabledChange}\n          onVersionChange={onOtelVersionChange}\n          wide\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.time.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.time.label)}\n          tooltip={labels.columns.time.tooltip}\n          value={timeColumn || ''}\n          onChange={onTimeColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.level.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.level.label)}\n          tooltip={labels.columns.level.tooltip}\n          value={levelColumn || ''}\n          onChange={onLevelColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.message.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.message.label)}\n          tooltip={labels.columns.message.tooltip}\n          value={messageColumn || ''}\n          onChange={onMessageColumnChange}\n        />\n      </ConfigSubSection>\n    </ConfigSection>\n  );\n}\n","import { css } from '@emotion/css';\n\nexport const styles = {\n  Common: {\n    check: css`\n      margin-top: 5px;\n    `,\n    wrapper: css`\n      position: relative;\n      width: 100%;\n    `,\n    smallBtn: css`\n      margin-top: 5px;\n      margin-inline: 5px;\n    `,\n    selectWrapper: css`\n      width: 100%;\n    `,\n    inlineSelect: css`\n      margin-right: 5px;\n    `,\n    firstLabel: css`\n      margin-right: 5px;\n    `,\n    expand: css`\n      position: absolute;\n      top: 2px;\n      left: 6px;\n      z-index: 100;\n      color: gray;\n    `,\n  },\n  ConfigEditor: {\n    container: css`\n      justify-content: space-between;\n      h5 {\n        line-height: 34px;\n        margin-bottom: 5px;\n      }\n      button {\n        margin-right: 5px;\n      }\n    `,\n    wide: css`\n      width: 75%;\n    `,\n    subHeader: css`\n      padding: 5px 0 5px 0;\n    `,\n  },\n  QueryEditor: {\n    queryType: css`\n      justify-content: space-between;\n      span {\n        display: flex;\n      }\n    `,\n    inlineField: css`\n      margin-left: 7px;\n    `\n  },\n  FormatSelector: {\n    formatSelector: css`\n      display: flex;\n    `,\n  },\n  VariablesEditor: {},\n};\n","import React from \"react\";\nimport { TimeUnit } from \"types/queryBuilder\";\nimport allLabels from 'labels';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { styles } from 'styles';\n\ninterface DurationUnitSelectProps {\n  unit: TimeUnit;\n  onChange: (u: TimeUnit) => void;\n  disabled?: boolean;\n  inline?: boolean;\n};\n\nconst durationUnitOptions: ReadonlyArray<SelectableValue<TimeUnit>> = [\n  { label: TimeUnit.Seconds, value: TimeUnit.Seconds },\n  { label: TimeUnit.Milliseconds, value: TimeUnit.Milliseconds },\n  { label: TimeUnit.Microseconds, value: TimeUnit.Microseconds },\n  { label: TimeUnit.Nanoseconds, value: TimeUnit.Nanoseconds },\n];\n\nexport const DurationUnitSelect = (props: DurationUnitSelectProps) => {\n  const { unit, onChange, disabled, inline } = props;\n  const { label, tooltip } = allLabels.components.TraceQueryBuilder.columns.durationUnit;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={12} className={`query-keyword ${inline ? styles.QueryEditor.inlineField : ''}`} tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select<TimeUnit>\n        disabled={disabled}\n        options={durationUnitOptions as Array<SelectableValue<TimeUnit>>}\n        value={unit}\n        onChange={v => onChange(v.value!)}\n        width={inline ? 25 : 30}\n        menuPlacement={'bottom'}\n      />\n    </div>\n  );\n};\n","\nimport React from 'react';\nimport { ConfigSection, ConfigSubSection } from 'components/experimental/ConfigSection';\nimport { Input, Field } from '@grafana/ui';\nimport { OtelVersionSelect } from 'components/queryBuilder/OtelVersionSelect';\nimport { ColumnHint, TimeUnit } from 'types/queryBuilder';\nimport otel, { defaultTraceTable } from 'otel';\nimport { LabeledInput } from './LabeledInput';\nimport { DurationUnitSelect } from 'components/queryBuilder/DurationUnitSelect';\nimport { CHTracesConfig } from 'types/config';\nimport allLabels from 'labels';\nimport { columnLabelToPlaceholder } from 'data/utils';\n\ninterface TraceConfigProps {\n  tracesConfig?: CHTracesConfig;\n  onDefaultDatabaseChange: (v: string) => void;\n  onDefaultTableChange: (v: string) => void;\n  onOtelEnabledChange: (v: boolean) => void;\n  onOtelVersionChange: (v: string) => void;\n  onTraceIdColumnChange: (v: string) => void;\n  onSpanIdColumnChange: (v: string) => void;\n  onOperationNameColumnChange: (v: string) => void;\n  onParentSpanIdColumnChange: (v: string) => void;\n  onServiceNameColumnChange: (v: string) => void;\n  onDurationColumnChange: (v: string) => void;\n  onDurationUnitChange: (v: TimeUnit) => void;\n  onStartTimeColumnChange: (v: string) => void;\n  onTagsColumnChange: (v: string) => void;\n  onServiceTagsColumnChange: (v: string) => void;\n}\n\nexport const TracesConfig = (props: TraceConfigProps) => {\n  const {\n    onDefaultDatabaseChange, onDefaultTableChange,\n    onOtelEnabledChange, onOtelVersionChange,\n    onTraceIdColumnChange, onSpanIdColumnChange, onOperationNameColumnChange, onParentSpanIdColumnChange,\n    onServiceNameColumnChange, onDurationColumnChange, onDurationUnitChange, onStartTimeColumnChange,\n    onTagsColumnChange, onServiceTagsColumnChange,\n  } = props;\n  let {\n    defaultDatabase, defaultTable,\n    otelEnabled, otelVersion,\n    traceIdColumn, spanIdColumn, operationNameColumn, parentSpanIdColumn, serviceNameColumn,\n    durationColumn, durationUnit, startTimeColumn, tagsColumn, serviceTagsColumn\n  } = (props.tracesConfig || {}) as CHTracesConfig;\n  const labels = allLabels.components.Config.TracesConfig;\n\n  const otelConfig = otel.getVersion(otelVersion);\n  if (otelEnabled && otelConfig) {\n    startTimeColumn = otelConfig.traceColumnMap.get(ColumnHint.Time);\n    traceIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceId);\n    spanIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceSpanId);\n    parentSpanIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceParentSpanId);\n    serviceNameColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceServiceName);\n    operationNameColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceOperationName);\n    durationColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceDurationTime);\n    tagsColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceTags);\n    serviceTagsColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceServiceTags);\n    durationUnit = otelConfig.traceDurationUnit.toString();\n  }\n\n  return (\n    <ConfigSection\n      title={labels.title}\n      description={labels.description}\n    >\n      <div id=\"traces-config\" />\n      <Field\n        label={labels.defaultDatabase.label}\n        description={labels.defaultDatabase.description}\n      >\n        <Input\n          name={labels.defaultDatabase.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={e => onDefaultDatabaseChange(e.currentTarget.value)}\n          label={labels.defaultDatabase.label}\n          aria-label={labels.defaultDatabase.label}\n          placeholder={labels.defaultDatabase.placeholder}\n        />\n      </Field>\n      <Field\n        label={labels.defaultTable.label}\n        description={labels.defaultTable.description}\n      >\n        <Input\n          name={labels.defaultTable.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={e => onDefaultTableChange(e.currentTarget.value)}\n          label={labels.defaultTable.label}\n          aria-label={labels.defaultTable.label}\n          placeholder={defaultTraceTable}\n        />\n      </Field>\n      <ConfigSubSection\n        title={labels.columns.title}\n        description={labels.columns.description}\n      >\n        <OtelVersionSelect\n          enabled={otelEnabled || false}\n          selectedVersion={otelVersion || ''}\n          onEnabledChange={onOtelEnabledChange}\n          onVersionChange={onOtelVersionChange}\n          wide\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.traceId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.traceId.label)}\n          tooltip={labels.columns.traceId.tooltip}\n          value={traceIdColumn || ''}\n          onChange={onTraceIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.spanId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.spanId.label)}\n          tooltip={labels.columns.spanId.tooltip}\n          value={spanIdColumn || ''}\n          onChange={onSpanIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.operationName.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.operationName.label)}\n          tooltip={labels.columns.operationName.tooltip}\n          value={operationNameColumn || ''}\n          onChange={onOperationNameColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.parentSpanId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.parentSpanId.label)}\n          tooltip={labels.columns.parentSpanId.tooltip}\n          value={parentSpanIdColumn || ''}\n          onChange={onParentSpanIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.serviceName.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.serviceName.label)}\n          tooltip={labels.columns.serviceName.tooltip}\n          value={serviceNameColumn || ''}\n          onChange={onServiceNameColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.durationTime.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.durationTime.label)}\n          tooltip={labels.columns.durationTime.tooltip}\n          value={durationColumn || ''}\n          onChange={onDurationColumnChange}\n        />\n        <DurationUnitSelect\n          disabled={otelEnabled}\n          unit={durationUnit as TimeUnit || TimeUnit.Nanoseconds}\n          onChange={onDurationUnitChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.startTime.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.startTime.label)}\n          tooltip={labels.columns.startTime.tooltip}\n          value={startTimeColumn || ''}\n          onChange={onStartTimeColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.tags.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.tags.label)}\n          tooltip={labels.columns.tags.tooltip}\n          value={tagsColumn || ''}\n          onChange={onTagsColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.serviceTags.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.serviceTags.label)}\n          tooltip={labels.columns.serviceTags.tooltip}\n          value={serviceTagsColumn || ''}\n          onChange={onServiceTagsColumnChange}\n        />\n      </ConfigSubSection>\n    </ConfigSection>\n  );\n}\n","import { E2ESelectors } from '@grafana/e2e-selectors';\nexport const Components = {\n  QueryEditor: {\n    CodeEditor: {\n      input: () => '.monaco-editor textarea',\n      container: 'data-testid-code-editor-container',\n      Expand: 'data-testid-code-editor-expand-button',\n    },\n    Format: {\n      label: 'Format',\n      tooltip: 'Query Type',\n      options: {\n        AUTO: 'Auto',\n        TABLE: 'Table',\n        TIME_SERIES: 'Time Series',\n        LOGS: 'Logs',\n        TRACE: 'Trace',\n      },\n    },\n    Types: {\n      label: 'Query Type',\n      tooltip: 'Query Type',\n      options: {\n        SQLEditor: 'SQL Editor',\n        QueryBuilder: 'Query Builder',\n      },\n      switcher: {\n        title: 'Are you sure?',\n        body: 'Queries that are too complex for the Query Builder will be altered.',\n        confirmText: 'Continue',\n        dismissText: 'Cancel',\n      },\n      cannotConvert: {\n        title: 'Cannot convert',\n        confirmText: 'Yes',\n      },\n    },\n    QueryBuilder: {\n      TYPES: {\n        label: 'Show as',\n        tooltip: 'Show as',\n        options: {\n          LIST: 'Table',\n          AGGREGATE: 'Aggregate',\n          TREND: 'Time Series',\n        },\n      },\n      DATABASE: {\n        label: 'Database',\n        tooltip: 'Clickhouse database to query from',\n      },\n      FROM: {\n        label: 'Table',\n        tooltip: 'Clickhouse table to query from',\n      },\n      SELECT: {\n        label: 'Fields',\n        tooltipTable: 'List of fields to show',\n        tooltipAggregate: `List of metrics to show. Use any of the given aggregation along with the field`,\n        ALIAS: {\n          label: 'as',\n          tooltip: 'alias',\n        },\n        AddLabel: 'Field',\n        RemoveLabel: '',\n      },\n      AGGREGATES: {\n        label: 'Aggregates',\n        tooltipTable: 'Aggregate functions to use',\n        tooltipAggregate: `Aggregate functions to use`,\n        ALIAS: {\n          label: 'as',\n          tooltip: 'alias',\n        },\n        AddLabel: 'Aggregate',\n        RemoveLabel: '',\n      },\n      WHERE: {\n        label: 'Filters',\n        tooltip: `List of filters`,\n        AddLabel: 'Filter',\n        RemoveLabel: '',\n      },\n      GROUP_BY: {\n        label: 'Group by',\n        tooltip: 'Group the results by specific field',\n      },\n      ORDER_BY: {\n        label: 'Order by',\n        tooltip: 'Order by field',\n        AddLabel: 'Order by',\n        RemoveLabel: '',\n      },\n      LIMIT: {\n        label: 'Limit',\n        tooltip: 'Number of records/results to show.',\n      },\n      TIME_FIELD: {\n        label: 'Time field',\n        tooltip: 'Select the time field for trending over time',\n      },\n      LOGS_VOLUME_TIME_FIELD: {\n        label: 'Time field',\n        tooltip: 'Select the time field for logs volume histogram. If not selected, the histogram will not be shown',\n      },\n      LOG_LEVEL_FIELD: {\n        label: 'Log level field',\n        tooltip: 'Select the field to extract log level information from',\n      },\n      PREVIEW: {\n        label: 'SQL Preview',\n        tooltip: 'SQL Preview. You can safely switch to SQL Editor to customize the generated query',\n      },\n    },\n  },\n  Config: {\n    HttpHeaderConfig: {\n      headerEditor: 'config__http-header-config__header-editor',\n      addHeaderButton: 'config__http-header-config__add-header-button',\n      removeHeaderButton: 'config__http-header-config__remove-header-button',\n      headerSecureSwitch: 'config__http-header-config__header-secure-switch',\n      headerNameInput: 'config__http-header-config__header-name-input',\n      headerValueInput: 'config__http-header-config__header-value-input',\n      forwardGrafanaHeadersSwitch: 'config__http-header-config__forward-grafana-headers-switch'\n    },\n    AliasTableConfig: {\n      aliasEditor: 'config__alias-table-config__alias-editor',\n      addEntryButton: 'config__alias-table-config__add-entry-button',\n      removeEntryButton: 'config__alias-table-config__remove-entry-button',\n      targetDatabaseInput: 'config__alias-table-config__target-database-input',\n      targetTableInput: 'config__alias-table-config__target-table-input',\n      aliasDatabaseInput: 'config__alias-table-config__alias-database-input',\n      aliasTableInput: 'config__alias-table-config__alias-table-input',\n    }\n  },\n  QueryBuilder: {\n    expandBuilderButton: 'query-builder__expand-builder-button',\n    LogsQueryBuilder: {\n      LogMessageLikeInput: {\n        input: 'query-builder__logs-query-builder__log-message-like-input__input',\n      }\n    },\n    AggregateEditor: {\n      sectionLabel: 'query-builder__aggregate-editor__section-label',\n      itemWrapper: 'query-builder__aggregate-editor__item-wrapper',\n      itemRemoveButton: 'query-builder__aggregate-editor-item-remove-button',\n      addButton: 'query-builder__aggregate-editor__add-button',\n    },\n    ColumnsEditor: {\n      multiSelectWrapper: 'query-builder__columns-editor__multi-select-wrapper'\n    },\n    GroupByEditor: {\n      multiSelectWrapper: 'query-builder__group-by__multi-select-wrapper'\n    },\n    LimitEditor: {\n      input: 'query-builder__limit-editor__input'\n    },\n    TraceIdInput: {\n      input: 'query-builder__trace-id-input__input'\n    }\n  }\n};\nexport const selectors: { components: E2ESelectors<typeof Components> } = {\n  components: Components,\n};\n","import React, { ChangeEvent, useMemo, useState } from 'react';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport { Input, Field, HorizontalGroup, Switch, SecretInput, Button } from '@grafana/ui';\nimport { CHHttpHeader } from 'types/config';\nimport allLabels from 'labels';\nimport { styles } from 'styles';\nimport { selectors as allSelectors } from 'selectors';\nimport { KeyValue } from '@grafana/data';\n\ninterface HttpHeadersConfigProps {\n  headers?: CHHttpHeader[];\n  forwardGrafanaHeaders?: boolean;\n  secureFields: KeyValue<boolean>;\n  onHttpHeadersChange: (v: CHHttpHeader[]) => void;\n  onForwardGrafanaHeadersChange: (v: boolean) => void;\n}\n\nexport const HttpHeadersConfig = (props: HttpHeadersConfigProps) => {\n  const { secureFields, onHttpHeadersChange } = props;\n  const configuredSecureHeaders = useConfiguredSecureHttpHeaders(secureFields);\n  const [headers, setHeaders] = useState<CHHttpHeader[]>(props.headers || []);\n  const [forwardGrafanaHeaders, setForwardGrafanaHeaders] = useState<boolean>(props.forwardGrafanaHeaders || false);\n  const labels = allLabels.components.Config.HttpHeadersConfig;\n  const selectors = allSelectors.components.Config.HttpHeaderConfig;\n\n  const addHeader = () => setHeaders([...headers, { name: '', value: '', secure: false }]);\n  const removeHeader = (index: number) => {\n    const nextHeaders: CHHttpHeader[] = headers.slice();\n    nextHeaders.splice(index, 1);\n    setHeaders(nextHeaders);\n    onHttpHeadersChange(nextHeaders);\n  };\n  const updateHeader = (index: number, header: CHHttpHeader) => {\n    const nextHeaders: CHHttpHeader[] = headers.slice();\n    header.name = header.name.trim();\n    nextHeaders[index] = header;\n    setHeaders(nextHeaders);\n    onHttpHeadersChange(nextHeaders);\n  };\n  const updateForwardGrafanaHeaders = (value: boolean) => {\n    setForwardGrafanaHeaders(value);\n    props.onForwardGrafanaHeadersChange(value);\n  }\n\n  return (\n    <ConfigSection\n      title={labels.title}\n    >\n      <Field label={labels.label} description={labels.description}>\n        <>\n          {headers.map((header, index) => (\n            <HttpHeaderEditor\n              key={header.name + index}\n              name={header.name}\n              value={header.value}\n              secure={header.secure}\n              isSecureConfigured={configuredSecureHeaders.has(header.name)}\n              onHeaderChange={header => updateHeader(index, header)}\n              onRemove={() => removeHeader(index)}\n            />\n          ))}\n          <Button\n              data-testid={selectors.addHeaderButton}\n              icon=\"plus-circle\"\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={addHeader}\n              className={styles.Common.smallBtn}\n            >\n              {labels.addHeaderLabel}\n          </Button>\n        </>\n      </Field>\n      <Field label={labels.forwardGrafanaHeaders.label} description={labels.forwardGrafanaHeaders.tooltip}>\n        <Switch\n          data-testid={selectors.forwardGrafanaHeadersSwitch}\n          className={\"gf-form\"}\n          value={forwardGrafanaHeaders}\n          onChange={(e) => updateForwardGrafanaHeaders(e.currentTarget.checked)}\n        />\n      </Field>\n    </ConfigSection>\n  );\n}\n\ninterface HttpHeaderEditorProps {\n  name: string;\n  value: string;\n  secure: boolean;\n  isSecureConfigured: boolean;\n  onHeaderChange: (v: CHHttpHeader) => void;\n  onRemove?: () => void;\n}\n\nconst HttpHeaderEditor = (props: HttpHeaderEditorProps) => {\n  const { onHeaderChange, onRemove } = props;\n  const [name, setName] = useState<string>(props.name);\n  const [value, setValue] = useState<string>(props.value);\n  const [secure, setSecure] = useState<boolean>(props.secure);\n  const [isSecureConfigured, setSecureConfigured] = useState<boolean>(props.isSecureConfigured);\n  const labels = allLabels.components.Config.HttpHeadersConfig;\n  const selectors = allSelectors.components.Config.HttpHeaderConfig;\n\n  const onUpdate = () => {\n    onHeaderChange({\n      name,\n      value,\n      secure\n    });\n  }\n\n  let valueInput;\n  if (secure) {\n    valueInput = <SecretInput\n      data-testid={selectors.headerValueInput}\n      width={65}\n      label=\"\"\n      aria-label=\"\"\n      placeholder={labels.secureHeaderValueLabel}\n      value={value}\n      isConfigured={isSecureConfigured}\n      onReset={() => setSecureConfigured(false)}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n      onBlur={() => onUpdate()}\n    />;\n  } else {\n    valueInput = <Input\n      data-testid={selectors.headerValueInput}\n      width={65}\n      value={value}\n      placeholder={labels.insecureHeaderValueLabel}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n      onBlur={() => onUpdate()}\n    />;\n  }\n\n  const headerValueLabel = secure ? labels.secureHeaderValueLabel : labels.insecureHeaderValueLabel;\n  return (\n    <div data-testid={selectors.headerEditor}>\n      <HorizontalGroup>\n        <Field label={labels.headerNameLabel} aria-label={labels.headerNameLabel}>\n          <Input\n            data-testid={selectors.headerNameInput}\n            value={name}\n            disabled={isSecureConfigured}\n            placeholder={labels.headerNamePlaceholder}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\n            onBlur={() => onUpdate()}\n          />\n        </Field>\n        <Field label={headerValueLabel} aria-label={headerValueLabel}>\n          {valueInput}\n        </Field>\n        { !isSecureConfigured &&\n          <Field label={labels.secureLabel}>\n            <Switch\n              data-testid={selectors.headerSecureSwitch}\n              className=\"gf-form\"\n              value={secure}\n              onChange={e => setSecure(e.currentTarget.checked)}\n              onBlur={() => onUpdate()}\n            />\n          </Field>\n        }\n        { onRemove &&\n          <Button\n            data-testid={selectors.removeHeaderButton}\n            className={styles.Common.smallBtn}\n            variant=\"destructive\"\n            size=\"sm\"\n            icon=\"trash-alt\"\n            onClick={onRemove}\n          />\n        }\n      </HorizontalGroup>\n    </div>\n  );\n}\n\n/**\n * Returns a Set of all secured headers that are configured\n */\nexport const useConfiguredSecureHttpHeaders = (secureJsonFields: KeyValue<boolean>): Set<string> => {\n  return useMemo(() => {\n    const secureHeaders = new Set<string>();\n    for (let key in secureJsonFields) {\n      if (key.startsWith('secureHttpHeaders.') && secureJsonFields[key]) {\n        secureHeaders.add(key.substring(key.indexOf('.') + 1));\n      }\n    }\n    return secureHeaders;\n  }, [secureJsonFields]);\n};\n","import { DataSourceSettings, KeyValue } from \"@grafana/data\";\nimport { defaultLogsTable, defaultTraceTable } from \"otel\";\nimport { useEffect, useRef } from \"react\";\nimport { CHConfig, CHHttpHeader, CHSecureConfig, Protocol } from \"types/config\";\nimport { pluginVersion } from \"utils/version\";\n\n/**\n * Handles saving HTTP headers to Grafana config.\n * \n * All header keys go to the unsecure config.\n * If the header is marked as secure, its value goes to the\n * secure json config where it is hidden.\n */\nexport const onHttpHeadersChange = (headers: CHHttpHeader[], options: DataSourceSettings<CHConfig, CHSecureConfig>, onOptionsChange: (opts: DataSourceSettings<CHConfig, CHSecureConfig>) => void) => {\n  const httpHeaders: CHHttpHeader[] = [];\n  const secureHttpHeaderKeys: KeyValue<boolean> = {};\n  const secureHttpHeaderValues: KeyValue<string> = {};\n\n  for (let header of headers) {\n    if (!header.name) {\n      continue;\n    }\n\n    if (header.secure) {\n      const key = `secureHttpHeaders.${header.name}`;\n      secureHttpHeaderKeys[key] = true;\n\n      if (header.value) {\n        secureHttpHeaderValues[key] = header.value;\n        header.value = '';\n      }\n    }\n\n    httpHeaders.push(header);\n  }\n\n  const currentSecureJsonFields: KeyValue<boolean> = { ...options.secureJsonFields };\n  for (let key in currentSecureJsonFields) {\n    if (!secureHttpHeaderKeys[key] && key.startsWith('secureHttpHeaders.')) {\n      // Remove key from secureJsonData when it is no longer present in header config\n      secureHttpHeaderKeys[key] = false;\n      secureHttpHeaderValues[key] = '';\n    }\n  }\n\n  onOptionsChange({\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      httpHeaders\n    },\n    secureJsonFields: {\n      ...options.secureJsonFields,\n      ...secureHttpHeaderKeys\n    },\n    secureJsonData: {\n      ...options.secureJsonData,\n      ...secureHttpHeaderValues\n    },\n  });\n}\n\n/**\n * Applies default settings and migrations to config options.\n */\nexport const useConfigDefaults = (options: DataSourceSettings<CHConfig>, onOptionsChange: (opts: DataSourceSettings<CHConfig>) => void) => {\n  const appliedDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (appliedDefaults.current) {\n      return;\n    }\n\n    const jsonData = { ...options.jsonData };\n    jsonData.version = pluginVersion; // Always overwrite version\n\n    // v3 Migration\n\n    const v3ServerField = (jsonData as any)['server'];\n    if (v3ServerField && !jsonData.host) {\n      jsonData.host = v3ServerField;\n    }\n    delete (jsonData as any)['server'];\n\n    const v3TimeoutField = (jsonData as any)['timeout'];\n    if (v3TimeoutField && !jsonData.dialTimeout) {\n      jsonData.dialTimeout = v3TimeoutField;\n    }\n    delete (jsonData as any)['timeout'];\n\n    // Defaults\n\n    if (!jsonData.protocol) {\n      jsonData.protocol = Protocol.Native;\n    }\n\n    if (!jsonData.logs || jsonData.logs.defaultTable === undefined) {\n      jsonData.logs = {\n        ...jsonData.logs,\n        defaultTable: defaultLogsTable\n      };\n    }\n\n    if (!jsonData.traces || jsonData.traces.defaultTable === undefined) {\n      jsonData.traces = {\n        ...jsonData.traces,\n        defaultTable: defaultTraceTable\n      };\n    }\n\n    onOptionsChange({\n      ...options,\n      jsonData,\n    });\n    appliedDefaults.current = true;\n  }, [options, onOptionsChange]);\n}\n","import React, {ChangeEvent, useState} from 'react';\nimport {ConfigSection} from 'components/experimental/ConfigSection';\nimport {Input, Field, HorizontalGroup, Button} from '@grafana/ui';\nimport {AliasTableEntry} from 'types/config';\nimport allLabels from 'labels';\nimport {styles} from 'styles';\nimport {selectors as allSelectors} from 'selectors';\n\ninterface AliasTablesConfigProps {\n    aliasTables?: AliasTableEntry[];\n    onAliasTablesChange: (v: AliasTableEntry[]) => void;\n}\n\nexport const AliasTableConfig = (props: AliasTablesConfigProps) => {\n    const {onAliasTablesChange} = props;\n    const [entries, setEntries] = useState<AliasTableEntry[]>(props.aliasTables || []);\n    const labels = allLabels.components.Config.AliasTableConfig;\n    const selectors = allSelectors.components.Config.AliasTableConfig;\n\n    const entryToUniqueKey = (entry: AliasTableEntry) => `\"${entry.targetDatabase}\".\"${entry.targetTable}\":\"${entry.aliasDatabase}\".\"${entry.aliasTable}\"`;\n    const removeDuplicateEntries = (entries: AliasTableEntry[]): AliasTableEntry[] => {\n        const duplicateKeys = new Set();\n        return entries.filter(entry => {\n            const key = entryToUniqueKey(entry);\n            if (duplicateKeys.has(key)) {\n                return false;\n            }\n\n            duplicateKeys.add(key);\n            return true;\n        });\n    };\n\n    const addEntry = () => {\n        setEntries(removeDuplicateEntries([...entries, {\n            targetDatabase: '',\n            targetTable: '',\n            aliasDatabase: '',\n            aliasTable: ''\n        }]));\n    }\n    const removeEntry = (index: number) => {\n        let nextEntries: AliasTableEntry[] = entries.slice();\n        nextEntries.splice(index, 1);\n        nextEntries = removeDuplicateEntries(nextEntries);\n        setEntries(nextEntries);\n        onAliasTablesChange(nextEntries);\n    };\n    const updateEntry = (index: number, entry: AliasTableEntry) => {\n        let nextEntries: AliasTableEntry[] = entries.slice();\n        entry.targetDatabase = entry.targetDatabase.trim();\n        entry.targetTable = entry.targetTable.trim();\n        entry.aliasDatabase = entry.aliasDatabase.trim();\n        entry.aliasTable = entry.aliasTable.trim();\n        nextEntries[index] = entry;\n\n        nextEntries = removeDuplicateEntries(nextEntries);\n        setEntries(nextEntries);\n        onAliasTablesChange(nextEntries);\n    };\n\n    return (\n        <ConfigSection\n            title={labels.title}\n        >\n            <div>\n                <span>{labels.descriptionParts[0]}</span>\n                <code>{labels.descriptionParts[1]}</code>\n                <span>{labels.descriptionParts[2]}</span>\n            </div>\n            <br/>\n\n            {entries.map((entry, index) => (\n                <AliasTableEditor\n                    key={entryToUniqueKey(entry)}\n                    targetDatabase={entry.targetDatabase}\n                    targetTable={entry.targetTable}\n                    aliasDatabase={entry.aliasDatabase}\n                    aliasTable={entry.aliasTable}\n                    onEntryChange={e => updateEntry(index, e)}\n                    onRemove={() => removeEntry(index)}\n                />\n            ))}\n            <Button\n                data-testid={selectors.addEntryButton}\n                icon=\"plus-circle\"\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={addEntry}\n                className={styles.Common.smallBtn}\n            >\n                {labels.addTableLabel}\n            </Button>\n        </ConfigSection>\n    );\n}\n\ninterface AliasTableEditorProps {\n    targetDatabase: string;\n    targetTable: string;\n    aliasDatabase: string;\n    aliasTable: string;\n    onEntryChange: (v: AliasTableEntry) => void;\n    onRemove?: () => void;\n}\n\nconst AliasTableEditor = (props: AliasTableEditorProps) => {\n    const {onEntryChange, onRemove} = props;\n    const [targetDatabase, setTargetDatabase] = useState<string>(props.targetDatabase);\n    const [targetTable, setTargetTable] = useState<string>(props.targetTable);\n    const [aliasDatabase, setAliasDatabase] = useState<string>(props.aliasDatabase);\n    const [aliasTable, setAliasTable] = useState<string>(props.aliasTable);\n    const labels = allLabels.components.Config.AliasTableConfig;\n    const selectors = allSelectors.components.Config.AliasTableConfig;\n\n    const onUpdate = () => {\n        onEntryChange({targetDatabase, targetTable, aliasDatabase, aliasTable});\n    }\n\n    return (\n        <div data-testid={selectors.aliasEditor}>\n            <HorizontalGroup>\n                <Field label={labels.targetDatabaseLabel} aria-label={labels.targetDatabaseLabel}>\n                    <Input\n                        data-testid={selectors.targetDatabaseInput}\n                        value={targetDatabase}\n                        placeholder={labels.targetDatabasePlaceholder}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setTargetDatabase(e.target.value)}\n                        onBlur={() => onUpdate()}\n                    />\n                </Field>\n                <Field label={labels.targetTableLabel} aria-label={labels.targetTableLabel}>\n                    <Input\n                        data-testid={selectors.targetTableInput}\n                        value={targetTable}\n                        placeholder={labels.targetTableLabel}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setTargetTable(e.target.value)}\n                        onBlur={() => onUpdate()}\n                    />\n                </Field>\n                <Field label={labels.aliasDatabaseLabel} aria-label={labels.aliasDatabaseLabel}>\n                    <Input\n                        data-testid={selectors.aliasDatabaseInput}\n                        value={aliasDatabase}\n                        placeholder={labels.aliasDatabasePlaceholder}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setAliasDatabase(e.target.value)}\n                        onBlur={() => onUpdate()}\n                    />\n                </Field>\n                <Field label={labels.aliasTableLabel} aria-label={labels.aliasTableLabel}>\n                    <Input\n                        data-testid={selectors.aliasTableInput}\n                        value={aliasTable}\n                        placeholder={labels.aliasTableLabel}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setAliasTable(e.target.value)}\n                        onBlur={() => onUpdate()}\n                    />\n                </Field>\n                {onRemove &&\n                    <Button\n                        data-testid={selectors.removeEntryButton}\n                        className={styles.Common.smallBtn}\n                        variant=\"destructive\"\n                        size=\"sm\"\n                        icon=\"trash-alt\"\n                        onClick={onRemove}\n                    />\n                }\n            </HorizontalGroup>\n        </div>\n    );\n}\n","import {\n  astVisitor,\n  Expr,\n  ExprBinary,\n  ExprCall,\n  ExprInteger,\n  ExprList,\n  ExprRef,\n  ExprString,\n  ExprUnary,\n  FromTable,\n  SelectedColumn,\n} from 'pgsql-ast-parser';\nimport { isString } from 'lodash';\nimport {\n  BooleanFilter,\n  AggregateColumn,\n  AggregateType,\n  BuilderMode,\n  DateFilter,\n  DateFilterWithoutValue,\n  Filter,\n  FilterOperator,\n  MultiFilter,\n  NullFilter,\n  NumberFilter,\n  OrderBy,\n  QueryBuilderOptions,\n  ColumnHint,\n  SelectedColumn as CHSelectedColumn,\n  StringFilter,\n  QueryType,\n} from 'types/queryBuilder';\nimport { sqlToStatement } from 'data/ast';\nimport { getColumnByHint } from 'data/sqlGenerator';\n\n\nexport const isBooleanType = (type: string): boolean => {\n  return ['boolean'].includes(type?.toLowerCase());\n};\n\nexport const isNumberType = (type: string): boolean => {\n  return ['int', 'float', 'decimal'].some((t) => type?.toLowerCase().includes(t));\n};\n\nexport const isDateType = (type: string): boolean => {\n  const normalizedName = type?.toLowerCase();\n  return normalizedName?.startsWith('date') || normalizedName?.startsWith('nullable(date');\n};\nexport const isDateTimeType = (type: string): boolean => {\n  const normalizedName = type?.toLowerCase();\n  return normalizedName?.startsWith('datetime') || normalizedName?.startsWith('nullable(datetime');\n};\nexport const isStringType = (type: string): boolean => {\n  return !(isBooleanType(type) || isNumberType(type) || isDateType(type));\n};\nexport const isNullFilter = (filter: Filter): filter is NullFilter => {\n  return [FilterOperator.IsNull, FilterOperator.IsNotNull].includes(filter.operator);\n};\nexport const isBooleanFilter = (filter: Filter): filter is BooleanFilter => {\n  return isBooleanType(filter.type);\n};\nexport const isNumberFilter = (filter: Filter): filter is NumberFilter => {\n  return isNumberType(filter.type);\n};\nexport const isDateFilterWithOutValue = (filter: Filter): filter is DateFilterWithoutValue => {\n  return (\n    isDateType(filter.type) &&\n    [FilterOperator.WithInGrafanaTimeRange, FilterOperator.OutsideGrafanaTimeRange].includes(filter.operator)\n  );\n};\nexport const isDateFilter = (filter: Filter): filter is DateFilter => {\n  return isDateType(filter.type);\n};\nexport const isStringFilter = (filter: Filter): filter is StringFilter => {\n  return isStringType(filter.type) && ![FilterOperator.In, FilterOperator.NotIn].includes(filter.operator);\n};\nexport const isMultiFilter = (filter: Filter): filter is MultiFilter => {\n  return isStringType(filter.type) && [FilterOperator.In, FilterOperator.NotIn].includes(filter.operator);\n};\n\nexport function getQueryOptionsFromSql(sql: string): QueryBuilderOptions | string {\n  const ast = sqlToStatement(sql);\n  if (!ast) {\n    return 'The query is not valid SQL.';\n  }\n  if (ast.type !== 'select') {\n    return 'The query is not a select statement.';\n  }\n  if (!ast.from || ast.from.length !== 1) {\n    return `The query has too many 'FROM' clauses.`;\n  }\n  if (ast.from[0].type !== 'table') {\n    return `The 'FROM' clause is not a table.`;\n  }\n  const fromTable = ast.from[0] as FromTable;\n\n  const columnsAndAggregates = getAggregatesFromAst(ast.columns || null);\n\n  const builderOptions = {\n    database: fromTable.name.schema || '',\n    table: fromTable.name.name || '',\n    queryType: QueryType.Table,\n    mode: BuilderMode.List,\n    columns: [],\n    aggregates: [],\n  } as QueryBuilderOptions;\n\n  if (columnsAndAggregates.columns.length > 0) {\n    builderOptions.columns = columnsAndAggregates.columns;\n  }\n\n  if (columnsAndAggregates.aggregates.length > 0) {\n    builderOptions.mode = BuilderMode.Aggregate;\n    builderOptions.aggregates = columnsAndAggregates.aggregates;\n  }\n\n  const timeColumn = getColumnByHint(builderOptions, ColumnHint.Time);\n  if (timeColumn) {\n    builderOptions.queryType = QueryType.TimeSeries;\n    if (builderOptions.aggregates?.length || 0) {\n      builderOptions.mode = BuilderMode.Trend;\n    }\n  }\n\n  if (ast.where) {\n    builderOptions.filters = getFiltersFromAst(ast.where, timeColumn?.name || '');\n  }\n\n  const orderBy = ast.orderBy\n    ?.map<OrderBy>((ob) => {\n      if (ob.by.type !== 'ref') {\n        return {} as OrderBy;\n      }\n      return { name: ob.by.name, dir: ob.order } as OrderBy;\n    })\n    .filter((x) => x.name);\n\n  if (orderBy && orderBy.length > 0) {\n    builderOptions.orderBy = orderBy!;\n  }\n\n  builderOptions.limit = ast.limit?.limit?.type === 'integer' ? ast.limit?.limit.value : undefined;\n\n  const groupBy = ast.groupBy\n    ?.map((gb) => {\n      if (gb.type !== 'ref') {\n        return '';\n      }\n      return gb.name;\n    })\n    .filter((x) => x !== '');\n  if (groupBy && groupBy.length > 0) {\n    builderOptions.groupBy = groupBy;\n  }\n  return builderOptions;\n}\n\nfunction getFiltersFromAst(expr: Expr, timeField: string): Filter[] {\n  const filters: Filter[] = [];\n  let i = 0;\n  let notFlag = false;\n  const visitor = astVisitor((map) => ({\n    expr: (e) => {\n      switch (e?.type) {\n        case 'binary':\n          notFlag = getBinaryFilter(e, filters, i, notFlag);\n          map.super().expr(e);\n          break;\n        case 'ref':\n          ({ i, notFlag } = getRefFilter(e, filters, i, notFlag));\n          break;\n        case 'string':\n          i = getStringFilter(filters, i, e);\n          break;\n        case 'integer':\n          i = getIntFilter(filters, i, e);\n          break;\n        case 'unary':\n          notFlag = getUnaryFilter(e, notFlag, i, filters);\n          map.super().expr(e);\n          break;\n        case 'call':\n          i = getCallFilter(e, timeField, filters, i);\n          break;\n        case 'list':\n          i = getListFilter(filters, i, e);\n          break;\n        default:\n          console.error(`${e?.type} is not supported. This is likely a bug.`);\n          break;\n      }\n    },\n  }));\n  visitor.expr(expr);\n  return filters;\n}\n\nfunction getRefFilter(e: ExprRef, filters: Filter[], i: number, notFlag: boolean): { i: number; notFlag: boolean } {\n  if (e.name?.toLowerCase() === '$__fromtime' && filters[i].operator === FilterOperator.GreaterThanOrEqual) {\n    if (notFlag) {\n      filters[i].operator = FilterOperator.OutsideGrafanaTimeRange;\n      notFlag = false;\n    } else {\n      filters[i].operator = FilterOperator.WithInGrafanaTimeRange;\n    }\n    filters[i].type = 'datetime';\n    i++;\n    return { i, notFlag };\n  }\n  if (e.name?.toLowerCase() === '$__totime') {\n    filters.splice(i, 1);\n    return { i, notFlag };\n  }\n  if (!filters[i].key) {\n    filters[i].key = e.name;\n    if (filters[i].operator === FilterOperator.IsNotNull) {\n      i++;\n    }\n    return { i, notFlag };\n  }\n  filters[i] = { ...filters[i], value: [e.name], type: 'string' } as Filter;\n  i++;\n  return { i, notFlag };\n}\n\nfunction getListFilter(filters: Filter[], i: number, e: ExprList): number {\n  filters[i] = {\n    ...filters[i],\n    value: e.expressions.map((x) => {\n      const k = x as ExprString;\n      return k.value;\n    }),\n    type: 'string',\n  } as Filter;\n  i++;\n  return i;\n}\n\nfunction getCallFilter(e: ExprCall, timeField: string, filters: Filter[], i: number): number {\n  const val = `${e.function.name}(${e.args.map<string>((x) => (x as ExprRef).name).join(',')})`;\n  //do not add the timeFilter that is used when using time series and remove the condition\n  if (val === `$__timefilter(${timeField})`) {\n    filters.splice(i, 1);\n    return i;\n  }\n  if (val.startsWith('$__timefilter(')) {\n    filters[i] = {\n      ...filters[i],\n      key: (e.args[0] as ExprRef).name,\n      operator: FilterOperator.WithInGrafanaTimeRange,\n      type: 'datetime',\n    } as Filter;\n    i++;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: val, type: 'datetime' } as Filter;\n  if (!val) {\n    i++;\n  }\n  return i;\n}\n\nfunction getUnaryFilter(e: ExprUnary, notFlag: boolean, i: number, filters: Filter[]): boolean {\n  if (e.op === 'NOT') {\n    return true;\n  }\n  if (i === 0) {\n    filters.unshift({} as Filter);\n  }\n  filters[i].operator = e.op as FilterOperator;\n  return notFlag;\n}\n\nfunction getStringFilter(filters: Filter[], i: number, e: ExprString): number {\n  if (!filters[i].key) {\n    filters[i] = { ...filters[i], key: e.value } as Filter;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: e.value, type: 'string' } as Filter;\n  i++;\n  return i;\n}\n\nfunction getIntFilter(filters: Filter[], i: number, e: ExprInteger): number {\n  if (!filters[i].key) {\n    filters[i] = { ...filters[i], key: e.value.toString() } as Filter;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: e.value, type: 'int' } as Filter;\n  i++;\n  return i;\n}\n\nfunction getBinaryFilter(e: ExprBinary, filters: Filter[], i: number, notFlag: boolean): boolean {\n  if (e.op === 'AND' || e.op === 'OR') {\n    filters.unshift({\n      condition: e.op,\n    } as Filter);\n  } else if (Object.values(FilterOperator).find((x) => e.op === x)) {\n    if (i === 0) {\n      filters.unshift({} as Filter);\n    } else if (!filters[i]) {\n      filters.push({ condition: 'AND' } as Filter);\n    }\n\n    filters[i].operator = e.op as FilterOperator;\n    if (notFlag && filters[i].operator === FilterOperator.Like) {\n      filters[i].operator = FilterOperator.NotLike;\n      notFlag = false;\n    }\n  }\n  return notFlag;\n}\n\nfunction selectCallFunc(s: SelectedColumn): [AggregateColumn | string, string | undefined] {\n  if (s.expr.type !== 'call') {\n    return [{} as AggregateColumn, undefined];\n  }\n  let fields = s.expr.args.map((x) => {\n    if (x.type !== 'ref') {\n      return '';\n    }\n    return x.name;\n  });\n  if (fields.length > 1) {\n    return ['', undefined];\n  }\n  if (\n    Object.values(AggregateType).includes(\n      s.expr.function.name.toLowerCase() as AggregateType\n    )\n  ) {\n    return [{\n      aggregateType: s.expr.function.name as AggregateType,\n      column: fields[0],\n      alias: s.alias?.name,\n    } as AggregateColumn, s.alias?.name];\n  }\n  return [fields[0], s.alias?.name];\n}\n\nfunction getAggregatesFromAst(selectClauses: SelectedColumn[] | null): { columns: CHSelectedColumn[]; aggregates: AggregateColumn[]; } {\n  if (!selectClauses) {\n    return { columns: [], aggregates: [] };\n  }\n\n  const columns: CHSelectedColumn[] = [];\n  const aggregates: AggregateColumn[] = [];\n\n  for (let s of selectClauses) {\n    switch (s.expr.type) {\n      case 'ref':\n        columns.push({ name: s.expr.name, alias: s.alias?.name });\n        break;\n      case 'call':\n        const [columnOrAggregate, alias] = selectCallFunc(s);\n        if (!columnOrAggregate) {\n          break;\n        }\n\n        if (isString(columnOrAggregate)) {\n          columns.push({ name: columnOrAggregate, type: 'datetime', alias, hint: ColumnHint.Time });\n        } else {\n          aggregates.push(columnOrAggregate);\n        }\n        break;\n    }\n  }\n\n  return { columns, aggregates };\n}\n\nexport const operMap = new Map<string, FilterOperator>([\n  ['equals', FilterOperator.Equals],\n  ['contains', FilterOperator.Like],\n]);\n\nexport function getOper(v: string): FilterOperator {\n  return operMap.get(v) || FilterOperator.Equals;\n}\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup, ConfirmModal, InlineFormLabel } from '@grafana/ui';\nimport { getQueryOptionsFromSql } from '../queryBuilder/utils';\nimport { generateSql } from 'data/sqlGenerator';\nimport labels from 'labels';\nimport { EditorType, CHQuery, defaultCHBuilderQuery } from 'types/sql';\nimport { QueryBuilderOptions } from 'types/queryBuilder';\nimport isString from 'lodash/isString';\nimport { mapQueryTypeToGrafanaFormat } from 'data/utils';\n\ninterface CHEditorTypeSwitcherProps {\n  query: CHQuery;\n  onChange: (query: CHQuery) => void;\n  onRunQuery: () => void;\n}\n\nconst options: Array<SelectableValue<EditorType>> = [\n  { label: labels.types.EditorType.sql, value: EditorType.SQL },\n  { label: labels.types.EditorType.builder, value: EditorType.Builder },\n];\n\n/**\n * Component for switching between the SQL and Query Builder editors.\n */\nexport const EditorTypeSwitcher = (props: CHEditorTypeSwitcherProps) => {\n  const { query, onChange } = props;\n  const { label, tooltip, switcher, cannotConvert } = labels.components.EditorTypeSwitcher;\n  const editorType: EditorType = query.editorType || EditorType.Builder;\n  const [confirmModalState, setConfirmModalState] = useState<boolean>(false);\n  const [cannotConvertModalState, setCannotConvertModalState] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const onEditorTypeChange = (editorType: EditorType, confirmed = false) => {\n    // TODO: component state has updated, but not local state.\n    if (query.editorType === EditorType.SQL && editorType === EditorType.Builder && !confirmed) {\n      const queryOptionsFromSql = getQueryOptionsFromSql(query.rawSql);\n      if (isString(queryOptionsFromSql)) {\n        setCannotConvertModalState(true);\n        setErrorMessage(queryOptionsFromSql);\n      } else {\n        setConfirmModalState(true);\n      }\n    } else {\n      let builderOptions: QueryBuilderOptions;\n      switch (query.editorType) {\n        case EditorType.Builder:\n          builderOptions = query.builderOptions;\n          break;\n        case EditorType.SQL:\n          builderOptions = getQueryOptionsFromSql(query.rawSql) as QueryBuilderOptions;\n          break;\n        default:\n          builderOptions = defaultCHBuilderQuery.builderOptions;\n          break;\n      }\n      if (editorType === EditorType.SQL) {\n        onChange({\n          ...query,\n          editorType: EditorType.SQL,\n          queryType: builderOptions.queryType,\n          rawSql: generateSql(builderOptions),\n          format: mapQueryTypeToGrafanaFormat(builderOptions.queryType),\n          meta: { builderOptions },\n        });\n      } else if (editorType === EditorType.Builder) {\n        onChange({\n          ...query,\n          editorType: EditorType.Builder,\n          rawSql: generateSql(builderOptions),\n          builderOptions\n        });\n      }\n    }\n  };\n  const onConfirmEditorTypeChange = () => {\n    onEditorTypeChange(EditorType.Builder, true);\n    setConfirmModalState(false);\n    setCannotConvertModalState(false);\n  };\n  return (\n    <span>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup options={options} value={editorType} onChange={e => onEditorTypeChange(e)} />\n      <ConfirmModal\n        isOpen={confirmModalState}\n        title={switcher.title}\n        body={switcher.body}\n        confirmText={switcher.confirmText}\n        dismissText={switcher.dismissText}\n        icon=\"exclamation-triangle\"\n        onConfirm={onConfirmEditorTypeChange}\n        onDismiss={() => setConfirmModalState(false)}\n      />\n      <ConfirmModal\n        title={cannotConvert.title}\n        body={`${errorMessage}\\n${cannotConvert.message}`}\n        isOpen={cannotConvertModalState}\n        icon=\"exclamation-triangle\"\n        onConfirm={onConfirmEditorTypeChange}\n        confirmText={switcher.confirmText}\n        onDismiss={() => setCannotConvertModalState(false)}\n      />\n    </span>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { InlineFormLabel, MultiSelect } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { TableColumn, SelectedColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\nimport { styles } from 'styles';\n\ninterface ColumnsEditorProps {\n  allColumns: readonly TableColumn[];\n  selectedColumns: SelectedColumn[];\n  onSelectedColumnsChange: (selectedColumns: SelectedColumn[]) => void;\n  disabled?: boolean;\n  showAllOption?: boolean;\n}\n\nfunction getCustomColumns(columnNames: string[], allColumns: readonly TableColumn[]): Array<SelectableValue<string>> {\n  const columnNamesSet = new Set(columnNames);\n  return allColumns.\n    filter(c => columnNamesSet.has(c.name)).\n    map(c => ({ label: c.label || c.name, value: c.name }));\n}\n\nconst allColumnName = '*';\n\nexport const ColumnsEditor = (props: ColumnsEditorProps) => {\n  const { allColumns, selectedColumns, onSelectedColumnsChange, disabled, showAllOption } = props;\n  const [customColumns, setCustomColumns] = useState<Array<SelectableValue<string>>>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const allColumnNames = allColumns.map(c => ({ label: c.label || c.name, value: c.name }));\n  if (showAllOption) {\n    allColumnNames.push({ label: allColumnName, value: allColumnName });\n  }\n  const selectedColumnNames = (selectedColumns || []).map(c => ({ label: c.alias || c.name, value: c.name }));\n  const { label, tooltip } = labels.components.ColumnsEditor;\n\n  const options = [...allColumnNames, ...customColumns];\n\n  useEffect(() => {\n    if (allColumns.length === 0) {\n      return;\n    }\n\n    const columnNames = selectedColumns.map(c => c.name);\n    const customColumns = getCustomColumns(columnNames, allColumns);\n    setCustomColumns(customColumns);\n  }, [allColumns, selectedColumns]);\n\n  const onChange = (selected: Array<SelectableValue<string>>): void => {\n    setIsOpen(false);\n    const selectedColumnNames = new Set<string>(selected.map(s => s.value!));\n    const customColumnNames = new Set<string>(customColumns.map(c => c.value!))\n    const columnMap = new Map<string, TableColumn>();\n    const currentColumnMap = new Map<string, SelectedColumn>();\n    allColumns.forEach(c => columnMap.set(c.name, c));\n    selectedColumns.forEach(c => currentColumnMap.set(c.name, c));\n\n    const excludeAllColumn = selectedColumnNames.size > 1;\n    const nextSelectedColumns: SelectedColumn[] = [];\n    for (let columnName of selectedColumnNames) {\n      if (excludeAllColumn && columnName === allColumnName) {\n        continue;\n      }\n\n      const tableColumn = columnMap.get(columnName);\n      const existingColumn = currentColumnMap.get(columnName);\n\n      if (existingColumn) {\n        nextSelectedColumns.push(existingColumn);\n      } else {\n        nextSelectedColumns.push({\n          name: columnName,\n          type: tableColumn?.type || 'String',\n          custom: customColumnNames.has(columnName),\n          alias: tableColumn?.label || columnName,\n        });\n      }\n    }\n\n    onSelectedColumnsChange(nextSelectedColumns);\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div data-testid={selectors.components.QueryBuilder.ColumnsEditor.multiSelectWrapper} className={styles.Common.selectWrapper}>\n        <MultiSelect<string>\n          disabled={disabled}\n          options={options}\n          value={selectedColumnNames}\n          isOpen={isOpen}\n          onOpenMenu={() => setIsOpen(true)}\n          onCloseMenu={() => setIsOpen(false)}\n          onChange={onChange}\n          allowCustomValue={true}\n          menuPlacement={'bottom'}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { ColumnHint, SelectedColumn, TableColumn } from 'types/queryBuilder';\nimport { styles } from 'styles';\n\ninterface ColumnSelectProps {\n  allColumns: readonly TableColumn[];\n  selectedColumn: SelectedColumn | undefined;\n  onColumnChange: (c: SelectedColumn | undefined) => void;\n  columnFilterFn?: (c: TableColumn) => boolean;\n  columnHint?: ColumnHint;\n  label: string;\n  tooltip: string;\n  disabled?: boolean;\n  invalid?: boolean;\n  wide?: boolean;\n  inline?: boolean;\n  clearable?: boolean;\n}\n\nconst defaultFilterFn = () => true;\n\nexport const ColumnSelect = (props: ColumnSelectProps) => {\n  const { allColumns, selectedColumn, onColumnChange, columnFilterFn, columnHint, label, tooltip, disabled, invalid, wide, inline, clearable } = props;\n  const selectedColumnName = selectedColumn?.name;\n  const columns: Array<SelectableValue<string>> = allColumns.\n    filter(columnFilterFn || defaultFilterFn).\n    map(c => ({ label: c.label || c.name, value: c.name }));\n\n  // Select component WILL NOT display the value if it isn't present in the options.\n  let staleOption = false;\n  if (selectedColumn && !columns.find(c => c.value === selectedColumn.name)) {\n    columns.push({ label: selectedColumn.alias || selectedColumn.name, value: selectedColumn.name });\n    staleOption = true;\n  }\n\n  const onChange = (selected: SelectableValue<string | undefined>) => {\n    if (!selected || !selected.value) {\n      onColumnChange(undefined);\n      return;\n    }\n\n    const column = allColumns.find(c => c.name === selected!.value)!;\n    const nextColumn: SelectedColumn = {\n      name: column?.name || selected!.value,\n      type: column?.type,\n      hint: columnHint,\n    };\n\n    if (column && column.label !== undefined) {\n      nextColumn.alias = column.label;\n    }\n\n    onColumnChange(nextColumn);\n  }\n\n  const labelStyle = 'query-keyword ' + (inline ? styles.QueryEditor.inlineField : '');\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={wide ? 12 : 8} className={labelStyle} tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select<string | undefined>\n        disabled={disabled}\n        invalid={invalid || staleOption}\n        options={columns}\n        value={selectedColumnName}\n        placeholder={selectedColumnName || undefined}\n        onChange={onChange}\n        width={wide ? 25 : 20}\n        menuPlacement={'bottom'}\n        isClearable={clearable === undefined || clearable}\n        allowCustomValue\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Button, InlineFormLabel, Select } from '@grafana/ui';\nimport {\n  OrderBy,\n  OrderByDirection,\n  QueryBuilderOptions,\n  TableColumn,\n} from 'types/queryBuilder';\nimport allLabels from 'labels';\nimport { styles } from 'styles';\nimport { isAggregateQuery } from 'data/sqlGenerator';\n\ninterface OrderByItemProps {\n  columnOptions: Array<SelectableValue<string>>;\n  index: number,\n  orderByItem: OrderBy;\n  updateOrderByItem: (index: number, orderByItem: OrderBy) => void;\n  removeOrderByItem: (index: number) => void;\n}\n\nconst sortOptions = [\n  { label: 'ASC', value: OrderByDirection.ASC },\n  { label: 'DESC', value: OrderByDirection.DESC },\n];\n\nconst OrderByItem = (props: OrderByItemProps) => {\n  const { columnOptions, index, orderByItem, updateOrderByItem, removeOrderByItem } = props;\n\n  return (\n    <>\n      <Select\n        disabled={Boolean(orderByItem.hint)}\n        placeholder={orderByItem.hint ? allLabels.types.ColumnHint[orderByItem.hint] : undefined}\n        value={orderByItem.hint ? undefined : orderByItem.name}\n        className={styles.Common.inlineSelect}\n        width={36}\n        options={columnOptions}\n        onChange={e => updateOrderByItem(index, { ...orderByItem, name: e.value! })}\n        allowCustomValue\n        menuPlacement={'bottom'}\n      />\n      <Select<OrderByDirection>\n        value={orderByItem.dir}\n        className={styles.Common.inlineSelect}\n        width={12}\n        options={sortOptions}\n        onChange={e => updateOrderByItem(index, { ...orderByItem, dir: e.value! })}\n        menuPlacement={'bottom'}\n      />\n      <Button\n        data-testid=\"query-builder-orderby-remove-button\"\n        className={styles.Common.smallBtn}\n        variant=\"destructive\"\n        size=\"sm\"\n        icon=\"trash-alt\"\n        onClick={() => removeOrderByItem(index)}\n      />\n    </>\n  );\n};\n\ninterface OrderByEditorProps {\n  orderByOptions: Array<SelectableValue<string>>;\n  orderBy: OrderBy[];\n  onOrderByChange: (orderBy: OrderBy[]) => void;\n}\nexport const OrderByEditor = (props: OrderByEditorProps) => {\n  const { orderByOptions, orderBy, onOrderByChange } = props;\n  const { label, tooltip, addLabel } = allLabels.components.OrderByEditor;\n\n  const addOrderByItem = () => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy.push({ name: orderByOptions[0]?.value!, dir: OrderByDirection.ASC });\n    onOrderByChange(nextOrderBy);\n  };\n  const removeOrderByItem = (index: number) => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy.splice(index, 1);\n    onOrderByChange(nextOrderBy);\n  };\n  const updateOrderByItem = (index: number, orderByItem: OrderBy) => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy[index] = orderByItem;\n    onOrderByChange(nextOrderBy);\n  };\n\n  if (orderByOptions.length === 0) {\n    return null;\n  }\n\n  const fieldLabel = (\n    <InlineFormLabel\n      width={8}\n      className=\"query-keyword\"\n      data-testid=\"query-builder-orderby-item-label\"\n      tooltip={tooltip}\n    >\n      {label}\n    </InlineFormLabel>\n  );\n  const fieldSpacer = <div className={`width-8 ${styles.Common.firstLabel}`}></div>;\n\n  return (\n    <>\n      {orderBy.map((orderByItem, index) => {\n        const key = `${index}-${orderByItem.name}-${orderByItem.hint || ''}-${orderByItem.dir}`;\n        return (\n          <div className=\"gf-form\" key={key} data-testid=\"query-builder-orderby-item-wrapper\">\n            { index === 0 ? fieldLabel : fieldSpacer }\n            <OrderByItem\n              columnOptions={orderByOptions}\n              index={index}\n              orderByItem={orderByItem}\n              updateOrderByItem={updateOrderByItem}\n              removeOrderByItem={removeOrderByItem}\n            />\n          </div>\n        );\n      })}\n\n      <div className=\"gf-form\">\n        {orderBy.length === 0 ? fieldLabel : fieldSpacer}\n        <Button\n          data-testid=\"query-builder-orderby-add-button\"\n          icon=\"plus-circle\"\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={addOrderByItem}\n          className={styles.Common.smallBtn}\n        >\n          {addLabel}\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport const getOrderByOptions = (builder: QueryBuilderOptions, allColumns: readonly TableColumn[]): Array<SelectableValue<string>> => {\n  let allOptions: Array<SelectableValue<string>> = [];\n\n  if (isAggregateQuery(builder)) {\n    builder.columns?.forEach(c => {\n      allOptions.push({ label: c.alias || c.name, value: c.name });\n    });\n\n    builder.aggregates!.forEach(a => {\n      let label = `${a.aggregateType}(${a.column})`;\n      let value = label;\n\n      if (a.alias) {\n        label += ` as ${a.alias}`;\n        value = a.alias;\n      }\n\n      allOptions.push({ label, value });\n    });\n\n    if (builder.groupBy && builder.groupBy.length > 0) {\n      builder.groupBy.forEach(g => allOptions.push({ label: g, value: g }));\n    }\n  } else {\n    allColumns.forEach(c => allOptions.push({ label: c.label || c.name, value: c.name }));\n  }\n\n  // Add selected value to the list if it does not exist.\n  const allValues = new Set(allOptions.map(o => o.value));\n  const customValues = builder.orderBy?.filter(o => !allValues.has(o.name));\n  customValues?.forEach(o => allOptions.push({ label: o.name, value: o.name }));\n\n  return allOptions;\n};\n","import React, { useState } from 'react';\nimport { InlineFormLabel, Input } from '@grafana/ui';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\n\ninterface LimitEditorProps {\n  limit: number;\n  onLimitChange: (limit: number) => void;\n}\n\nexport const LimitEditor = (props: LimitEditorProps) => {\n  const [limit, setLimit] = useState<number>(props.limit || 0);\n  const { label, tooltip } = labels.components.LimitEditor;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        data-testid={selectors.components.QueryBuilder.LimitEditor.input}\n        width={10}\n        value={limit}\n        type=\"number\"\n        min={0}\n        onChange={e => setLimit(e.currentTarget.valueAsNumber)}\n        onBlur={() => props.onLimitChange(limit)}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Button, HorizontalGroup, InlineFormLabel, Input, MultiSelect, RadioButtonGroup, Select } from '@grafana/ui';\nimport { Filter, FilterOperator, TableColumn, NullFilter } from 'types/queryBuilder';\nimport * as utils from 'components/queryBuilder/utils';\nimport labels from 'labels';\nimport { styles } from 'styles';\nimport { Datasource } from 'data/CHDatasource';\nimport useUniqueMapKeys from 'hooks/useUniqueMapKeys';\n\nconst boolValues: Array<SelectableValue<boolean>> = [\n  { value: true, label: 'True' },\n  { value: false, label: 'False' },\n];\nconst conditions: Array<SelectableValue<'AND' | 'OR'>> = [\n  { value: 'AND', label: 'AND' },\n  { value: 'OR', label: 'OR' },\n];\nconst filterOperators: Array<SelectableValue<FilterOperator>> = [\n  { value: FilterOperator.WithInGrafanaTimeRange, label: 'Within dashboard time range' },\n  { value: FilterOperator.OutsideGrafanaTimeRange, label: 'Outside dashboard time range' },\n  { value: FilterOperator.IsAnything, label: 'IS ANYTHING' },\n  { value: FilterOperator.Equals, label: '=' },\n  { value: FilterOperator.NotEquals, label: '!=' },\n  { value: FilterOperator.LessThan, label: '<' },\n  { value: FilterOperator.LessThanOrEqual, label: '<=' },\n  { value: FilterOperator.GreaterThan, label: '>' },\n  { value: FilterOperator.GreaterThanOrEqual, label: '>=' },\n  { value: FilterOperator.Like, label: 'LIKE' },\n  { value: FilterOperator.NotLike, label: 'NOT LIKE' },\n  { value: FilterOperator.IsEmpty, label: 'IS EMPTY' },\n  { value: FilterOperator.IsNotEmpty, label: 'IS NOT EMPTY' },\n  { value: FilterOperator.In, label: 'IN' },\n  { value: FilterOperator.NotIn, label: 'NOT IN' },\n  { value: FilterOperator.IsNull, label: 'IS NULL' },\n  { value: FilterOperator.IsNotNull, label: 'IS NOT NULL' },\n];\nconst standardTimeOptions: Array<SelectableValue<string>> = [\n  { value: 'today()', label: 'TODAY' },\n  { value: 'yesterday()', label: 'YESTERDAY' },\n  { value: 'now()', label: 'NOW' },\n  { value: 'GRAFANA_START_TIME', label: 'DASHBOARD START TIME' },\n  { value: 'GRAFANA_END_TIME', label: 'DASHBOARD END TIME' },\n];\nexport const defaultNewFilter: NullFilter = {\n  filterType: 'custom',\n  condition: 'AND',\n  key: '',\n  type: '',\n  operator: FilterOperator.IsAnything,\n};\nexport interface PredefinedFilter {\n  restrictToFields?: readonly TableColumn[];\n}\n\nconst FilterValueNumberItem = (props: { value: number; onChange: (value: number) => void }) => {\n  const [value, setValue] = useState(props.value || 0);\n  return (\n    <div data-testid=\"query-builder-filters-number-value-container\">\n      <Input\n        data-testid=\"query-builder-filters-number-value-input\"\n        type=\"number\"\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.valueAsNumber || 0)}\n        onBlur={() => props.onChange(value)}\n      />\n    </div>\n  );\n};\n\nconst FilterValueSingleStringItem = (props: { value: string; onChange: (value: string) => void }) => {\n  return (\n    <div data-testid=\"query-builder-filters-single-string-value-container\">\n      <Input\n        data-testid=\"query-builder-filters-single-string-value-input\"\n        type=\"text\"\n        defaultValue={props.value}\n        width={70}\n        onBlur={(e) => props.onChange(e.currentTarget.value)}\n      />\n    </div>\n  );\n};\n\nconst FilterValueMultiStringItem = (props: { value: string[]; onChange: (value: string[]) => void }) => {\n  const [value, setValue] = useState(props.value || []);\n  return (\n    <div data-testid=\"query-builder-filters-multi-string-value-container\">\n      <Input\n        type=\"text\"\n        value={value.join(',')}\n        placeholder=\"comma separated values\"\n        onChange={(e) => setValue((e.currentTarget.value || '').split(','))}\n        onBlur={() => props.onChange(value)}\n      />\n    </div>\n  );\n};\n\nexport const FilterValueEditor = (props: {\n  allColumns: readonly TableColumn[];\n  filter: Filter;\n  onFilterChange: (filter: Filter) => void;\n}) => {\n  const { filter, onFilterChange, allColumns: fieldsList } = props;\n  const getOptions = () => {\n    const matchedFilter = fieldsList.find((f) => f.name === filter.key);\n    return matchedFilter?.picklistValues || [];\n  };\n  if (utils.isNullFilter(filter)) {\n    return <></>;\n  } else if ([FilterOperator.IsAnything, FilterOperator.IsEmpty, FilterOperator.IsNotEmpty].includes(filter.operator)) {\n    return <></>;\n  } else if (utils.isBooleanFilter(filter)) {\n    const onBoolFilterValueChange = (value: boolean) => {\n      onFilterChange({ ...filter, value });\n    };\n    return (\n      <div data-testid=\"query-builder-filters-boolean-value-container\">\n        <RadioButtonGroup options={boolValues} value={filter.value} onChange={(e) => onBoolFilterValueChange(e!)} />\n      </div>\n    );\n  } else if (utils.isNumberFilter(filter)) {\n    return <FilterValueNumberItem value={filter.value} onChange={(value) => onFilterChange({ ...filter, value })} />;\n  } else if (utils.isDateFilter(filter)) {\n    if (utils.isDateFilterWithOutValue(filter)) {\n      return null;\n    }\n\n    const onDateFilterValueChange = (value: string) => {\n      onFilterChange({ ...filter, value });\n    };\n    const dateOptions = [...standardTimeOptions];\n    if (filter.value && !standardTimeOptions.find(o => o.value === filter.value)) {\n      dateOptions.push({ label: filter.value, value: filter.value });\n    }\n\n    return (\n      <div data-testid=\"query-builder-filters-date-value-container\">\n        <Select\n          value={filter.value || 'TODAY'}\n          onChange={e => onDateFilterValueChange(e.value!)}\n          options={dateOptions}\n          width={40}\n          allowCustomValue\n        />\n      </div>\n    );\n  } else if (utils.isStringFilter(filter)) {\n    const onStringFilterValueChange = (value: string) => {\n      onFilterChange({ ...filter, value });\n    };\n    if (\n      filter.type === 'picklist' &&\n      (filter.operator === FilterOperator.Equals || filter.operator === FilterOperator.NotEquals)\n    ) {\n      return (\n        <div data-testid=\"query-builder-filters-single-picklist-value-container\">\n          <Select value={filter.value} onChange={(e) => onStringFilterValueChange(e.value!)} options={getOptions()} />\n        </div>\n      );\n    }\n\n    return (\n      <FilterValueSingleStringItem\n        value={filter.value}\n        onChange={onStringFilterValueChange}\n        // enforce input re-render when filter changes to avoid stale input value\n        key={filter.value}\n      />\n    );\n  } else if (utils.isMultiFilter(filter)) {\n    const onMultiFilterValueChange = (value: string[]) => {\n      onFilterChange({ ...filter, value });\n    };\n    if (filter.type === 'picklist') {\n      return (\n        <div data-testid=\"query-builder-filters-multi-picklist-value-container\">\n          <MultiSelect\n            value={filter.value}\n            options={getOptions()}\n            onChange={(e) => onMultiFilterValueChange(e.map((v) => v.value!))}\n          />\n        </div>\n      );\n    }\n    return <FilterValueMultiStringItem value={filter.value} onChange={onMultiFilterValueChange} />;\n  } else {\n    return <></>;\n  }\n};\n\nexport const FilterEditor = (props: {\n  allColumns: readonly TableColumn[];\n  index: number;\n  filter: Filter & PredefinedFilter;\n  onFilterChange: (index: number, filter: Filter) => void;\n  removeFilter: (index: number) => void;\n  datasource: Datasource;\n  database: string;\n  table: string;\n}) => {\n  const { index, filter, allColumns: fieldsList, onFilterChange, removeFilter } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const isMapType = filter.type.startsWith('Map');\n  const mapKeys = useUniqueMapKeys(props.datasource, isMapType ? filter.key : '', props.database, props.table);\n  const mapKeyOptions = mapKeys.map(k => ({ label: k, value: k }));\n  if (filter.mapKey && !mapKeys.includes(filter.mapKey)) {\n    mapKeyOptions.push({ label: filter.mapKey, value: filter.mapKey });\n  }\n\n  const getFields = () => {\n    const values = (filter.restrictToFields || fieldsList).map(f => {\n      let label = f.label || f.name;\n      if (f.type.startsWith('Map')) {\n        label += '[]';\n      }\n\n      return { label, value: f.name };\n    });\n    // Add selected value to the list if it does not exist.\n    if (filter?.key && !values.find((x) => x.value === filter.key)) {\n      values.push({ label: filter.label || filter.key!, value: filter.key! });\n    }\n    return values;\n  };\n  const getFilterOperatorsByType = (type = 'string'): Array<SelectableValue<FilterOperator>> => {\n    if (utils.isBooleanType(type)) {\n      return filterOperators.filter((f) => [FilterOperator.Equals, FilterOperator.NotEquals].includes(f.value!));\n    } else if (utils.isNumberType(type)) {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n        ].includes(f.value!)\n      );\n    } else if (utils.isDateType(type)) {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n          FilterOperator.WithInGrafanaTimeRange,\n          FilterOperator.OutsideGrafanaTimeRange,\n        ].includes(f.value!)\n      );\n    } else {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.Like,\n          FilterOperator.NotLike,\n          FilterOperator.In,\n          FilterOperator.NotIn,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.IsEmpty,\n          FilterOperator.IsNotEmpty,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n        ].includes(f.value!)\n      );\n    }\n  };\n  const onFilterNameChange = (fieldName: string) => {\n    setIsOpen(false);\n    const matchingField = fieldsList.find(f => f.name === fieldName);\n    const filterData = {\n      key: matchingField?.name || fieldName,\n      type: matchingField?.type || 'String',\n      label: matchingField?.label,\n    };\n\n    let newFilter: Filter & PredefinedFilter;\n    // this is an auto-generated TimeRange filter\n    if (filter.restrictToFields) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key || filter.key,\n        type: 'datetime',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        restrictToFields: filter.restrictToFields,\n        label: filterData.label,\n      };\n    } else if (utils.isBooleanType(filterData.type)) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: 'boolean',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.Equals,\n        value: false,\n        label: filterData.label,\n      };\n    } else if (utils.isDateType(filterData.type)) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: filterData.type as 'date',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.Equals,\n        value: 'TODAY',\n        label: filterData.label,\n      };\n    } else {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: filterData.type,\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.IsNotNull,\n        label: filterData.label,\n      };\n    }\n    onFilterChange(index, newFilter);\n  };\n  const onFilterMapKeyChange = (mapKey: string) => {\n    const newFilter: Filter = { ...filter };\n    newFilter.mapKey = mapKey;\n    onFilterChange(index, newFilter);\n  };\n  const onFilterOperatorChange = (operator: FilterOperator) => {\n    const newFilter: Filter = { ...filter };\n    newFilter.operator = operator;\n    if (utils.isMultiFilter(newFilter)) {\n      if (!Array.isArray(newFilter.value)) {\n        newFilter.value = [newFilter.value || ''];\n      }\n    }\n    onFilterChange(index, newFilter);\n  };\n  const onFilterConditionChange = (condition: 'AND' | 'OR') => {\n    const newFilter: Filter = { ...filter };\n    newFilter.condition = condition;\n    onFilterChange(index, newFilter);\n  };\n  const onFilterValueChange = (filter: Filter) => {\n    onFilterChange(index, filter);\n  };\n\n  return (\n    <HorizontalGroup wrap align=\"flex-start\" justify=\"flex-start\">\n      {index !== 0 && (\n        <RadioButtonGroup options={conditions} value={filter.condition} onChange={(e) => onFilterConditionChange(e!)} />\n      )}\n      <Select\n        disabled={Boolean(filter.hint)}\n        placeholder={filter.hint ? labels.types.ColumnHint[filter.hint] : undefined}\n        value={filter.key}\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={getFields()}\n        isOpen={isOpen}\n        onOpenMenu={() => setIsOpen(true)}\n        onCloseMenu={() => setIsOpen(false)}\n        onChange={(e) => onFilterNameChange(e.value!)}\n        allowCustomValue\n        menuPlacement={'bottom'}\n      />\n      { isMapType &&\n        <Select\n          value={filter.mapKey}\n          placeholder={labels.components.FilterEditor.mapKeyPlaceholder}\n          width={40}\n          className={styles.Common.inlineSelect}\n          options={mapKeyOptions}\n          onChange={e => onFilterMapKeyChange(e.value!)}\n          allowCustomValue\n          menuPlacement={'bottom'}\n        />  \n      }\n      <Select\n        value={filter.operator}\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={getFilterOperatorsByType(filter.type)}\n        onChange={(e) => onFilterOperatorChange(e.value!)}\n        menuPlacement={'bottom'}\n      />\n      <FilterValueEditor filter={filter} onFilterChange={onFilterValueChange} allColumns={fieldsList} />\n      <Button\n        data-testid=\"query-builder-filters-remove-button\"\n        icon=\"trash-alt\"\n        variant=\"destructive\"\n        size=\"sm\"\n        className={styles.Common.smallBtn}\n        onClick={() => removeFilter(index)}\n      />\n    </HorizontalGroup>\n  );\n};\n\nexport const FiltersEditor = (props: {\n  allColumns: readonly TableColumn[];\n  filters: Filter[];\n  onFiltersChange: (filters: Filter[]) => void;\n  datasource: Datasource;\n  database: string;\n  table: string;\n}) => {\n  const { filters = [], onFiltersChange, allColumns: fieldsList = [], datasource, database, table } = props;\n  const { label, tooltip, addLabel } = labels.components.FilterEditor;\n  const addFilter = () => {\n    onFiltersChange([...filters, { ...defaultNewFilter }]);\n  };\n  const removeFilter = (index: number) => {\n    const newFilters = [...filters];\n    newFilters.splice(index, 1);\n    onFiltersChange(newFilters);\n  };\n  const onFilterChange = (index: number, filter: Filter) => {\n    const newFilters = [...filters];\n    newFilters[index] = filter;\n    onFiltersChange(newFilters);\n  };\n\n  return (\n    <>\n      {filters.length === 0 && (\n        <div className=\"gf-form\">\n          <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n            {label}\n          </InlineFormLabel>\n          <Button\n            data-testid=\"query-builder-filters-add-button\"\n            icon=\"plus-circle\"\n            variant=\"secondary\"\n            size=\"sm\"\n            className={styles.Common.smallBtn}\n            onClick={addFilter}\n          >\n            {addLabel}\n          </Button>\n        </div>\n      )}\n      {filters.map((filter, index) => {\n        return (\n          <div className=\"gf-form\" key={index}>\n            {index === 0 ? (\n              <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n                {label}\n              </InlineFormLabel>\n            ) : (\n              <div className={`width-8 ${styles.Common.firstLabel}`}></div>\n            )}\n            <FilterEditor\n              allColumns={fieldsList}\n              filter={filter}\n              onFilterChange={onFilterChange}\n              removeFilter={removeFilter}\n              index={index}\n              datasource={datasource}\n              database={database}\n              table={table}\n            />\n          </div>\n        );\n      })}\n      {filters.length !== 0 && (\n        <div className=\"gf-form\">\n          <div className={`width-8 ${styles.Common.firstLabel}`}></div>\n          <Button\n            data-testid=\"query-builder-filters-inline-add-button\"\n            icon=\"plus-circle\"\n            variant=\"secondary\"\n            size=\"sm\"\n            className={styles.Common.smallBtn}\n            onClick={addFilter}\n          >\n            {addLabel}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, mapColumn: string, database: string, table: string): readonly string[] => {\n  const [keys, setKeys] = useState<string[]>([]); \n  \n  useEffect(() => {\n    if (!datasource || !mapColumn || !database || !table) {\n      return;\n    }\n\n    let ignore = false;\n    datasource.\n      fetchUniqueMapKeys(mapColumn, database, table).\n      then(tables => {\n        if (ignore) {\n          return;\n        }\n        setKeys(tables);\n      }).\n      catch((ex: any) => {\n        console.error('Failed to fetch map keys for column:', mapColumn, database, table, ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, mapColumn, database, table]);\n\n  // Immediately return empty array on change so keys aren't stale\n  const lastDatabase = useRef<string>('');\n  const lastTable = useRef<string>('');\n  if (database !== lastDatabase.current || table !== lastTable.current) {\n    lastDatabase.current = database;\n    lastTable.current = table;\n    setKeys([]);\n    return [];\n  }\n\n  return keys;\n}\n","import { SelectedColumn } from \"types/queryBuilder\";\n\n\nexport const columnFilterDateTime = (s: SelectedColumn): boolean => (s.type || '').toLowerCase().includes('date');\nexport const columnFilterString = (s: SelectedColumn): boolean => (s.type || '').toLowerCase().includes('string') || (s.type || '').toLowerCase().includes('enum');\nexport const columnFilterOr = (s: SelectedColumn, ...filterFuncs: ReadonlyArray<(s: SelectedColumn) => boolean>): boolean => {\n  for (let filterFn of filterFuncs) {\n    if (filterFn(s)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n","import React from 'react';\n\ntype onOptionChangeFn<T> = (key: keyof T) => (nextValue: React.SetStateAction<any>) => void;\n\n/**\n * Returns a function that can apply changes with an object or a specific key in an object. When called\n * will run another function with the changes applied.\n * \n * Does not deep clone the object. This is used for top level fields on the QueryBuilderOptions type.\n * \n * @param onChange a function that receives the updated state from the change function\n * @param prevState the current (previous) state object\n * @returns a function used to apply changes to individual fields\n */\nexport function useBuilderOptionChanges<T>(onChange: (nextState: T) => void, prevState: T): onOptionChangeFn<T> {\n  return (key: keyof T) =>\n    (nextValue: React.SetStateAction<any>) => {\n    const nextState: T = {\n      ...prevState,\n      [key]: nextValue\n    };\n    \n    onChange(nextState);\n  };\n}\n","import { useState, useEffect, useRef } from 'react';\nimport { TableColumn } from 'types/queryBuilder';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, database: string, table: string): readonly TableColumn[] => {\n  const [columns, setColumns] = useState<readonly TableColumn[]>([]);\n\n  useEffect(() => {\n    if (!datasource || !database || !table) {\n      return;\n    }\n\n    let ignore = false;\n    datasource.fetchColumns(database, table).then(columns => {\n        if (ignore) {\n          return;\n        }\n        setColumns(columns);\n      })\n      .catch((ex: any) => {\n        console.error(ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, database, table]);\n\n  // Immediately return empty array on change so columns aren't stale\n  const lastDbTable = useRef<string>('');\n  const dbTable = database + table;\n  if (dbTable !== lastDbTable.current) {\n    lastDbTable.current = dbTable;\n    setColumns([]);\n    return [];\n  }\n\n  return columns;\n};\n","import { Reducer, useReducer } from \"react\";\nimport { QueryBuilderOptions, QueryType, SelectedColumn } from \"types/queryBuilder\";\nimport { defaultCHBuilderQuery } from \"types/sql\";\n\nenum BuilderOptionsActionType {\n  SetOptions = 'set_options',\n  SetAllOptions = 'set_all_options',\n  SetQueryType = 'set_query_type',\n  SetDatabase = 'set_database',\n  SetTable = 'set_table',\n  SetOtelEnabled = 'set_otel_enabled',\n  SetOtelVersion = 'set_otel_version',\n  SetColumnByHint = 'set_column_by_hint',\n  SetBuilderMinimized = 'set_builder_minimized',\n};\n\ntype QueryBuilderOptionsReducerAction = {\n  type: BuilderOptionsActionType,\n  payload: Partial<QueryBuilderOptions>\n};\n\ntype GenericReducerAction = {\n  type: BuilderOptionsActionType,\n  payload: any\n};\n\nexport type BuilderOptionsReducerAction = QueryBuilderOptionsReducerAction | GenericReducerAction;\n\nconst createAction = (type: BuilderOptionsActionType, payload: Partial<QueryBuilderOptions>): BuilderOptionsReducerAction => ({ type, payload });\nconst createGenericAction = (type: BuilderOptionsActionType, payload: any): GenericReducerAction => ({ type, payload });\nexport const setOptions = (options: Partial<QueryBuilderOptions>): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetOptions, options);\nexport const setAllOptions = (options: QueryBuilderOptions): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetAllOptions, options);\nexport const setQueryType = (queryType: QueryType): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetQueryType, { queryType });\nexport const setDatabase = (database: string): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetDatabase, { database });\nexport const setTable = (table: string): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetTable, { table });\nexport const setOtelEnabled = (otelEnabled: boolean): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetOtelEnabled, { meta: { otelEnabled } });\nexport const setOtelVersion = (otelVersion: string): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetOtelVersion, { meta: { otelVersion } });\nexport const setColumnByHint = (column: SelectedColumn): GenericReducerAction => createGenericAction(BuilderOptionsActionType.SetColumnByHint, { column });\nexport const setBuilderMinimized = (minimized: boolean): GenericReducerAction => createGenericAction(BuilderOptionsActionType.SetBuilderMinimized, { minimized });\n\n\nconst reducer = (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n  const actionFn = actions.get(action.type);\n  if (!actionFn) {\n    throw Error('missing function for BuilderOptionsActionType: ' + action.type);\n  }\n\n  const nextState = actionFn(state, action);\n  // console.log('ACTION:', action.type, 'PAYLOAD:', action.payload, 'PREV STATE:', state, 'NEXT STATE:', nextState);\n  return nextState;\n};\n\n/**\n * A mapping between action type and reducer function, used in reducer to apply action changes.\n */\nconst actions = new Map<BuilderOptionsActionType, Reducer<QueryBuilderOptions, BuilderOptionsReducerAction>>([\n  [BuilderOptionsActionType.SetOptions, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // A catch-all action for applying option changes.\n    const nextOptions = action.payload as Partial<QueryBuilderOptions>;\n    return mergeBuilderOptionsState(state, nextOptions);\n  }],\n  [BuilderOptionsActionType.SetAllOptions, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // Resets existing state with provided options.\n    const nextOptions = action.payload as Partial<QueryBuilderOptions>;\n    return buildInitialState(nextOptions);\n  }],\n  [BuilderOptionsActionType.SetQueryType, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // If switching query type, reset the editor.\n    const nextQueryType = action.payload.queryType;\n    if (state.queryType !== nextQueryType) {\n      return buildInitialState({\n        database: state.database,\n        table: state.table,\n        queryType: nextQueryType\n      });\n    }\n\n    return state;\n  }],\n  [BuilderOptionsActionType.SetDatabase, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // Clear table and reset editor when database changes\n    return buildInitialState({\n      database: action.payload.database,\n      table: '',\n      queryType: state.queryType\n    });\n  }],\n  [BuilderOptionsActionType.SetTable, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // Reset editor when table changes\n    return buildInitialState({\n      database: state.database,\n      table: action.payload.table,\n      queryType: state.queryType\n    });\n  }],\n  [BuilderOptionsActionType.SetOtelEnabled, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    return mergeBuilderOptionsState(state, {\n      meta: {\n        otelEnabled: Boolean(action.payload.meta?.otelEnabled),\n      }\n    });\n  }],\n  [BuilderOptionsActionType.SetOtelVersion, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    return mergeBuilderOptionsState(state, {\n      meta: {\n        otelVersion: action.payload.meta?.otelVersion\n      }\n    });\n  }],\n  [BuilderOptionsActionType.SetColumnByHint, (state: QueryBuilderOptions, action: GenericReducerAction): QueryBuilderOptions => {\n    const col = action.payload.column as SelectedColumn;\n    const nextColumns = (state.columns || []).filter(c => c.hint !== col.hint);\n    nextColumns.push(col);\n\n    return mergeBuilderOptionsState(state, {\n      columns: nextColumns\n    });\n  }],  \n  [BuilderOptionsActionType.SetBuilderMinimized, (state: QueryBuilderOptions, action: GenericReducerAction): QueryBuilderOptions => {\n    const minimized = action.payload.minimized as boolean;\n    return mergeBuilderOptionsState(state, {\n      meta: { minimized }\n    });\n  }],\n]);\n\nconst buildInitialState = (savedOptions?: Partial<QueryBuilderOptions>): QueryBuilderOptions => {\n  const defaultOptions = defaultCHBuilderQuery.builderOptions;\n  const initialState = {\n    ...defaultOptions,\n    ...savedOptions,\n    meta: {\n      ...defaultOptions.meta,\n      ...savedOptions?.meta,\n    }\n  };\n\n  return initialState;\n};\n\nconst mergeBuilderOptionsState = (prevState: QueryBuilderOptions, nextState: Partial<QueryBuilderOptions>): QueryBuilderOptions => {\n  return {\n    ...prevState,\n    ...nextState,\n    meta: {\n      ...prevState.meta,\n      ...nextState.meta\n    }\n  };\n}\n\nexport const useBuilderOptionsState = (savedOptions: QueryBuilderOptions): [QueryBuilderOptions, React.Dispatch<BuilderOptionsReducerAction>] => {\n  const [state, dispatch] = useReducer<typeof reducer, QueryBuilderOptions>(reducer, savedOptions, buildInitialState);\n  return [state as QueryBuilderOptions, dispatch];\n};\n\nexport const testFuncs = {\n  reducer,\n  buildInitialState\n};\n","import { isBuilderOptionsRunnable } from \"data/utils\";\nimport { useRef } from \"react\"\nimport { QueryBuilderOptions } from \"types/queryBuilder\";\n\n/**\n * Returns true if the initial builderOptions represent a new query.\n * Returns false if the query was loaded from a saved URL or dashboard.\n * \n * Does not update on re-renders\n */\nexport default (builderOptions: QueryBuilderOptions): boolean => {\n  const isNewQuery = useRef<boolean>(!isBuilderOptionsRunnable(builderOptions));\n  return isNewQuery.current;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport { Filter, OrderBy, QueryBuilderOptions, SelectedColumn, ColumnHint } from 'types/queryBuilder';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { OtelVersionSelect } from '../OtelVersionSelect';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { columnFilterDateTime, columnFilterString } from 'data/columnFilters';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport { Alert, Button, InlineFormLabel, Input, VerticalGroup } from '@grafana/ui';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions, setOtelEnabled, setOtelVersion } from 'hooks/useBuilderOptionsState';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\nimport { useDefaultFilters, useDefaultTimeColumn, useLogDefaultsOnMount, useOtelColumns } from './logsQueryBuilderHooks';\nimport { styles } from 'styles';\nimport { Components as allSelectors } from 'selectors';\n\ninterface LogsQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface LogsQueryBuilderState {\n  otelEnabled: boolean;\n  otelVersion: string;\n  selectedColumns: SelectedColumn[];\n  timeColumn?: SelectedColumn;\n  logLevelColumn?: SelectedColumn;\n  messageColumn?: SelectedColumn;\n  labelsColumn?: SelectedColumn;\n  // liveView: boolean;\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n  logMessageLike: string;\n}\n\nexport const LogsQueryBuilder = (props: LogsQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const labels = allLabels.components.LogsQueryBuilder;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const builderState: LogsQueryBuilderState = useMemo(() => ({\n    otelEnabled: builderOptions.meta?.otelEnabled || false,\n    otelVersion: builderOptions.meta?.otelVersion || '',\n    timeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n    logLevelColumn: getColumnByHint(builderOptions, ColumnHint.LogLevel),\n    messageColumn: getColumnByHint(builderOptions, ColumnHint.LogMessage),\n    labelsColumn: getColumnByHint(builderOptions, ColumnHint.LogLabels),\n    selectedColumns: builderOptions.columns?.filter(c => (\n      // Only select columns that don't have their own box\n      c.hint !== ColumnHint.Time &&\n      c.hint !== ColumnHint.LogLevel &&\n      c.hint !== ColumnHint.LogMessage &&\n      c.hint !== ColumnHint.LogLabels\n    )) || [],\n    // liveView: builderOptions.meta?.liveView || false,\n    filters: builderOptions.filters || [],\n    orderBy: builderOptions.orderBy || [],\n    limit: builderOptions.limit || 0,\n    logMessageLike: builderOptions.meta?.logMessageLike || '',\n    }), [builderOptions]);\n  const [showConfigWarning, setConfigWarningOpen] = useState(datasource.getDefaultLogsColumns().size === 0 && builderOptions.columns?.length === 0);\n\n  const onOptionChange = useBuilderOptionChanges<LogsQueryBuilderState>(next => {\n    const nextColumns = next.selectedColumns.slice();\n    if (next.timeColumn) {\n      nextColumns.push(next.timeColumn);\n    }\n    if (next.logLevelColumn) {\n      nextColumns.push(next.logLevelColumn);\n    }\n    if (next.messageColumn) {\n      nextColumns.push(next.messageColumn);\n    }\n    if (next.labelsColumn) {\n      nextColumns.push(next.labelsColumn);\n    }\n\n    builderOptionsDispatch(setOptions({\n      columns: nextColumns,\n      filters: next.filters,\n      orderBy: next.orderBy,\n      limit: next.limit,\n      meta: {\n        logMessageLike: next.logMessageLike,\n      }\n    }));\n  }, builderState);\n\n  useLogDefaultsOnMount(datasource, isNewQuery, builderOptions, builderOptionsDispatch);\n  useOtelColumns(builderState.otelEnabled, builderState.otelVersion, builderOptionsDispatch);\n  useDefaultTimeColumn(datasource, allColumns, builderOptions.table, builderState.timeColumn, builderState.otelEnabled, builderOptionsDispatch);\n  useDefaultFilters(builderOptions.table, isNewQuery, builderOptionsDispatch);\n  \n  const configWarning = showConfigWarning && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\" onRemove={() => setConfigWarningOpen(false)}>\n      <VerticalGroup>\n        <div>\n          {'To speed up your query building, enter your default logs configuration in your '}\n          <a style={{ textDecoration: 'underline' }} href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#logs-config`}>ClickHouse Data Source settings</a>\n        </div>\n      </VerticalGroup>\n    </Alert>\n  );\n\n  return (\n    <div>\n      { configWarning }\n      <OtelVersionSelect\n        enabled={builderState.otelEnabled}\n        onEnabledChange={e => builderOptionsDispatch(setOtelEnabled(e))}\n        selectedVersion={builderState.otelVersion}\n        onVersionChange={v => builderOptionsDispatch(setOtelVersion(v))}\n      />\n      <ColumnsEditor\n        disabled={builderState.otelEnabled}\n        allColumns={allColumns}\n        selectedColumns={builderState.selectedColumns}\n        onSelectedColumnsChange={onOptionChange('selectedColumns')}\n      />\n      <div className=\"gf-form\">\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.timeColumn}\n          invalid={!builderState.timeColumn}\n          onColumnChange={onOptionChange('timeColumn')}\n          columnFilterFn={columnFilterDateTime}\n          columnHint={ColumnHint.Time}\n          label={labels.logTimeColumn.label}\n          tooltip={labels.logTimeColumn.tooltip}\n        />\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.logLevelColumn}\n          invalid={!builderState.logLevelColumn}\n          onColumnChange={onOptionChange('logLevelColumn')}\n          columnFilterFn={columnFilterString}\n          columnHint={ColumnHint.LogLevel}\n          label={labels.logLevelColumn.label}\n          tooltip={labels.logLevelColumn.tooltip}\n          inline\n        />\n      </div>\n      <div className=\"gf-form\">\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.messageColumn}\n          invalid={!builderState.messageColumn}\n          onColumnChange={onOptionChange('messageColumn')}\n          columnFilterFn={columnFilterString}\n          columnHint={ColumnHint.LogMessage}\n          label={labels.logMessageColumn.label}\n          tooltip={labels.logMessageColumn.tooltip}\n        />\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.labelsColumn}\n          invalid={!builderState.labelsColumn}\n          onColumnChange={onOptionChange('labelsColumn')}\n          columnHint={ColumnHint.LogLabels}\n          label={labels.logLabelsColumn.label}\n          tooltip={labels.logLabelsColumn.tooltip}\n          inline\n        />\n        {/* <Switch\n          value={builderState.liveView}\n          onChange={onOptionChange('liveView')}\n          label={labels.liveView.label}\n          tooltip={labels.liveView.tooltip}\n          inline\n        /> */}\n      </div>\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n      <LogMessageLikeInput logMessageLike={builderState.logMessageLike} onChange={onOptionChange('logMessageLike')} />\n    </div>\n  );\n}\n\ninterface LogMessageLikeInputProps {\n  logMessageLike: string;\n  onChange: (logMessageLike: string) => void;\n};\n\nconst LogMessageLikeInput = (props: LogMessageLikeInputProps) => {\n  const [input, setInput] = useState<string>('');\n  const { logMessageLike, onChange } = props;\n  const { label, tooltip, clearButton } = allLabels.components.LogsQueryBuilder.logMessageFilter;\n\n  useEffect(() => {\n    setInput(logMessageLike);\n  }, [logMessageLike]);\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        width={200}\n        value={input}\n        type=\"string\"\n        onChange={e => setInput(e.currentTarget.value)}\n        onBlur={() => onChange(input)}\n      />\n      { logMessageLike &&\n        <Button\n          data-testid={allSelectors.QueryBuilder.LogsQueryBuilder.LogMessageLikeInput.input}\n          variant=\"secondary\"\n          size=\"md\"\n          onClick={() => onChange('')}\n          className={styles.Common.smallBtn}\n          tooltip={allLabels.components.expandBuilderButton.tooltip}\n        >\n          {clearButton}\n        </Button>\n      }\n    </div>\n  )\n}\n","import { Datasource } from \"data/CHDatasource\";\nimport { columnFilterDateTime } from \"data/columnFilters\";\nimport { BuilderOptionsReducerAction, setColumnByHint, setOptions } from \"hooks/useBuilderOptionsState\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { ColumnHint, DateFilterWithoutValue, Filter, FilterOperator, OrderBy, OrderByDirection, QueryBuilderOptions, SelectedColumn, StringFilter, TableColumn } from \"types/queryBuilder\";\nimport otel from 'otel';\n\n/**\n * Loads the default configuration for new queries. (Only runs on new queries)\n */\nexport const useLogDefaultsOnMount = (datasource: Datasource, isNewQuery: boolean, builderOptions: QueryBuilderOptions, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (!isNewQuery || didSetDefaults.current) {\n      return;\n    }\n\n    const defaultDb = datasource.getDefaultLogsDatabase() || datasource.getDefaultDatabase();\n    const defaultTable = datasource.getDefaultLogsTable() || datasource.getDefaultTable();\n    const otelVersion = datasource.getLogsOtelVersion();\n    const defaultColumns = datasource.getDefaultLogsColumns();\n\n    const nextColumns: SelectedColumn[] = [];\n    for (let [hint, colName] of defaultColumns) {\n      nextColumns.push({ name: colName, hint });\n    }\n\n    builderOptionsDispatch(setOptions({\n      database: defaultDb,\n      table: defaultTable || builderOptions.table,\n      columns: nextColumns,\n      meta: {\n        otelEnabled: Boolean(otelVersion),\n        otelVersion,\n      }\n    }));\n    didSetDefaults.current = true;\n  }, [builderOptions.columns, builderOptions.orderBy, builderOptions.table, builderOptionsDispatch, datasource, isNewQuery]);\n};\n\n/**\n * Sets OTEL Logs columns automatically when OTEL is enabled.\n * Does not run if OTEL is already enabled, only when it's changed.\n */\nexport const useOtelColumns = (otelEnabled: boolean, otelVersion: string, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetColumns = useRef<boolean>(otelEnabled);\n  if (!otelEnabled) {\n    didSetColumns.current = false;\n  }\n\n  useEffect(() => {\n    if (!otelEnabled || didSetColumns.current) {\n      return;\n    }\n\n    const otelConfig = otel.getVersion(otelVersion);\n    const logColumnMap = otelConfig?.logColumnMap;\n    if (!logColumnMap) {\n      return;\n    }\n\n    const columns: SelectedColumn[] = [];\n    logColumnMap.forEach((name, hint) => {\n      columns.push({ name, hint });\n    });\n\n    builderOptionsDispatch(setOptions({ columns }));\n    didSetColumns.current = true;\n  }, [otelEnabled, otelVersion, builderOptionsDispatch]);\n};\n\n// Finds and selects a default log time column, updates when table changes\nexport const useDefaultTimeColumn = (datasource: Datasource, allColumns: readonly TableColumn[], table: string, timeColumn: SelectedColumn | undefined, otelEnabled: boolean, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const hasDefaultColumnConfigured = useMemo(() => Boolean(datasource.getDefaultLogsTable()) && datasource.getDefaultLogsColumns().has(ColumnHint.Time), [datasource]);\n  const didSetDefaultTime = useRef<boolean>(Boolean(timeColumn) || hasDefaultColumnConfigured);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    didSetDefaultTime.current = false;\n  }\n\n  if (Boolean(timeColumn) || otelEnabled) {\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }\n\n  useEffect(() => {\n    if (didSetDefaultTime.current || allColumns.length === 0 || !table) {\n      return;\n    }\n\n    const col = allColumns.filter(columnFilterDateTime)[0];\n    if (!col) {\n      return;\n    }\n\n    const timeColumn: SelectedColumn = {\n      name: col.name,\n      type: col.type,\n      hint: ColumnHint.Time\n    };\n\n    builderOptionsDispatch(setColumnByHint(timeColumn));\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }, [datasource, allColumns, table, builderOptionsDispatch]);\n};\n\n// Apply default filters/orderBy on table change\nexport const useDefaultFilters = (table: string, isNewQuery: boolean, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (!table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND'\n      } as DateFilterWithoutValue,\n      {\n        type: 'string',\n        operator: FilterOperator.IsAnything,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.LogLevel,\n        condition: 'AND'\n      } as StringFilter,\n    ];\n\n    const defaultOrderBy: OrderBy[] = [\n      { name: '', hint: ColumnHint.Time, dir: OrderByDirection.DESC, default: true }\n    ];\n    \n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(setOptions({\n      filters: defaultFilters,\n      orderBy: defaultOrderBy\n    }));\n  }, [table, builderOptionsDispatch]);\n};\n","import React from 'react';\nimport { RadioButtonGroup, InlineFormLabel } from '@grafana/ui';\n\nexport interface ModeSwitchProps {\n  labelA: string;\n  labelB: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  label: string;\n  tooltip: string;\n};\n\n/**\n * Component for switching between modes. Boxes are labeled unlike regular Switch.\n */\nexport const ModeSwitch = (props: ModeSwitchProps) => {\n  const { labelA, labelB, value, onChange, label, tooltip } = props;\n\n  const options = [\n    {\n      label: labelA,\n      value: false,\n    },\n    {\n      label: labelB,\n      value: true,\n    },\n  ];\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup<boolean>\n        options={options}\n        value={value}\n        onChange={v => onChange(v)}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select, Button, Input, HorizontalGroup } from '@grafana/ui';\nimport { AggregateColumn, AggregateType, TableColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\nimport { styles } from 'styles';\n\ninterface AggregateProps {\n  columnOptions: Array<SelectableValue<string>>;\n  index: number,\n  aggregate: AggregateColumn;\n  updateAggregate: (index: number, aggregate: AggregateColumn) => void;\n  removeAggregate: (index: number) => void;\n}\n\nconst allAggregateOptions: Array<SelectableValue<AggregateType>> = [\n  { label: 'Count', value: AggregateType.Count },\n  { label: 'Sum', value: AggregateType.Sum },\n  { label: 'Min', value: AggregateType.Min },\n  { label: 'Max', value: AggregateType.Max },\n  { label: 'Average', value: AggregateType.Average },\n  { label: 'Any', value: AggregateType.Any },\n  // { label: 'Distinct Count', value: AggregateType.Count_Distinct },\n];\n\nconst Aggregate = (props: AggregateProps) => {\n  const { index, aggregate, updateAggregate, removeAggregate } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [alias, setAlias] = useState(aggregate.alias || '');\n  const { aliasLabel } = labels.components.AggregatesEditor;\n\n  // Add current value to aggregate functions\n  const aggregateOptions = allAggregateOptions.slice();\n  if (!aggregateOptions.find(a => a.value === aggregate.aggregateType)) {\n    aggregateOptions.push({ label: aggregate.aggregateType, value: aggregate.aggregateType });\n  }\n\n  // Add current value to column options\n  const columnOptions = props.columnOptions.slice();\n  if (!columnOptions.find(c => c.value === aggregate.column)) {\n    columnOptions.push({ label: aggregate.column, value: aggregate.column });\n  }\n\n  return (\n    <HorizontalGroup wrap align=\"flex-start\" justify=\"flex-start\">\n      <Select\n        width={20}\n        className={styles.Common.inlineSelect}\n        options={aggregateOptions}\n        value={aggregate.aggregateType}\n        onChange={e => updateAggregate(index, { ...aggregate, aggregateType: e.value! })}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      />\n      <Select<string>\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={columnOptions}\n        isOpen={isOpen}\n        onOpenMenu={() => setIsOpen(true)}\n        onCloseMenu={() => setIsOpen(false)}\n        onChange={e => updateAggregate(index, { ...aggregate, column: e.value! })}\n        value={aggregate.column}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      />\n      <InlineFormLabel width={2} className=\"query-keyword\">\n        {aliasLabel}\n      </InlineFormLabel>\n      <Input\n        width={20}\n        value={alias}\n        onChange={e => setAlias(e.currentTarget.value)}\n        onBlur={e => updateAggregate(index, { ...aggregate, alias: e.currentTarget.value })}\n        placeholder=\"alias\"\n      />\n      <Button\n        data-testid={selectors.components.QueryBuilder.AggregateEditor.itemRemoveButton}\n        className={styles.Common.smallBtn}\n        variant=\"destructive\"\n        size=\"sm\"\n        icon=\"trash-alt\"\n        onClick={() => removeAggregate(index)}\n      />\n    </HorizontalGroup>\n  );\n};\n\ninterface AggregateEditorProps {\n  allColumns: readonly TableColumn[];\n  aggregates: AggregateColumn[];\n  onAggregatesChange: (aggregates: AggregateColumn[]) => void;\n}\n\nconst allColumnName = '*';\n\nexport const AggregateEditor = (props: AggregateEditorProps) => {\n  const { allColumns, aggregates, onAggregatesChange } = props;\n  const { label, tooltip, addLabel } = labels.components.AggregatesEditor;\n  const columnOptions: Array<SelectableValue<string>> = allColumns.map(c => ({ label: c.label || c.name, value: c.name }));\n  columnOptions.push({ label: allColumnName, value: allColumnName });\n\n  const addAggregate = () => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates.push({ column: '', aggregateType: AggregateType.Count });\n    onAggregatesChange(nextAggregates);\n  };\n  const removeAggregate = (index: number) => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates.splice(index, 1);\n    onAggregatesChange(nextAggregates);\n  };\n  const updateAggregate = (index: number, aggregatesItem: AggregateColumn) => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates[index] = aggregatesItem;\n    onAggregatesChange(nextAggregates);\n  };\n\n  const fieldLabel = (\n    <InlineFormLabel\n      width={8}\n      className=\"query-keyword\"\n      data-testid={selectors.components.QueryBuilder.AggregateEditor.sectionLabel}\n      tooltip={tooltip}\n    >\n      {label}\n    </InlineFormLabel>\n  );\n  const fieldSpacer = <div className={`width-8 ${styles.Common.firstLabel}`}></div>;\n\n  return (\n    <>\n      {aggregates.map((aggregate, index) => {\n        const key = `${index}-${aggregate.column}-${aggregate.aggregateType}-${aggregate.alias}`;\n        return (\n          <div className=\"gf-form\" key={key} data-testid={selectors.components.QueryBuilder.AggregateEditor.itemWrapper}>\n            { index === 0 ? fieldLabel : fieldSpacer }\n            <Aggregate\n              columnOptions={columnOptions}\n              index={index}\n              aggregate={aggregate}\n              updateAggregate={updateAggregate}\n              removeAggregate={removeAggregate}\n            />\n          </div>\n        );\n      })}\n\n      <div className=\"gf-form\">\n        {aggregates.length === 0 ? fieldLabel : fieldSpacer}\n        <Button\n          data-testid={selectors.components.QueryBuilder.AggregateEditor.addButton}\n          icon=\"plus-circle\"\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={addAggregate}\n          className={styles.Common.smallBtn}\n        >\n          {addLabel}\n        </Button>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { InlineFormLabel, MultiSelect } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { TableColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { styles } from 'styles';\nimport { selectors } from 'selectors';\n\ninterface GroupByEditorProps {\n  allColumns: readonly TableColumn[];\n  groupBy: string[];\n  onGroupByChange: (groupBy: string[]) => void;\n}\n\nexport const GroupByEditor = (props: GroupByEditorProps) => {\n  const { allColumns, groupBy, onGroupByChange } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const { label, tooltip } = labels.components.GroupByEditor;\n  const options: Array<SelectableValue<string>> = allColumns.map(c => ({ label: c.name, value: c.name }));\n\n  const onChange = (selection: Array<SelectableValue<string>>) => {\n    setIsOpen(false);\n    onGroupByChange(selection.map(s => s.value!));\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div data-testid={selectors.components.QueryBuilder.GroupByEditor.multiSelectWrapper} className={styles.Common.selectWrapper}>\n        <MultiSelect\n          options={options}\n          isOpen={isOpen}\n          onOpenMenu={() => setIsOpen(true)}\n          onCloseMenu={() => setIsOpen(false)}\n          value={groupBy}\n          onChange={onChange}\n          allowCustomValue={true}\n          menuPlacement={'bottom'}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport { AggregateColumn, BuilderMode, Filter, OrderBy, QueryBuilderOptions, ColumnHint, SelectedColumn } from 'types/queryBuilder';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { AggregateEditor } from '../AggregateEditor';\nimport { GroupByEditor } from '../GroupByEditor';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { columnFilterDateTime } from 'data/columnFilters';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\nimport { useDefaultFilters, useDefaultTimeColumn } from './timeSeriesQueryBuilderHooks';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\n\ninterface TimeSeriesQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>,\n}\n\ninterface TimeSeriesQueryBuilderState {\n  isAggregateMode: boolean;\n  timeColumn?: SelectedColumn;\n  selectedColumns: SelectedColumn[];\n  aggregates: AggregateColumn[];\n  groupBy: string[];\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TimeSeriesQueryBuilder = (props: TimeSeriesQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const labels = allLabels.components.TimeSeriesQueryBuilder;\n  const builderState: TimeSeriesQueryBuilderState = useMemo(() => ({\n    // TODO: do not depend on \"mode\"\n    isAggregateMode: builderOptions.mode === BuilderMode.Trend,\n    timeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n    selectedColumns: (builderOptions.columns || []).filter(c => c.hint !== ColumnHint.Time),\n    aggregates: builderOptions.aggregates || [],\n    groupBy: builderOptions.groupBy || [],\n    orderBy: builderOptions.orderBy || [],\n    limit: builderOptions.limit || 0,\n    filters: builderOptions.filters || [],\n  }), [builderOptions]);\n\n  const onOptionChange = useBuilderOptionChanges<TimeSeriesQueryBuilderState>(next => {\n    let nextColumns = next.selectedColumns.slice();\n    if (next.isAggregateMode) {\n      nextColumns = [];\n    }\n\n    if (next.timeColumn) {\n      nextColumns.push(next.timeColumn);\n    }\n\n    builderOptionsDispatch(setOptions({\n      mode: next.isAggregateMode ? BuilderMode.Trend : BuilderMode.Aggregate,\n      columns: nextColumns,\n      aggregates: next.isAggregateMode ? next.aggregates : [],\n      groupBy: next.isAggregateMode ? next.groupBy : [],\n      filters: next.filters,\n      orderBy: next.orderBy,\n      limit: next.limit\n    }));\n  }, builderState);\n\n  useDefaultTimeColumn(allColumns, builderOptions.table, builderState.timeColumn, builderOptionsDispatch);\n  useDefaultFilters(builderOptions.table, isNewQuery, builderOptionsDispatch);\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.simpleQueryModeLabel}\n        labelB={labels.aggregateQueryModeLabel}\n        value={builderState.isAggregateMode}\n        onChange={onOptionChange('isAggregateMode')}\n        label={labels.builderModeLabel}\n        tooltip={labels.builderModeTooltip}\n      />\n\n      <ColumnSelect\n        allColumns={allColumns}\n        selectedColumn={builderState.timeColumn}\n        invalid={!builderState.timeColumn}\n        onColumnChange={onOptionChange('timeColumn')}\n        columnFilterFn={columnFilterDateTime}\n        columnHint={ColumnHint.Time}\n        label={labels.timeColumn.label}\n        tooltip={labels.timeColumn.tooltip}\n        clearable={false}\n      />\n\n      { builderState.isAggregateMode ? \n        <>\n          <AggregateEditor allColumns={allColumns} aggregates={builderState.aggregates} onAggregatesChange={onOptionChange('aggregates')} />\n          <GroupByEditor groupBy={builderState.groupBy} onGroupByChange={onOptionChange('groupBy')} allColumns={allColumns} />\n        </>\n        :\n        <ColumnsEditor\n          allColumns={allColumns}\n          selectedColumns={builderState.selectedColumns}\n          onSelectedColumnsChange={onOptionChange('selectedColumns')}\n        />\n      }\n\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n    </div>\n  );\n}\n","import { columnFilterDateTime } from 'data/columnFilters';\nimport { BuilderOptionsReducerAction, setColumnByHint, setOptions } from 'hooks/useBuilderOptionsState';\nimport React, { useEffect, useRef } from 'react';\nimport { ColumnHint, DateFilterWithoutValue, Filter, FilterOperator, OrderBy, OrderByDirection, SelectedColumn, TableColumn } from 'types/queryBuilder';\n\n// Finds and selects a default log time column, updates when table changes\nexport const useDefaultTimeColumn = (allColumns: readonly TableColumn[], table: string, timeColumn: SelectedColumn | undefined, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetDefaultTime = useRef<boolean>(Boolean(timeColumn));\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    didSetDefaultTime.current = false;\n  }\n\n  useEffect(() => {\n    if (didSetDefaultTime.current || allColumns.length === 0 || !table) {\n      return;\n    }\n\n    const col = allColumns.filter(columnFilterDateTime)[0];\n    if (!col) {\n      return;\n    }\n\n    const timeColumn: SelectedColumn = {\n      name: col.name,\n      type: col.type,\n      hint: ColumnHint.Time\n    };\n\n    builderOptionsDispatch(setColumnByHint(timeColumn));\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }, [allColumns, table, builderOptionsDispatch]);\n};\n\n// Apply default filters on table change\nexport const useDefaultFilters = (table: string, isNewQuery: boolean, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (!table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND'\n      } as DateFilterWithoutValue\n    ];\n\n    const defaultOrderBy: OrderBy[] = [\n      { name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC, default: true }\n    ];\n    \n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(setOptions({\n      filters: defaultFilters,\n      orderBy: defaultOrderBy,\n    }));\n  }, [table, builderOptionsDispatch]);\n};\n","import React, { useMemo } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport { AggregateColumn, BuilderMode, Filter, OrderBy, QueryBuilderOptions, SelectedColumn } from 'types/queryBuilder';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { AggregateEditor } from '../AggregateEditor';\nimport { GroupByEditor } from '../GroupByEditor';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\n\ninterface TableQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface TableQueryBuilderState {\n  isAggregateMode: boolean;\n  selectedColumns: SelectedColumn[];\n  aggregates: AggregateColumn[];\n  groupBy: string[];\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TableQueryBuilder = (props: TableQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const labels = allLabels.components.TableQueryBuilder;\n  const builderState: TableQueryBuilderState = useMemo(() => ({\n    isAggregateMode: builderOptions.mode === BuilderMode.Aggregate,\n    selectedColumns: builderOptions.columns || [],\n    aggregates: builderOptions.aggregates || [],\n    groupBy: builderOptions.groupBy || [],\n    orderBy: builderOptions.orderBy || [],\n    limit: builderOptions.limit || 0,\n    filters: builderOptions.filters || [],\n  }), [builderOptions]);\n\n  const onOptionChange = useBuilderOptionChanges<TableQueryBuilderState>(next => {\n    builderOptionsDispatch(setOptions({\n      mode: next.isAggregateMode ? BuilderMode.Aggregate : BuilderMode.List,\n      columns: next.selectedColumns,\n      aggregates: next.aggregates,\n      groupBy: next.groupBy,\n      filters: next.filters,\n      orderBy: next.orderBy,\n      limit: next.limit\n    }));\n  }, builderState);\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.simpleQueryModeLabel}\n        labelB={labels.aggregateQueryModeLabel}\n        value={builderState.isAggregateMode}\n        onChange={onOptionChange('isAggregateMode')}\n        label={labels.builderModeLabel}\n        tooltip={labels.builderModeTooltip}\n      />\n\n      <ColumnsEditor\n        allColumns={allColumns}\n        selectedColumns={builderState.selectedColumns}\n        onSelectedColumnsChange={onOptionChange('selectedColumns')}\n        showAllOption\n      />\n\n      {builderState.isAggregateMode && (\n        <>\n          <AggregateEditor allColumns={allColumns} aggregates={builderState.aggregates} onAggregatesChange={onOptionChange('aggregates')} />\n          <GroupByEditor groupBy={builderState.groupBy} onGroupByChange={onOptionChange('groupBy')} allColumns={allColumns} />\n        </>\n      )}\n\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { InlineFormLabel } from '@grafana/ui';\nimport labels from 'labels';\n\ninterface SqlPreviewProps {\n  sql: string;\n}\n\nexport const SqlPreview = (props: SqlPreviewProps) => {\n  const { sql } = props;\n  const { label, tooltip } = labels.components.SqlPreview;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <pre>{sql}</pre>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { Datasource } from '../../data/CHDatasource';\nimport labels from 'labels';\nimport { styles } from '../../styles';\nimport useTables from 'hooks/useTables';\nimport useDatabases from 'hooks/useDatabases';\n\nexport type DatabaseSelectProps = {\n  datasource: Datasource;\n  database: string;\n  onDatabaseChange: (value: string) => void\n};\n\nexport const DatabaseSelect = (props: DatabaseSelectProps) => {\n  const { datasource, onDatabaseChange, database } = props;\n  const databases = useDatabases(datasource);\n  const { label, tooltip, empty } = labels.components.DatabaseSelect;\n\n  const options = databases.map(d => ({ label: d, value: d }));\n  options.push({ label: empty, value: '' }); // Allow a blank value\n\n  // Add selected value to the list if it does not exist.\n  // When loading an existing query, the saved value may no longer be in the list\n  if (database && !databases.includes(database)) {\n    options.push({ label: database, value: database });\n  }\n\n  useEffect(() => {\n    // Auto select default db\n    if (!database) {\n      onDatabaseChange(datasource.getDefaultDatabase());\n    }\n  }, [datasource, database, onDatabaseChange]);\n\n  return (\n    <>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select\n        className={`width-15 ${styles.Common.inlineSelect}`}\n        options={options}\n        value={database}\n        onChange={e => onDatabaseChange(e.value!)}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      ></Select>\n    </>\n  );\n};\n\nexport type TableSelectProps = {\n  datasource: Datasource;\n  database: string;\n  table: string;\n  onTableChange: (value: string) => void;\n};\n\nexport const TableSelect = (props: TableSelectProps) => {\n  const { datasource, onTableChange, database, table } = props;\n  const tables = useTables(datasource, database);\n  const { label, tooltip, empty } = labels.components.TableSelect;\n\n  const options = tables.map(t => ({ label: t, value: t }));\n  options.push({ label: empty, value: '' }); // Allow a blank value\n\n  // Include saved value in case it's no longer listed\n  if (table && !tables.includes(table)) {\n    options.push({ label: table, value: table });\n  }\n\n  useEffect(() => {\n    // Auto select first/default table\n    if (database && !table && tables.length > 0) {\n      onTableChange(datasource.getDefaultTable() || tables[0]);\n    }\n  }, [database, table, tables, datasource, onTableChange]);\n\n  return (\n    <>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select\n        className={`width-15 ${styles.Common.inlineSelect}`}\n        options={options}\n        value={table}\n        onChange={e => onTableChange(e.value!)}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      ></Select>\n    </>\n  );\n};\n\nexport type DatabaseTableSelectProps = {\n  datasource: Datasource;\n  database: string;\n  onDatabaseChange: (value: string) => void\n  table: string;\n  onTableChange: (value: string) => void;\n};\n\nexport const DatabaseTableSelect = (props: DatabaseTableSelectProps) => {\n  const { datasource, database, onDatabaseChange, table, onTableChange } = props;\n\n  return (\n    <div className=\"gf-form\">\n      <DatabaseSelect datasource={datasource} database={database} onDatabaseChange={onDatabaseChange} />\n      <TableSelect datasource={datasource} database={database} table={table} onTableChange={onTableChange} />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource): readonly string[] => {\n  const [databases, setDatabases] = useState<string[]>([]); \n\n  useEffect(() => {\n    if (!datasource) {\n      return;\n    }\n\n    datasource.\n      fetchDatabases().\n      then(databases => setDatabases(databases)).\n      catch((ex: any) => {\n        console.error('Failed to fetch databases', ex);\n      });\n    }, [datasource]);\n    \n    return databases;\n}\n","import { useState, useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, database: string): readonly string[] => {\n  const [tables, setTables] = useState<string[]>([]); \n  \n  useEffect(() => {\n    if (!datasource || !database) {\n      return;\n    }\n\n    let ignore = false;\n    datasource.\n      fetchTables(database).\n      then(tables => {\n        if (ignore) {\n          return;\n        }\n        setTables(tables);\n      }).\n      catch((ex: any) => {\n        console.error('Failed to fetch tables for database:', database, ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, database]);\n\n  // Immediately return empty array on change so tables aren't stale\n  const lastDatabase = useRef<string>('');\n  if (database !== lastDatabase.current) {\n    lastDatabase.current = database;\n    setTables([]);\n    return [];\n  }\n\n  return tables;\n}\n","import React from 'react';\nimport { RadioButtonGroup, InlineFormLabel } from '@grafana/ui';\nimport labels from 'labels';\nimport { QueryType } from 'types/queryBuilder';\n\nexport interface QueryTypeSwitcherProps {\n  queryType: QueryType;\n  onChange: (queryType: QueryType) => void;\n  sqlEditor?: boolean;\n};\n\nconst options = [\n  {\n    label: labels.types.QueryType.table,\n    value: QueryType.Table,\n  },\n  {\n    label: labels.types.QueryType.logs,\n    value: QueryType.Logs,\n  },\n  {\n    label: labels.types.QueryType.timeseries,\n    value: QueryType.TimeSeries,\n  },\n  {\n    label: labels.types.QueryType.traces,\n    value: QueryType.Traces,\n  },\n];\n\n/**\n * Component for switching between the different query builder interfaces\n */\nexport const QueryTypeSwitcher = (props: QueryTypeSwitcherProps) => {\n  const { queryType, onChange, sqlEditor } = props;\n  const { label, tooltip, sqlTooltip } = labels.components.QueryTypeSwitcher;\n\n  return (\n    <span>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={sqlEditor ? sqlTooltip : tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup options={options} value={queryType} onChange={onChange} />\n    </span>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport allLabels from 'labels';\nimport { InlineFormLabel, Input } from '@grafana/ui';\nimport { selectors } from 'selectors';\n\ninterface TraceIdInputProps {\n  traceId: string;\n  onChange: (traceId: string) => void;\n  disabled?: boolean;\n};\n\nconst TraceIdInput = (props: TraceIdInputProps) => {\n  const [inputId, setInputId] = useState<string>('');\n  const { traceId, onChange, disabled } = props;\n  const { label, tooltip } = allLabels.components.TraceQueryBuilder.columns.traceIdFilter;\n\n  useEffect(() => {\n    setInputId(traceId);\n  }, [traceId]);\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        data-testid={selectors.components.QueryBuilder.TraceIdInput.input}\n        width={40}\n        value={inputId}\n        disabled={disabled}\n        type=\"string\"\n        onChange={e => setInputId(e.currentTarget.value)}\n        onBlur={() => onChange(inputId)}\n      />\n    </div>\n  )\n}\n\nexport default TraceIdInput;\n","import React, { useMemo, useState } from 'react';\nimport { Filter, QueryBuilderOptions, SelectedColumn, ColumnHint, TimeUnit, OrderBy } from 'types/queryBuilder';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { Alert, Collapse, VerticalGroup } from '@grafana/ui';\nimport { DurationUnitSelect } from 'components/queryBuilder/DurationUnitSelect';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions, setOtelEnabled, setOtelVersion } from 'hooks/useBuilderOptionsState';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\nimport { OtelVersionSelect } from '../OtelVersionSelect';\nimport { useDefaultFilters, useOtelColumns, useTraceDefaultsOnMount } from './traceQueryBuilderHooks';\nimport TraceIdInput from '../TraceIdInput';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\n\ninterface TraceQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface TraceQueryBuilderState {\n  isTraceIdMode: boolean;\n  otelEnabled: boolean;\n  otelVersion: string;\n  traceIdColumn?: SelectedColumn;\n  spanIdColumn?: SelectedColumn;\n  parentSpanIdColumn?: SelectedColumn;\n  serviceNameColumn?: SelectedColumn;\n  operationNameColumn?: SelectedColumn;\n  startTimeColumn?: SelectedColumn;\n  durationTimeColumn?: SelectedColumn;\n  durationUnit: TimeUnit;\n  tagsColumn?: SelectedColumn;\n  serviceTagsColumn?: SelectedColumn;\n  traceId: string;\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TraceQueryBuilder = (props: TraceQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const [showConfigWarning, setConfigWarningOpen] = useState(datasource.getDefaultTraceColumns().size === 0 && builderOptions.columns?.length === 0);\n  const [isColumnsOpen, setColumnsOpen] = useState<boolean>(showConfigWarning); // Toggle Columns collapse section\n  const [isFiltersOpen, setFiltersOpen] = useState<boolean>(!(builderOptions.meta?.isTraceIdMode && builderOptions.meta.traceId)); // Toggle Filters collapse section\n  const labels = allLabels.components.TraceQueryBuilder;\n  const builderState: TraceQueryBuilderState = useMemo(() => ({\n    isTraceIdMode: builderOptions.meta?.isTraceIdMode || false,\n    otelEnabled: builderOptions.meta?.otelEnabled || false,\n    otelVersion: builderOptions.meta?.otelVersion || '',\n    traceIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceId),\n    spanIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceSpanId),\n    parentSpanIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceParentSpanId),\n    serviceNameColumn: getColumnByHint(builderOptions, ColumnHint.TraceServiceName),\n    operationNameColumn: getColumnByHint(builderOptions, ColumnHint.TraceOperationName),\n    startTimeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n    durationTimeColumn: getColumnByHint(builderOptions, ColumnHint.TraceDurationTime),\n    durationUnit: builderOptions.meta?.traceDurationUnit || TimeUnit.Nanoseconds,\n    tagsColumn: getColumnByHint(builderOptions, ColumnHint.TraceTags),\n    serviceTagsColumn: getColumnByHint(builderOptions, ColumnHint.TraceServiceTags),\n    traceId: builderOptions.meta?.traceId || '',\n    orderBy: builderOptions.orderBy || [],\n    limit: builderOptions.limit || 0,\n    filters: builderOptions.filters || [],\n  }), [builderOptions]);\n\n  const onOptionChange = useBuilderOptionChanges<TraceQueryBuilderState>(next => {\n    const nextColumns = [\n      next.traceIdColumn,\n      next.spanIdColumn,\n      next.parentSpanIdColumn,\n      next.serviceNameColumn,\n      next.operationNameColumn,\n      next.startTimeColumn,\n      next.durationTimeColumn,\n      next.tagsColumn,\n      next.serviceTagsColumn\n    ].filter(c => c !== undefined) as SelectedColumn[];\n\n    builderOptionsDispatch(setOptions({\n      columns: nextColumns,\n      orderBy: next.orderBy,\n      limit: next.limit,\n      filters: next.filters,\n      meta: {\n        isTraceIdMode: next.isTraceIdMode,\n        traceDurationUnit: next.durationUnit,\n        traceId: next.traceId,\n      }\n    }));\n  }, builderState);\n\n  useTraceDefaultsOnMount(datasource, isNewQuery, builderOptions, builderOptionsDispatch);\n  useOtelColumns(builderState.otelEnabled, builderState.otelVersion, builderOptionsDispatch);\n  useDefaultFilters(builderOptions.table, builderState.isTraceIdMode, isNewQuery, builderOptionsDispatch);\n\n  const configWarning = showConfigWarning && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\" onRemove={() => setConfigWarningOpen(false)}>\n      <VerticalGroup>\n        <div>\n          {'To speed up your query building, enter your default trace configuration in your '}\n          <a style={{ textDecoration: 'underline' }} href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#traces-config`}>ClickHouse Data Source settings</a>\n        </div>\n      </VerticalGroup>\n    </Alert>\n  );\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.traceSearchModeLabel}\n        labelB={labels.traceIdModeLabel}\n        value={builderState.isTraceIdMode}\n        onChange={onOptionChange('isTraceIdMode')}\n        label={labels.traceModeLabel}\n        tooltip={labels.traceModeTooltip}\n      />\n\n      <Collapse label={labels.columnsSection}\n        collapsible\n        isOpen={isColumnsOpen}\n        onToggle={setColumnsOpen}\n      >\n        { configWarning }\n        <OtelVersionSelect\n          enabled={builderState.otelEnabled}\n          onEnabledChange={e => builderOptionsDispatch(setOtelEnabled(e))}\n          selectedVersion={builderState.otelVersion}\n          onVersionChange={v => builderOptionsDispatch(setOtelVersion(v))}\n          wide\n        />\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.traceIdColumn}\n            invalid={!builderState.traceIdColumn}\n            onColumnChange={onOptionChange('traceIdColumn')}\n            columnHint={ColumnHint.TraceId}\n            label={labels.columns.traceId.label}\n            tooltip={labels.columns.traceId.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.spanIdColumn}\n            invalid={!builderState.spanIdColumn}\n            onColumnChange={onOptionChange('spanIdColumn')}\n            columnHint={ColumnHint.TraceSpanId}\n            label={labels.columns.spanId.label}\n            tooltip={labels.columns.spanId.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.parentSpanIdColumn}\n            invalid={!builderState.parentSpanIdColumn}\n            onColumnChange={onOptionChange('parentSpanIdColumn')}\n            columnHint={ColumnHint.TraceParentSpanId}\n            label={labels.columns.parentSpanId.label}\n            tooltip={labels.columns.parentSpanId.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.serviceNameColumn}\n            invalid={!builderState.serviceNameColumn}\n            onColumnChange={onOptionChange('serviceNameColumn')}\n            columnHint={ColumnHint.TraceServiceName}\n            label={labels.columns.serviceName.label}\n            tooltip={labels.columns.serviceName.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.operationNameColumn}\n            invalid={!builderState.operationNameColumn}\n            onColumnChange={onOptionChange('operationNameColumn')}\n            columnHint={ColumnHint.TraceOperationName}\n            label={labels.columns.operationName.label}\n            tooltip={labels.columns.operationName.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.startTimeColumn}\n            invalid={!builderState.startTimeColumn}\n            onColumnChange={onOptionChange('startTimeColumn')}\n            columnHint={ColumnHint.Time}\n            label={labels.columns.startTime.label}\n            tooltip={labels.columns.startTime.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.durationTimeColumn}\n            invalid={!builderState.durationTimeColumn}\n            onColumnChange={onOptionChange('durationTimeColumn')}\n            columnHint={ColumnHint.TraceDurationTime}\n            label={labels.columns.durationTime.label}\n            tooltip={labels.columns.durationTime.tooltip}\n            wide\n          />\n          <DurationUnitSelect\n            disabled={builderState.otelEnabled}\n            unit={builderState.durationUnit}\n            onChange={onOptionChange('durationUnit')}\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.tagsColumn}\n            invalid={!builderState.tagsColumn}\n            onColumnChange={onOptionChange('tagsColumn')}\n            columnHint={ColumnHint.TraceTags}\n            label={labels.columns.tags.label}\n            tooltip={labels.columns.tags.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.serviceTagsColumn}\n            invalid={!builderState.serviceTagsColumn}\n            onColumnChange={onOptionChange('serviceTagsColumn')}\n            columnHint={ColumnHint.TraceServiceTags}\n            label={labels.columns.serviceTags.label}\n            tooltip={labels.columns.serviceTags.tooltip}\n            wide\n            inline\n          />\n        </div>\n      </Collapse>\n      <Collapse label={labels.filtersSection}\n        collapsible\n        isOpen={isFiltersOpen}\n        onToggle={setFiltersOpen}\n      >\n        <OrderByEditor\n          orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n          orderBy={builderState.orderBy}\n          onOrderByChange={onOptionChange('orderBy')}\n        />\n        <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n        <FiltersEditor\n          allColumns={allColumns}\n          filters={builderState.filters}\n          onFiltersChange={onOptionChange('filters')}\n          datasource={datasource}\n          database={builderOptions.database}\n          table={builderOptions.table}\n        />\n      </Collapse>\n      { builderState.isTraceIdMode && <TraceIdInput traceId={builderState.traceId} onChange={onOptionChange('traceId')} /> }\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\nimport otel from 'otel';\nimport { ColumnHint, DateFilterWithoutValue, Filter, FilterOperator, NumberFilter, OrderBy, OrderByDirection, QueryBuilderOptions, SelectedColumn, StringFilter } from 'types/queryBuilder';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\n\n/**\n * Loads the default configuration for new queries. (Only runs on new queries)\n */\nexport const useTraceDefaultsOnMount = (datasource: Datasource, isNewQuery: boolean, builderOptions: QueryBuilderOptions, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (!isNewQuery || didSetDefaults.current) {\n      return;\n    }\n\n    const defaultDb = datasource.getDefaultTraceDatabase() || datasource.getDefaultDatabase();\n    const defaultTable = datasource.getDefaultTraceTable() || datasource.getDefaultTable();\n    const defaultDurationUnit = datasource.getDefaultTraceDurationUnit();\n    const otelVersion = datasource.getTraceOtelVersion();\n    const defaultColumns = datasource.getDefaultTraceColumns();\n\n    const nextColumns: SelectedColumn[] = [];\n    for (let [hint, colName] of defaultColumns) {\n      nextColumns.push({ name: colName, hint });\n    }\n\n    builderOptionsDispatch(setOptions({\n      database: defaultDb,\n      table: defaultTable || builderOptions.table,\n      columns: nextColumns,\n      meta: {\n        otelEnabled: Boolean(otelVersion),\n        otelVersion,\n        traceDurationUnit: defaultDurationUnit\n      }\n    }));\n    didSetDefaults.current = true;\n  }, [builderOptions.columns, builderOptions.orderBy, builderOptions.table, builderOptionsDispatch, datasource, isNewQuery]);\n};\n\n/**\n * Sets OTEL Trace columns automatically when OTEL is enabled\n * Does not run if OTEL is already enabled, only when it's changed.\n */\nexport const useOtelColumns = (otelEnabled: boolean, otelVersion: string, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetColumns = useRef<boolean>(otelEnabled);\n  if (!otelEnabled) {\n    didSetColumns.current = false;\n  }\n\n  useEffect(() => {\n    if (!otelEnabled || didSetColumns.current) {\n      return;\n    }\n\n    const otelConfig = otel.getVersion(otelVersion);\n    const traceColumnMap = otelConfig?.traceColumnMap;\n    if (!traceColumnMap) {\n      return;\n    }\n\n    const columns: SelectedColumn[] = [];\n    traceColumnMap.forEach((name, hint) => {\n      columns.push({ name, hint });\n    });\n\n    builderOptionsDispatch(setOptions({\n      columns,\n      meta: {\n        traceDurationUnit: otelConfig.traceDurationUnit\n      }\n    }));\n    didSetColumns.current = true;\n  }, [otelEnabled, otelVersion, builderOptionsDispatch]);\n};\n\n// Apply default filters on table change\nexport const useDefaultFilters = (table: string, isTraceIdMode: boolean, isNewQuery: boolean, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (isTraceIdMode || !table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND'\n      } as DateFilterWithoutValue, // Filter to dashboard time range\n      {\n        type: 'string',\n        operator: FilterOperator.IsEmpty,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceParentSpanId,\n        condition: 'AND',\n        value: ''\n      } as StringFilter, // Only show top level spans\n      {\n        type: 'UInt64',\n        operator: FilterOperator.GreaterThan,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceDurationTime,\n        condition: 'AND',\n        value: 0\n      } as NumberFilter, // Only show spans where duration > 0\n      {\n        type: 'string',\n        operator: FilterOperator.IsAnything,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceServiceName,\n        condition: 'AND',\n        value: ''\n      } as StringFilter, // Placeholder service name filter for convenience\n    ];\n    \n    const defaultOrderBy: OrderBy[] = [\n      { name: '', hint: ColumnHint.Time, dir: OrderByDirection.DESC, default: true },\n      { name: '', hint: ColumnHint.TraceDurationTime, dir: OrderByDirection.DESC, default: true },\n    ];\n\n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(setOptions({\n      filters: defaultFilters,\n      orderBy: defaultOrderBy,\n    }));\n  }, [table, isTraceIdMode, builderOptionsDispatch]);\n};\n","import React, { useMemo } from 'react';\nimport { Datasource } from 'data/CHDatasource';\nimport { QueryType, QueryBuilderOptions, ColumnHint, StringFilter } from 'types/queryBuilder';\nimport { CoreApp } from '@grafana/data';\nimport { LogsQueryBuilder } from './views/LogsQueryBuilder';\nimport { TimeSeriesQueryBuilder } from './views/TimeSeriesQueryBuilder';\nimport { TableQueryBuilder } from './views/TableQueryBuilder';\nimport { SqlPreview } from './SqlPreview';\nimport { DatabaseTableSelect } from 'components/queryBuilder/DatabaseTableSelect';\nimport { QueryTypeSwitcher } from 'components/queryBuilder/QueryTypeSwitcher';\nimport { styles } from 'styles';\nimport { TraceQueryBuilder } from './views/TraceQueryBuilder';\nimport { BuilderOptionsReducerAction, setBuilderMinimized, setDatabase, setQueryType, setTable } from 'hooks/useBuilderOptionsState';\nimport TraceIdInput from './TraceIdInput';\nimport { Alert, Button, VerticalGroup } from '@grafana/ui';\nimport { Components as allSelectors } from 'selectors';\nimport allLabels from 'labels';\n\ninterface QueryBuilderProps {\n  app: CoreApp | undefined;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n  datasource: Datasource;\n  generatedSql: string;\n}\n\nexport const QueryBuilder = (props: QueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch, generatedSql } = props;\n\n  const onDatabaseChange = (database: string) => builderOptionsDispatch(setDatabase(database));\n  const onTableChange = (table: string) => builderOptionsDispatch(setTable(table));\n  const onQueryTypeChange = (queryType: QueryType) => builderOptionsDispatch(setQueryType(queryType));\n\n  if (builderOptions.meta?.minimized) {\n    return (\n      <MinimizedQueryViewer\n        builderOptions={builderOptions}\n        builderOptionsDispatch={builderOptionsDispatch}\n        datasource={datasource}\n      />\n    );\n  }\n\n  return (\n    <div data-testid=\"query-editor-section-builder\">\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <DatabaseTableSelect\n          datasource={datasource}\n          database={builderOptions.database} onDatabaseChange={onDatabaseChange}\n          table={builderOptions.table} onTableChange={onTableChange}\n        />\n      </div>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <QueryTypeSwitcher queryType={builderOptions.queryType} onChange={onQueryTypeChange} />\n      </div>\n\n      { builderOptions.queryType === QueryType.Table && <TableQueryBuilder datasource={datasource} builderOptions={builderOptions} builderOptionsDispatch={builderOptionsDispatch} /> }\n      { builderOptions.queryType === QueryType.Logs && <LogsQueryBuilder datasource={datasource} builderOptions={builderOptions} builderOptionsDispatch={builderOptionsDispatch} /> }\n      { builderOptions.queryType === QueryType.TimeSeries && <TimeSeriesQueryBuilder datasource={datasource} builderOptions={builderOptions} builderOptionsDispatch={builderOptionsDispatch} /> }\n      { builderOptions.queryType === QueryType.Traces && <TraceQueryBuilder datasource={datasource} builderOptions={builderOptions} builderOptionsDispatch={builderOptionsDispatch} /> }\n\n      <SqlPreview sql={generatedSql} />\n    </div>\n  );\n}\n\ninterface MinimizedQueryBuilder {\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n  datasource: Datasource;\n}\n\nconst MinimizedQueryViewer = (props: MinimizedQueryBuilder) => {\n  const { builderOptions, builderOptionsDispatch, datasource } = props;\n  const defaultColumns = useMemo<Map<ColumnHint, string> | undefined>(() => {\n    if (builderOptions.queryType === QueryType.Logs) {\n      return datasource.getDefaultLogsColumns();\n    } else if (builderOptions.queryType === QueryType.Traces) {\n      return datasource.getDefaultTraceColumns();\n    }\n\n    return undefined;\n  }, [builderOptions.queryType, datasource]);\n  const showConfigWarning = defaultColumns?.size === 0 && builderOptions.columns?.length === 0;\n  const configQueryType = (\n    builderOptions.queryType === QueryType.Logs ? 'logs' :\n    builderOptions.queryType === QueryType.Traces ? 'trace' :\n    builderOptions.queryType\n  );\n\n  let traceId;\n  if (builderOptions.queryType === QueryType.Traces && builderOptions.meta?.isTraceIdMode && builderOptions.meta.traceId) {\n    traceId = builderOptions.meta.traceId!;\n  } else if (builderOptions.queryType === QueryType.Logs && builderOptions.filters?.find(f => f.hint === ColumnHint.TraceId && 'value' in f)) {\n    const traceIdFilter = builderOptions.filters?.find(f => f.hint === ColumnHint.TraceId && 'value' in f) as StringFilter;\n    traceId = traceIdFilter.value;\n  }\n\n  return (\n    <div data-testid=\"query-editor-minimized-viewer\">\n      { showConfigWarning && (\n        <Alert title=\"\" severity=\"warning\">\n          <VerticalGroup>\n            <div>\n              {`To enable data linking, enter your default ${configQueryType} configuration in your `}\n              <a style={{ textDecoration: 'underline' }} href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#${builderOptions.queryType}-config`}>ClickHouse Data Source settings</a>\n            </div>\n          </VerticalGroup>\n        </Alert>\n      )}\n      { !traceId && (\n        <Alert title=\"\" severity=\"warning\">\n          <VerticalGroup>\n            <div>Trace ID is empty</div>\n          </VerticalGroup>\n        </Alert>\n      )}\n\n      {traceId && <TraceIdInput traceId={traceId} onChange={() => {}} disabled /> }\n\n      <Button\n        data-testid={allSelectors.QueryBuilder.expandBuilderButton}\n        icon=\"plus\"\n        variant=\"secondary\"\n        size=\"md\"\n        onClick={() => builderOptionsDispatch(setBuilderMinimized(false))}\n        className={styles.Common.smallBtn}\n        tooltip={allLabels.components.expandBuilderButton.tooltip}\n      >\n        {allLabels.components.expandBuilderButton.label}\n      </Button>\n    </div>\n  );\n}\n","declare const monaco: any;\n\ninterface Lang {\n  id: string;\n}\n\ninterface Model {\n  getValueInRange: Function;\n  getWordUntilPosition: Function;\n  getValue: Function;\n}\n\ninterface Position {\n  lineNumber: number;\n  column: number;\n}\n\nexport interface Range {\n  startLineNumber: number;\n  endLineNumber: number;\n  startColumn: number;\n  endColumn: number;\n}\n\nexport interface SuggestionResponse {\n  suggestions: Suggestion[];\n}\n\nexport interface Suggestion {\n  label: string;\n  kind: number;\n  documentation: string;\n  insertText: string;\n  range: Range;\n  detail?: string;\n}\n\nexport type Fetcher = {\n  (text: string, range: Range): Promise<SuggestionResponse>;\n};\n\nexport function registerSQL(lang: string, editor: any, fetchSuggestions: Fetcher) {\n  // so options are visible outside query editor\n  editor.updateOptions({ fixedOverflowWidgets: true, scrollBeyondLastLine: false });\n\n  const registeredLang = monaco.languages.getLanguages().find((l: Lang) => l.id === lang);\n  if (registeredLang !== undefined) {\n    return monaco.editor;\n  }\n\n  monaco.languages.register({ id: lang });\n\n  // just extend sql for now so we get syntax highlighting\n  monaco.languages.registerCompletionItemProvider('sql', {\n    triggerCharacters: [' ', '$', '.', ','],\n    provideCompletionItems: async (model: Model, position: Position) => {\n      const word = model.getWordUntilPosition(position);\n      const textUntilPosition = model.getValueInRange({\n        startLineNumber: 1,\n        startColumn: 1,\n        endLineNumber: position.lineNumber,\n        endColumn: position.column,\n      });\n\n      const range: Range = {\n        startLineNumber: position.lineNumber,\n        endLineNumber: position.lineNumber,\n        startColumn: word.startColumn,\n        endColumn: word.endColumn,\n      };\n\n      return fetchSuggestions(textUntilPosition, range);\n    },\n  });\n\n  return monaco.editor;\n}\n\nexport enum SchemaKind {\n  FIELD = 3, // monaco.languages.CompletionItemKind.Field,\n  DATABASE = 8, // monaco.languages.CompletionItemKind.Module,\n  TABLE = 5, // monaco.languages.CompletionItemKind.Class,\n  VARIABLE = 4, // monaco.languages.CompletionItemKind.Variable,\n}\n","import { getTemplateSrv } from '@grafana/runtime';\nimport { Range, SchemaKind, Suggestion } from './sqlProvider';\n\nexport interface Schema {\n  databases: () => Promise<string[]>;\n  tables: (db?: string) => Promise<string[]>;\n  fields: (db: string, table: string) => Promise<string[]>;\n  defaultDatabase?: string;\n}\n\nexport async function fetchSuggestions(text: string, schema: Schema, range: Range): Promise<Suggestion[]> {\n  if (text.endsWith('$')) {\n    return getVariableSuggestions(range);\n  }\n\n  const keyWords = ['select', 'from', 'where'];\n  let normalized = text.replace(/[\\n\\r]/g, ' '); // remove crlf;\n  for (const v of keyWords) {\n    normalized = normalized.replace(v, v.toUpperCase());\n  }\n  if (normalized.endsWith('SELECT ') || normalized.endsWith('FROM ') || normalized.endsWith(', ')) {\n    if (schema.defaultDatabase !== undefined) {\n      return fetchTableSuggestions(schema, range);\n    }\n    return fetchDatabaseSuggestions(schema, range);\n  }\n\n  if (normalized.endsWith('WHERE ')) {\n    // only show the tables we selected from\n    // TODO: could also show the fields since where clause doesn't require the table name\n    const parts = normalized.split('FROM ');\n    const lastPart = parts[parts.length - 1];\n    const subparts = lastPart.split(' WHERE');\n    const tablesString = subparts[0];\n    const tables = tablesString.split(',').map((t) => t.trim());\n    return tables.map((val) => ({\n      label: val,\n      kind: SchemaKind.TABLE,\n      documentation: 'Table',\n      insertText: val,\n      range,\n    }));\n  }\n\n  if (text.endsWith('.')) {\n    const parts = text.split(' ');\n    const current = parts[parts.length - 1];\n    const subparts = current.split('.');\n    if (schema.defaultDatabase !== undefined) {\n      // format: table. scenario - fetch the fields for the table\n      const table = subparts[0];\n      return fetchFieldSuggestions(schema, range, '', table);\n    }\n    // no default database defined - assume format: db.table.field\n    if (subparts.length === 2) {\n      // show tables\n      const db = subparts[0];\n      return fetchTableSuggestions(schema, range, db);\n    }\n    // show fields\n    const db = subparts[0];\n    const table = subparts[1];\n    return fetchFieldSuggestions(schema, range, db, table);\n  }\n  return [];\n}\n\nasync function fetchDatabaseSuggestions(schema: Schema, range: Range) {\n  const databases = await schema.databases();\n  return databases.map((val) => ({\n    label: val,\n    kind: SchemaKind.DATABASE,\n    documentation: 'Database',\n    insertText: val,\n    range,\n  }));\n}\n\nasync function fetchTableSuggestions(schema: Schema, range: Range, database?: string) {\n  const tables = await schema.tables(database);\n  return tables.map((val) => ({\n    label: val,\n    kind: SchemaKind.TABLE,\n    documentation: 'Table',\n    insertText: val,\n    range,\n  }));\n}\n\nasync function fetchFieldSuggestions(schema: Schema, range: Range, db: string, table: string) {\n  const fields = await schema.fields(db, table);\n  return fields.map((val) => ({\n    label: val,\n    kind: SchemaKind.FIELD,\n    documentation: 'Field',\n    insertText: val,\n    range,\n  }));\n}\n\nfunction getVariableSuggestions(range: Range) {\n  const templateSrv = getTemplateSrv();\n  if (!templateSrv) {\n    return [];\n  }\n  return templateSrv.getVariables().map((variable) => {\n    const label = `\\${${variable.name}}`;\n    const val = templateSrv.replace(label);\n    return {\n      label,\n      detail: `(Template Variable) ${val}`,\n      kind: SchemaKind.VARIABLE,\n      documentation: `(Template Variable) ${val}`,\n      insertText: `{${variable.name}}`,\n      range,\n    };\n  });\n}\n","import * as parser from 'js-sql-parser';\n\nexport interface Error {\n  startLine: number;\n  endLine: number;\n  startCol: number;\n  endCol: number;\n  message: string;\n  expected: string;\n}\n\nexport interface Validation {\n  valid: boolean;\n  error?: Error;\n}\n\nexport interface ParseError {\n  message: string;\n  hash: {\n    text: string;\n    loc: {\n      first_line: number;\n      last_line: number;\n      first_column: number;\n      last_column: number;\n    };\n  };\n}\n\n// the sql parser only handles generic syntax, allow any clickhouse specific syntax\nconst allow = ['INTERVAL'];\n\nexport function validate(sql: string): Validation {\n  try {\n    parser.parse(sql);\n    return { valid: true };\n  } catch (e: any) {\n    const err = e as ParseError;\n    const parts = err.message.split('\\n');\n    const loc = err.hash.loc;\n    const lines = sql.split('\\n');\n    const line = lines[loc.first_line - 1];\n    const bad = line.substring(loc.first_column, loc.last_column);\n    if (allow.includes(bad.toUpperCase())) {\n      return { valid: true };\n    }\n\n    if (line.trim() === bad) {\n      // issue is on next line\n      const nextLine = lines[loc.first_line];\n      if (nextLine?.trim().startsWith('$')) {\n        return { valid: true };\n      }\n    }\n\n    const badSection = line.substring(loc.last_column + 1);\n    if (badSection.trim().startsWith('$')) {\n      return { valid: true };\n    }\n\n    return {\n      valid: false,\n      error: {\n        startLine: loc.first_line,\n        endLine: loc.last_line,\n        startCol: loc.first_column + 1,\n        endCol: loc.last_column + 1,\n        message: e.message,\n        expected: parts[3],\n      },\n    };\n  }\n}\n","import React from 'react';\nimport { QueryEditorProps } from '@grafana/data';\nimport { CodeEditor, monacoTypes } from '@grafana/ui';\nimport { Datasource } from 'data/CHDatasource';\nimport { registerSQL, Range, Fetcher } from './sqlProvider';\nimport { CHConfig } from 'types/config';\nimport { CHQuery, EditorType, CHSqlQuery } from 'types/sql';\nimport { styles } from 'styles';\nimport { fetchSuggestions, Schema } from './suggestions';\nimport { validate } from 'data/validate';\nimport { mapQueryTypeToGrafanaFormat } from 'data/utils';\nimport { QueryType } from 'types/queryBuilder';\nimport { QueryTypeSwitcher } from 'components/queryBuilder/QueryTypeSwitcher';\nimport { pluginVersion } from 'utils/version';\n\ntype SqlEditorProps = QueryEditorProps<Datasource, CHQuery, CHConfig>;\n\nfunction setupAutoSize(editor: monacoTypes.editor.IStandaloneCodeEditor) {\n  const container = editor.getDomNode();\n  const updateHeight = () => {\n    if (container) {\n      const contentHeight = Math.max(100, Math.min(1000, editor.getContentHeight()));\n      const width = parseInt(container.style.width, 10);\n      container.style.width = `${width}px`;\n      container.style.height = `${contentHeight}px`;\n      editor.layout({ width, height: contentHeight });\n    }\n  };\n  editor.onDidContentSizeChange(updateHeight);\n  updateHeight();\n}\n\nexport const SqlEditor = (props: SqlEditorProps) => {\n  const { query, onChange, datasource } = props;\n  const sqlQuery = query as CHSqlQuery;\n  const queryType = sqlQuery.queryType || QueryType.Table;\n\n  const saveChanges = (changes: Partial<CHSqlQuery>) => {\n    onChange({\n      ...sqlQuery,\n      pluginVersion,\n      editorType: EditorType.SQL,\n      format: mapQueryTypeToGrafanaFormat(changes.queryType || queryType),\n      ...changes,\n    });\n  };\n\n  const schema: Schema = {\n    databases: () => datasource.fetchDatabases(),\n    tables: (db?: string) => datasource.fetchTables(db),\n    fields: (db: string, table: string) => datasource.fetchFields(db, table),\n    defaultDatabase: datasource.getDefaultDatabase(),\n  };\n\n  const getSuggestions: Fetcher = async (text: string, range: Range) => {\n    const suggestions = await fetchSuggestions(text, schema, range);\n    return Promise.resolve({ suggestions });\n  };\n\n  const validateSql = (sql: string, model: any, me: any) => {\n    const v = validate(sql);\n    const errorSeverity = 8;\n    if (v.valid) {\n      me.setModelMarkers(model, 'clickhouse', []);\n    } else {\n      const err = v.error!;\n      me.setModelMarkers(model, 'clickhouse', [\n        {\n          startLineNumber: err.startLine,\n          startColumn: err.startCol,\n          endLineNumber: err.endLine,\n          endColumn: err.endCol,\n          message: err.expected,\n          severity: errorSeverity,\n        },\n      ]);\n    }\n  };\n\n  const handleMount = (editor: any) => {\n    const me = registerSQL('chSql', editor, getSuggestions);\n    setupAutoSize(editor);\n    editor.onKeyUp((e: any) => {\n      if (datasource.settings.jsonData.validateSql) {\n        const sql = editor.getValue();\n        validateSql(sql, editor.getModel(), me);\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <QueryTypeSwitcher queryType={queryType} onChange={(queryType) => saveChanges({ queryType })} sqlEditor />\n      </div>\n      <div className={styles.Common.wrapper}>\n        <CodeEditor\n          aria-label=\"SQL Editor\"\n          language=\"sql\"\n          value={query.rawSql}\n          onSave={(sql) => saveChanges({ rawSql: sql })}\n          showMiniMap={false}\n          showLineNumbers={true}\n          onBlur={(sql) => saveChanges({ rawSql: sql })}\n          onEditorDidMount={(editor: any) => handleMount(editor)}\n        />\n      </div>\n    </>\n  );\n};\n","import { ColumnHint, Filter, QueryBuilderOptions, QueryType, SelectedColumn } from \"types/queryBuilder\";\nimport { CHBuilderQuery, CHQuery, CHSqlQuery, EditorType } from \"types/sql\";\nimport { isVersionGtOrEq, pluginVersion } from \"utils/version\";\nimport { mapGrafanaFormatToQueryType } from \"./utils\";\n\nexport type AnyCHQuery = Partial<CHQuery> & {[k: string]: any};\nexport type AnyQueryBuilderOptions = Partial<QueryBuilderOptions> & {[k: string]: any};\n\n/**\n * Takes a CHQuery and transforms it to the latest interface.\n */\nexport const migrateCHQuery = (savedQuery: CHQuery): CHQuery => {\n  const isGrafanaDefaultQuery = savedQuery.rawSql === undefined;\n  if (isGrafanaDefaultQuery) {\n    return savedQuery;\n  }\n\n  if (isV3CHQuery(savedQuery)) {\n    return migrateV3CHQuery(savedQuery);\n  }\n\n  return savedQuery;\n};\n\n/**\n * Takes v3 CHQuery and returns a version compatible with the latest editor.\n */\nconst migrateV3CHQuery = (savedQuery: AnyCHQuery): CHQuery => {\n  // Builder Query\n  if (savedQuery['queryType'] === 'builder') {\n    const builderQuery: CHBuilderQuery = {\n      ...savedQuery,\n      pluginVersion,\n      editorType: EditorType.Builder,\n      builderOptions: migrateV3QueryBuilderOptions(savedQuery['builderOptions'] || {}),\n      rawSql: savedQuery.rawSql || '',\n      refId: savedQuery.refId || '',\n      format: savedQuery.format,\n    };\n\n    if (savedQuery?.meta?.timezone) {\n      builderQuery.meta = {\n        timezone: savedQuery.meta.timezone\n      };\n    }\n\n    // delete unwanted properties from v3\n    delete (builderQuery as any)['queryType'];\n    delete (builderQuery as any)['selectedFormat'];\n\n    return builderQuery;\n  }\n\n  // Raw SQL Query\n  const rawSqlQuery: CHSqlQuery = {\n    ...savedQuery,\n    pluginVersion,\n    editorType: EditorType.SQL,\n    rawSql: savedQuery.rawSql || '',\n    refId: savedQuery.refId || '',\n    format: savedQuery.format,\n    queryType: mapGrafanaFormatToQueryType(savedQuery.format),\n    meta: {}\n  };\n\n  if (savedQuery.expand) {\n    rawSqlQuery.expand = savedQuery.expand;\n  }\n\n  if (savedQuery.meta) {\n    const meta = (savedQuery.meta as any);\n    if (meta.timezone) {\n      rawSqlQuery.meta!.timezone = meta.timezone;\n    }\n\n    if (meta.builderOptions) {\n      // When changing from builder to raw editor, the builder options are saved and also require migration\n      rawSqlQuery.meta!.builderOptions = migrateV3QueryBuilderOptions(meta.builderOptions);\n    }\n  }\n\n  // delete unwanted properties from v3\n  delete (rawSqlQuery as any)['builderOptions'];\n  delete (rawSqlQuery as any)['selectedFormat'];\n\n  return rawSqlQuery;\n};\n\n/**\n * Takes v3 options and returns a version compatible with the latest builder.\n */\nconst migrateV3QueryBuilderOptions = (savedOptions: AnyQueryBuilderOptions): QueryBuilderOptions => {\n  const mapped: QueryBuilderOptions = {\n    database: savedOptions.database || '',\n    table: savedOptions.table || '',\n    queryType: getV3QueryType(savedOptions),\n    columns: []\n  };\n\n  if (savedOptions.mode) {\n    mapped.mode = savedOptions.mode;\n  }\n\n  if (savedOptions['fields'] || Array.isArray(savedOptions['fields'])) {\n    const oldColumns: string[] = savedOptions['fields'];\n    mapped.columns = oldColumns.map((name: string) => ({ name }));\n  }\n\n\n  const timeField: string = savedOptions['timeField'];\n  const timeFieldType: string = savedOptions['timeFieldType'];\n  if (timeField) {\n    const timeColumn: SelectedColumn = {\n      name: timeField,\n      type: timeFieldType,\n      hint: ColumnHint.Time\n    };\n\n    mapped.columns!.push(timeColumn);\n  }\n  \n  const logLevelField: string = savedOptions['logLevelField'];\n  if (logLevelField) {\n    const logLevelColumn: SelectedColumn = {\n      name: logLevelField,\n      hint: ColumnHint.LogLevel\n    };\n\n    mapped.columns!.push(logLevelColumn);\n  }\n\n  if (savedOptions['metrics'] || Array.isArray(savedOptions['metrics'])) {\n    const oldAggregates: any[] = savedOptions['metrics'];\n    mapped.aggregates = oldAggregates.map(agg => ({\n      aggregateType: agg['aggregation'],\n      column: agg['field'],\n      alias: agg['alias']\n    }));\n  }\n\n  if (savedOptions.filters || Array.isArray(savedOptions.filters)) {\n    const oldFilters: Filter[] = savedOptions.filters;\n\n    mapped.filters = oldFilters.map((filter: Filter) => {\n      const result: Filter = {\n        ...filter\n      };\n\n      if (filter.key === timeField) {\n        result.hint = ColumnHint.Time;\n      } else if (filter.key === logLevelField) {\n        result.hint = ColumnHint.LogLevel;\n      }\n\n      return result;\n    });\n  }\n\n  if (savedOptions.groupBy || Array.isArray(savedOptions.groupBy)) {\n    mapped.groupBy = savedOptions.groupBy;\n  }\n\n  if (savedOptions.orderBy || Array.isArray(savedOptions.orderBy)) {\n    mapped.orderBy = savedOptions.orderBy;\n  }\n\n  if (savedOptions.limit !== undefined && savedOptions.limit >= 0) {\n    mapped.limit = savedOptions.limit;\n  }\n\n  return mapped;\n};\n\n\n/**\n * Checks if CHQuery is from <= v3 options.\n */\nconst isV3CHQuery = (savedQuery: AnyCHQuery): boolean => {\n  // pluginVersion was added in v4\n  const oldPluginVersion = !savedQuery['pluginVersion'] || !isVersionGtOrEq(savedQuery.pluginVersion, '4.0.0');\n  const oldQueryType = savedQuery['queryType'] === 'sql' || savedQuery['queryType'] === 'builder';\n  return oldPluginVersion || oldQueryType;\n};\n\n/**\n * Takes v3 options and returns the optimal QueryType. Defaults to QueryType.Table.\n */\nconst getV3QueryType = (savedOptions: AnyQueryBuilderOptions): QueryType => {\n  if (savedOptions['timeField']) {\n    return QueryType.TimeSeries;\n  } else if (savedOptions['logLevelField']) {\n    return QueryType.Logs;\n  }\n\n  return QueryType.Table;\n};\n","import React, { useEffect, useRef } from 'react';\nimport { QueryEditorProps } from '@grafana/data';\nimport { Datasource } from 'data/CHDatasource';\nimport { EditorTypeSwitcher } from 'components/queryBuilder/EditorTypeSwitcher';\nimport { styles } from 'styles';\nimport { Button } from '@grafana/ui';\nimport { CHBuilderQuery, CHQuery, EditorType } from 'types/sql';\nimport { CHConfig } from 'types/config';\nimport { QueryBuilder } from 'components/queryBuilder/QueryBuilder';\nimport { generateSql } from 'data/sqlGenerator';\nimport { SqlEditor } from 'components/SqlEditor';\nimport { isBuilderOptionsRunnable, mapQueryBuilderOptionsToGrafanaFormat } from 'data/utils';\nimport { setAllOptions, useBuilderOptionsState } from 'hooks/useBuilderOptionsState';\nimport { pluginVersion } from 'utils/version';\nimport { migrateCHQuery } from 'data/migration';\n\nexport type CHQueryEditorProps = QueryEditorProps<Datasource, CHQuery, CHConfig>;\n\n/**\n * Top level query editor component\n */\nexport const CHQueryEditor = (props: CHQueryEditorProps) => {\n  const { query: savedQuery, onRunQuery } = props;\n  const query = migrateCHQuery(savedQuery);\n\n  return (\n    <>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <EditorTypeSwitcher {...props} query={query} />\n        <Button onClick={() => onRunQuery()}>Run Query</Button>\n      </div>\n      <CHEditorByType {...props} query={query} />\n    </>\n  );\n};\n\nconst CHEditorByType = (props: CHQueryEditorProps) => {\n  const { query, onChange, app } = props;\n  const [builderOptions, builderOptionsDispatch] = useBuilderOptionsState((query as CHBuilderQuery).builderOptions);\n\n  /**\n   * Grafana will sometimes replace the builder options directly, so we need to sync in both directions.\n   * For example, selecting an entry from the query history will cause the local state to fall out of sync.\n   * The \"key\" property is present on these historical entries.\n   */\n  const queryKey = query.key || ''\n  const lastKey = useRef<string>(queryKey);\n  if (queryKey !== lastKey.current && query.editorType === EditorType.Builder) {\n    builderOptionsDispatch(setAllOptions((query as CHBuilderQuery).builderOptions || {}));\n    lastKey.current = queryKey;\n  }\n\n  /**\n   * Sync builder options when switching from SQL Editor to Query Builder\n   */\n  const lastEditorType = useRef<EditorType>();\n  if (query.editorType !== lastEditorType.current && query.editorType === EditorType.Builder) {\n    builderOptionsDispatch(setAllOptions((query as CHBuilderQuery).builderOptions || {}));\n    lastEditorType.current = query.editorType;\n  }\n\n  // Prevent trying to run empty query on load\n  const shouldSkipChanges = useRef<boolean>(true);\n  if (isBuilderOptionsRunnable(builderOptions)) {\n    shouldSkipChanges.current = false;\n  }\n\n  useEffect(() => {\n    if (shouldSkipChanges.current || query.editorType === EditorType.SQL) {\n      return;\n    }\n\n    onChange({\n      ...query,\n      pluginVersion,\n      editorType: EditorType.Builder,\n      rawSql: generateSql(builderOptions),\n      builderOptions,\n      format: mapQueryBuilderOptionsToGrafanaFormat(builderOptions)\n    });\n\n    // TODO: fix dependency warning with \"useEffectEvent\" once added to stable version of react\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builderOptions]);\n\n  if (query.editorType === EditorType.SQL) {\n    return (\n      <div data-testid=\"query-editor-section-sql\">\n        <SqlEditor {...props} />\n      </div>\n    );\n  }\n\n  return (\n    <QueryBuilder\n      datasource={props.datasource}\n      builderOptions={builderOptions}\n      builderOptionsDispatch={builderOptionsDispatch}\n      generatedSql={query.rawSql}\n      app={app}\n    />\n  );\n};\n","import { DataSourcePlugin, DashboardLoadedEvent } from '@grafana/data';\nimport { Datasource } from './data/CHDatasource';\nimport { ConfigEditor } from './views/CHConfigEditor';\nimport { CHQueryEditor } from './views/CHQueryEditor';\nimport { CHConfig } from 'types/config';\nimport { CHQuery } from 'types/sql';\nimport { getAppEvents } from '@grafana/runtime';\nimport { analyzeQueries, trackClickhouseDashboardLoaded } from 'tracking';\nimport pluginJson from './plugin.json';\nimport clickhouseVersion from '../package.json';\n\nexport const plugin = new DataSourcePlugin<Datasource, CHQuery, CHConfig>(Datasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(CHQueryEditor);\n\n// Track dashboard loads to RudderStack\ngetAppEvents().subscribe<DashboardLoadedEvent<CHQuery>>(\n  DashboardLoadedEvent,\n  ({ payload: { dashboardId, orgId, grafanaVersion, queries } }) => {\n    const clickhouseQueries = queries[pluginJson.id]?.filter((q) => !q.hide);\n    if (!clickhouseQueries?.length) {\n      return;\n    }\n\n    trackClickhouseDashboardLoaded({\n      clickhouse_plugin_version: clickhouseVersion.version,\n      grafana_version: grafanaVersion,\n      dashboard_id: dashboardId,\n      org_id: orgId,\n      ...analyzeQueries(clickhouseQueries),\n    });\n  }\n);\n","import React, { ChangeEvent, useState } from 'react';\nimport {\n  DataSourcePluginOptionsEditorProps,\n  onUpdateDatasourceJsonDataOption,\n  onUpdateDatasourceSecureJsonDataOption,\n} from '@grafana/data';\nimport { RadioButtonGroup, Switch, Input, SecretInput, Button, Field, HorizontalGroup, Alert, VerticalGroup } from '@grafana/ui';\nimport { CertificationKey } from '../components/ui/CertificationKey';\nimport {\n  CHConfig,\n  CHCustomSetting,\n  CHSecureConfig,\n  CHLogsConfig,\n  Protocol,\n  CHTracesConfig,\n  AliasTableEntry\n} from 'types/config';\nimport { gte as versionGte } from 'semver';\nimport { ConfigSection, ConfigSubSection, DataSourceDescription } from 'components/experimental/ConfigSection';\nimport { config } from '@grafana/runtime';\nimport { Divider } from 'components/Divider';\nimport { TimeUnit } from 'types/queryBuilder';\nimport { DefaultDatabaseTableConfig } from 'components/configEditor/DefaultDatabaseTableConfig';\nimport { QuerySettingsConfig } from 'components/configEditor/QuerySettingsConfig';\nimport { LogsConfig } from 'components/configEditor/LogsConfig';\nimport { TracesConfig } from 'components/configEditor/TracesConfig';\nimport { HttpHeadersConfig } from 'components/configEditor/HttpHeadersConfig';\nimport allLabels from 'labels';\nimport { onHttpHeadersChange, useConfigDefaults } from './CHConfigEditorHooks';\nimport {AliasTableConfig} from \"../components/configEditor/AliasTableConfig\";\n\nexport interface ConfigEditorProps extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {}\n\nexport const ConfigEditor: React.FC<ConfigEditorProps> = (props) => {\n  const { options, onOptionsChange } = props;\n  const { jsonData, secureJsonFields } = options;\n  const labels = allLabels.components.Config.ConfigEditor;\n  const secureJsonData = (options.secureJsonData || {}) as CHSecureConfig;\n  const hasTLSCACert = secureJsonFields && secureJsonFields.tlsCACert;\n  const hasTLSClientCert = secureJsonFields && secureJsonFields.tlsClientCert;\n  const hasTLSClientKey = secureJsonFields && secureJsonFields.tlsClientKey;\n  const protocolOptions = [\n    { label: 'Native', value: Protocol.Native },\n    { label: 'HTTP', value: Protocol.Http },\n  ];\n\n  useConfigDefaults(options, onOptionsChange);\n\n  const onPortChange = (port: string) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        port: +port,\n      },\n    });\n  };\n  const onTLSSettingsChange = (\n    key: keyof Pick<CHConfig, 'tlsSkipVerify' | 'tlsAuth' | 'tlsAuthWithCACert'>,\n    value: boolean\n  ) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: value,\n      },\n    });\n  };\n  const onSwitchToggle = (\n    key: keyof Pick<CHConfig, 'secure' | 'validateSql' | 'enableSecureSocksProxy' | 'forwardGrafanaHeaders'>,\n    value: boolean\n  ) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: value,\n      },\n    });\n  };\n\n  const onProtocolToggle = (protocol: Protocol) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        protocol: protocol,\n      },\n    });\n  };\n\n  const onCertificateChangeFactory = (key: keyof Omit<CHSecureConfig, 'password'>, value: string) => {\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        ...secureJsonData,\n        [key]: value,\n      },\n    });\n  };\n  const onResetClickFactory = (key: keyof Omit<CHSecureConfig, 'password'>) => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...secureJsonFields,\n        [key]: false,\n      },\n      secureJsonData: {\n        ...secureJsonData,\n        [key]: '',\n      },\n    });\n  };\n  const onResetPassword = () => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        password: false,\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        password: '',\n      },\n    });\n  };\n  const onCustomSettingsChange = (customSettings: CHCustomSetting[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        customSettings: customSettings.filter((s) => !!s.setting && !!s.value),\n      },\n    });\n  };\n  const onLogsConfigChange = (key: keyof CHLogsConfig, value: string | boolean) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        logs: {\n          ...options.jsonData.logs,\n          [key]: value\n        }\n      }\n    });\n  };\n  const onTracesConfigChange = (key: keyof CHTracesConfig, value: string | boolean) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        traces: {\n          ...options.jsonData.traces,\n          durationUnit: options.jsonData.traces?.durationUnit || TimeUnit.Nanoseconds,\n          [key]: value\n        }\n      }\n    });\n  };\n  const onAliasTableConfigChange = (aliasTables: AliasTableEntry[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        aliasTables\n      }\n    });\n  };\n\n  const [customSettings, setCustomSettings] = useState(jsonData.customSettings || []);\n\n  const hasAdditionalSettings = Boolean(\n    window.location.hash || // if trying to link to section on page, open all settings (React breaks this?)\n    options.jsonData.defaultDatabase ||\n    options.jsonData.defaultTable ||\n    options.jsonData.dialTimeout ||\n    options.jsonData.queryTimeout ||\n    options.jsonData.validateSql ||\n    options.jsonData.enableSecureSocksProxy ||\n    options.jsonData.customSettings ||\n    options.jsonData.logs ||\n    options.jsonData.traces\n  );\n\n  const defaultPort = jsonData.secure ?\n  (jsonData.protocol === Protocol.Native ? labels.serverPort.secureNativePort : labels.serverPort.secureHttpPort) :\n  (jsonData.protocol === Protocol.Native ? labels.serverPort.insecureNativePort : labels.serverPort.insecureHttpPort);\n  const portDescription = `${labels.serverPort.tooltip} (default for ${jsonData.secure ? 'secure' : ''} ${jsonData.protocol}: ${defaultPort})`\n\n  const uidWarning = (!options.uid) && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\">\n      <VerticalGroup>\n        <div>\n          {'This datasource is missing the'}\n          <code>uid</code>\n          {'field in its configuration. If your datasource is '}\n          <a\n            style={{ textDecoration: 'underline' }}\n            href='https://grafana.com/docs/grafana/latest/administration/provisioning/#data-sources'\n            target='_blank'\n            rel='noreferrer'\n          >provisioned via YAML</a>\n          {', please verify the UID is set. This is required to enable data linking between logs and traces.'}\n        </div>\n      </VerticalGroup>\n    </Alert>\n  );\n\n  return (\n    <>\n      {uidWarning}\n      <DataSourceDescription\n        dataSourceName=\"Clickhouse\"\n        docsLink=\"https://grafana.com/grafana/plugins/grafana-clickhouse-datasource/\"\n        hasRequiredFields\n      />\n      <Divider />\n      <ConfigSection title=\"Server\">\n        <Field\n          required\n          label={labels.serverAddress.label}\n          description={labels.serverAddress.tooltip}\n          invalid={!jsonData.host}\n          error={labels.serverAddress.error}\n        >\n          <Input\n            name=\"host\"\n            width={80}\n            value={jsonData.host || ''}\n            onChange={onUpdateDatasourceJsonDataOption(props, 'host')}\n            label={labels.serverAddress.label}\n            aria-label={labels.serverAddress.label}\n            placeholder={labels.serverAddress.placeholder}\n          />\n        </Field>\n        <Field\n          required\n          label={labels.serverPort.label}\n          description={portDescription}\n          invalid={!jsonData.port}\n          error={labels.serverPort.error}\n        >\n          <Input\n            name=\"port\"\n            width={40}\n            type=\"number\"\n            value={jsonData.port || ''}\n            onChange={e => onPortChange(e.currentTarget.value)}\n            label={labels.serverPort.label}\n            aria-label={labels.serverPort.label}\n            placeholder={defaultPort}\n          />\n        </Field>\n\n        <Field label={labels.protocol.label} description={labels.protocol.tooltip}>\n          <RadioButtonGroup<Protocol>\n            options={protocolOptions}\n            disabledOptions={[]}\n            value={jsonData.protocol || Protocol.Native}\n            onChange={(e) => onProtocolToggle(e!)}\n          />\n        </Field>\n        <Field label={labels.secure.label} description={labels.secure.tooltip}>\n          <Switch\n            id=\"secure\"\n            className=\"gf-form\"\n            value={jsonData.secure || false}\n            onChange={(e) => onSwitchToggle('secure', e.currentTarget.checked)}\n          />\n        </Field>\n\n        { jsonData.protocol === Protocol.Http &&\n          <Field label={labels.path.label} description={labels.path.tooltip}>\n            <Input\n              value={jsonData.path || ''}\n              name=\"path\"\n              width={80}\n              onChange={onUpdateDatasourceJsonDataOption(props, 'path')}\n              label={labels.path.label}\n              aria-label={labels.path.label}\n              placeholder={labels.path.placeholder}\n            />\n          </Field>\n        }\n      </ConfigSection>\n\n      { jsonData.protocol === Protocol.Http &&\n        <HttpHeadersConfig\n          headers={options.jsonData.httpHeaders}\n          forwardGrafanaHeaders={options.jsonData.forwardGrafanaHeaders}\n          secureFields={options.secureJsonFields}\n          onHttpHeadersChange={headers => onHttpHeadersChange(headers, options, onOptionsChange)}\n          onForwardGrafanaHeadersChange={forwardGrafanaHeaders => onSwitchToggle('forwardGrafanaHeaders', forwardGrafanaHeaders)}\n        />\n      }\n\n      <Divider />\n      <ConfigSection title=\"TLS / SSL Settings\">\n        <Field\n          label={labels.tlsSkipVerify.label}\n          description={labels.tlsSkipVerify.tooltip}\n        >\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsSkipVerify || false}\n            onChange={(e) => onTLSSettingsChange('tlsSkipVerify', e.currentTarget.checked)}\n          />\n        </Field>\n        <Field\n          label={labels.tlsClientAuth.label}\n          description={labels.tlsClientAuth.tooltip}\n        >\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsAuth || false}\n            onChange={(e) => onTLSSettingsChange('tlsAuth', e.currentTarget.checked)}\n          />\n        </Field>\n        <Field\n          label={labels.tlsAuthWithCACert.label}\n          description={labels.tlsAuthWithCACert.tooltip}\n        >\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsAuthWithCACert || false}\n            onChange={(e) => onTLSSettingsChange('tlsAuthWithCACert', e.currentTarget.checked)}\n          />\n        </Field>\n        {jsonData.tlsAuthWithCACert && (\n          <CertificationKey\n            hasCert={!!hasTLSCACert}\n            onChange={(e) => onCertificateChangeFactory('tlsCACert', e.currentTarget.value)}\n            placeholder={labels.tlsCACert.placeholder}\n            label={labels.tlsCACert.label}\n            onClick={() => onResetClickFactory('tlsCACert')}\n          />\n        )}\n        {jsonData.tlsAuth && (\n          <>\n            <CertificationKey\n              hasCert={!!hasTLSClientCert}\n              onChange={(e) => onCertificateChangeFactory('tlsClientCert', e.currentTarget.value)}\n              placeholder={labels.tlsClientCert.placeholder}\n              label={labels.tlsClientCert.label}\n              onClick={() => onResetClickFactory('tlsClientCert')}\n            />\n            <CertificationKey\n              hasCert={!!hasTLSClientKey}\n              placeholder={labels.tlsClientKey.placeholder}\n              label={labels.tlsClientKey.label}\n              onChange={(e) => onCertificateChangeFactory('tlsClientKey', e.currentTarget.value)}\n              onClick={() => onResetClickFactory('tlsClientKey')}\n            />\n          </>\n        )}\n      </ConfigSection>\n\n      <Divider />\n      <ConfigSection title=\"Credentials\">\n        <Field\n          label={labels.username.label}\n          description={labels.username.tooltip}\n        >\n          <Input\n            name=\"user\"\n            width={40}\n            value={jsonData.username || ''}\n            onChange={onUpdateDatasourceJsonDataOption(props, 'username')}\n            label={labels.username.label}\n            aria-label={labels.username.label}\n            placeholder={labels.username.placeholder}\n          />\n        </Field>\n        <Field label={labels.password.label} description={labels.password.tooltip}>\n          <SecretInput\n            name=\"pwd\"\n            width={40}\n            label={labels.password.label}\n            aria-label={labels.password.label}\n            placeholder={labels.password.placeholder}\n            value={secureJsonData.password || ''}\n            isConfigured={(secureJsonFields && secureJsonFields.password) as boolean}\n            onReset={onResetPassword}\n            onChange={onUpdateDatasourceSecureJsonDataOption(props, 'password')}\n          />\n        </Field>\n      </ConfigSection>\n\n      <Divider />\n      <ConfigSection\n        title=\"Additional settings\"\n        description=\"Additional settings are optional settings that can be configured for more control over your data source. This includes the default database, dial and query timeouts, SQL validation, and custom ClickHouse settings.\"\n        isCollapsible\n        isInitiallyOpen={hasAdditionalSettings}\n      >\n        <Divider />\n        <DefaultDatabaseTableConfig\n          defaultDatabase={jsonData.defaultDatabase}\n          defaultTable={jsonData.defaultTable}\n          onDefaultDatabaseChange={onUpdateDatasourceJsonDataOption(props, 'defaultDatabase')}\n          onDefaultTableChange={onUpdateDatasourceJsonDataOption(props, 'defaultTable')}\n        />\n        \n        <Divider />\n        <QuerySettingsConfig\n          dialTimeout={jsonData.dialTimeout}\n          queryTimeout={jsonData.queryTimeout}\n          validateSql={jsonData.validateSql}\n          onDialTimeoutChange={onUpdateDatasourceJsonDataOption(props, 'dialTimeout')}\n          onQueryTimeoutChange={onUpdateDatasourceJsonDataOption(props, 'queryTimeout')}\n          onValidateSqlChange={e => onSwitchToggle('validateSql', e.currentTarget.checked)}\n        />\n\n        <Divider />\n        <LogsConfig\n          logsConfig={jsonData.logs}\n          onDefaultDatabaseChange={db => onLogsConfigChange('defaultDatabase', db)}\n          onDefaultTableChange={table => onLogsConfigChange('defaultTable', table)}\n          onOtelEnabledChange={v => onLogsConfigChange('otelEnabled', v)}\n          onOtelVersionChange={v => onLogsConfigChange('otelVersion', v)}\n          onTimeColumnChange={c => onLogsConfigChange('timeColumn', c)}\n          onLevelColumnChange={c => onLogsConfigChange('levelColumn', c)}\n          onMessageColumnChange={c => onLogsConfigChange('messageColumn', c)}\n        />\n\n        <Divider />\n        <TracesConfig\n          tracesConfig={jsonData.traces}\n          onDefaultDatabaseChange={db => onTracesConfigChange('defaultDatabase', db)}\n          onDefaultTableChange={table => onTracesConfigChange('defaultTable', table)}\n          onOtelEnabledChange={v => onTracesConfigChange('otelEnabled', v)}\n          onOtelVersionChange={v => onTracesConfigChange('otelVersion', v)}\n          onTraceIdColumnChange={c => onTracesConfigChange('traceIdColumn', c)}\n          onSpanIdColumnChange={c => onTracesConfigChange('spanIdColumn', c)}\n          onOperationNameColumnChange={c => onTracesConfigChange('operationNameColumn', c)}\n          onParentSpanIdColumnChange={c => onTracesConfigChange('parentSpanIdColumn', c)}\n          onServiceNameColumnChange={c => onTracesConfigChange('serviceNameColumn', c)}\n          onDurationColumnChange={c => onTracesConfigChange('durationColumn', c)}\n          onDurationUnitChange={c => onTracesConfigChange('durationUnit', c)}\n          onStartTimeColumnChange={c => onTracesConfigChange('startTimeColumn', c)}\n          onTagsColumnChange={c => onTracesConfigChange('tagsColumn', c)}\n          onServiceTagsColumnChange={c => onTracesConfigChange('serviceTagsColumn', c)}\n        />\n\n        <Divider />\n        <AliasTableConfig aliasTables={jsonData.aliasTables} onAliasTablesChange={onAliasTableConfigChange} />\n        <Divider />\n        {config.featureToggles['secureSocksDSProxyEnabled'] && versionGte(config.buildInfo.version, '10.0.0') && (\n          <Field\n            label={labels.secureSocksProxy.label}\n            description={labels.secureSocksProxy.tooltip}\n          >\n            <Switch\n              className=\"gf-form\"\n              value={jsonData.enableSecureSocksProxy || false}\n              onChange={(e) => onSwitchToggle('enableSecureSocksProxy', e.currentTarget.checked)}\n            />\n          </Field>\n        )}\n        <ConfigSubSection title=\"Custom Settings\">\n          {customSettings.map(({ setting, value }, i) => {\n            return (\n              <HorizontalGroup key={i}>\n                <Field label={`Setting`} aria-label={`Setting`}>\n                  <Input\n                    value={setting}\n                    placeholder={'Setting'}\n                    onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                      let newSettings = customSettings.concat();\n                      newSettings[i] = { setting: changeEvent.target.value, value };\n                      setCustomSettings(newSettings);\n                    }}\n                    onBlur={() => {\n                      onCustomSettingsChange(customSettings);\n                    }}\n                  ></Input>\n                </Field>\n                <Field label={'Value'} aria-label={`Value`}>\n                  <Input\n                    value={value}\n                    placeholder={'Value'}\n                    onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                      let newSettings = customSettings.concat();\n                      newSettings[i] = { setting, value: changeEvent.target.value };\n                      setCustomSettings(newSettings);\n                    }}\n                    onBlur={() => {\n                      onCustomSettingsChange(customSettings);\n                    }}\n                  ></Input>\n                </Field>\n              </HorizontalGroup>\n            );\n          })}\n          <Button\n            variant=\"secondary\"\n            icon=\"plus\"\n            type=\"button\"\n            onClick={() => {\n              setCustomSettings([...customSettings, { setting: '', value: '' }]);\n            }}\n          >\n            Add custom setting\n          </Button>\n        </ConfigSubSection>\n      </ConfigSection>\n    </>\n  );\n};\n","import { reportInteraction } from '@grafana/runtime';\nimport { CHQuery, EditorType } from 'types/sql';\nimport { QueryType, BuilderMode } from 'types/queryBuilder';\n\nexport const trackClickhouseDashboardLoaded = (props: ClickhouseDashboardLoadedProps) => {\n  reportInteraction('grafana_ds_clickhouse_dashboard_loaded', props);\n};\n\nexport type ClickhouseCounters = {\n  sql_queries: number;\n  sql_query_type_table: number;\n  sql_query_type_logs: number;\n  sql_query_type_timeseries: number;\n  sql_query_type_traces: number;\n\n  builder_queries: number;\n  builder_query_type_table: number;\n  builder_query_type_table_simple: number;\n  builder_query_type_table_aggregate: number;\n  builder_query_type_logs: number;\n  builder_query_type_timeseries: number;\n  builder_query_type_timeseries_simple: number;\n  builder_query_type_timeseries_aggregate: number;\n  builder_query_type_traces: number;\n  builder_query_type_traces_search: number;\n  builder_query_type_traces_id: number;\n  builder_minimized_queries: number;\n  builder_otel_queries: number;\n};\n\nexport interface ClickhouseDashboardLoadedProps extends ClickhouseCounters {\n  clickhouse_plugin_version?: string;\n  grafana_version?: string;\n  dashboard_id: string;\n  org_id?: number;\n  [key: string]: any;\n}\n\nexport const analyzeQueries = (queries: CHQuery[]): ClickhouseCounters => {\n  const c: ClickhouseCounters = {\n    sql_queries: 0,\n    sql_query_type_table: 0,\n    sql_query_type_logs: 0,\n    sql_query_type_timeseries: 0,\n    sql_query_type_traces: 0,\n\n    builder_queries: 0,\n    builder_query_type_table: 0,\n    builder_query_type_table_simple: 0,\n    builder_query_type_table_aggregate: 0,\n    builder_query_type_logs: 0,\n    builder_query_type_timeseries: 0,\n    builder_query_type_timeseries_simple: 0,\n    builder_query_type_timeseries_aggregate: 0,\n    builder_query_type_traces: 0,\n    builder_query_type_traces_search: 0,\n    builder_query_type_traces_id: 0,\n    builder_minimized_queries: 0,\n    builder_otel_queries: 0\n  };\n\n  queries.forEach(q => {\n    if (q.editorType === EditorType.SQL) {\n      c.sql_queries++;\n\n      if (q.queryType === QueryType.Table) {\n        c.sql_query_type_table++;\n      } else if (q.queryType === QueryType.Logs) {\n        c.sql_query_type_logs++;\n      } else if (q.queryType === QueryType.TimeSeries) {\n        c.sql_query_type_timeseries++;\n      } else if (q.queryType === QueryType.Traces) {\n        c.sql_query_type_traces++;\n      }\n    } else if (q.editorType === EditorType.Builder) {\n      c.builder_queries++;\n\n      if (!q.builderOptions) {\n        return;\n      }\n\n      if (q.builderOptions.queryType === QueryType.Table) {\n        c.builder_query_type_table++;\n\n        if (q.builderOptions.mode === BuilderMode.Aggregate) {\n          c.builder_query_type_table_aggregate++;\n        } else {\n          c.builder_query_type_table_simple++;\n        }\n      } else if (q.builderOptions.queryType === QueryType.Logs) {\n        c.builder_query_type_logs++;\n      } else if (q.builderOptions.queryType === QueryType.TimeSeries) {\n        c.builder_query_type_timeseries++;\n\n        if (q.builderOptions.mode === BuilderMode.Trend) {\n          c.builder_query_type_timeseries_aggregate++;\n        } else {\n          c.builder_query_type_timeseries_simple++;\n        }\n      } else if (q.builderOptions.queryType === QueryType.Traces) {\n        c.builder_query_type_traces++;\n\n        if (q.builderOptions.meta?.isTraceIdMode) {\n          c.builder_query_type_traces_id++;\n        } else {\n          c.builder_query_type_traces_search++;\n        }\n      }\n\n      if (q.builderOptions.meta?.minimized) {\n        c.builder_minimized_queries++;\n      }\n\n      if (q.builderOptions.meta?.otelEnabled) {\n        c.builder_otel_queries++;\n      }\n    }\n  });\n\n  return c;\n};\n"],"names":["sqlParser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","$VF1","$VG1","$VH1","$VI1","$VJ1","$VK1","$VL1","$VM1","$VN1","$VO1","$VP1","$VQ1","$VR1","$VS1","$VT1","$VU1","$VV1","$VW1","$VX1","$VY1","$VZ1","$V_1","$V$1","$V02","parser","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","nodeType","value","hasSemicolon","this","$","orderBy","limit","type","left","distinctOpt","right","highPriorityOpt","maxStateMentTimeOpt","straightJoinOpt","sqlSmallResultOpt","sqlBigResultOpt","sqlBufferResultOpt","sqlCacheOpt","sqlCalcFoundRowsOpt","selectItems","from","partition","where","groupBy","having","procedure","updateLockMode","push","alias","hasAs","$01","name","params","when","then","caseExprOpt","whenThenList","else","prefix","hasRow","hasExists","identifier","operator","hasNot","escape","subQueryOpt","rollUp","sortOpt","offsetMode","hasOj","leftRight","outOpt","innerCrossOpt","condition","forOpt","indexOrKey","indexHintOpt","hasParentheses","param","slice","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","args","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","token","ranges","options","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","yyval","lex","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","Sql","buffer","stringify","ast","sql","travelMain","travel","append","noSuffixFlag","appendKeyword","keyword","noPrefix","noSuffix","toUpperCase","word","travelSelect","travelSelectExpr","exprList","travelIsExpression","travelNotExpression","travelOrExpression","travelAndExpression","travelXORExpression","travelNull","travelBoolean","travelBooleanExtra","travelNumber","travelString","travelFunctionCall","travelFunctionCallParam","travelIdentifier","travelIdentifierList","list","travelWhenThenList","travelCaseWhen","travelPrefix","travelSimpleExprParentheses","travelSubQuery","travelIdentifierExpr","travelBitExpression","travelInSubQueryPredicate","travelInExpressionListPredicate","travelBetweenPredicate","travelSoundsLikePredicate","travelLikePredicate","travelRegexpPredicate","travelIsNullBooleanPrimary","travelComparisonBooleanPrimary","travelComparisonSubQueryBooleanPrimary","travelExpressionList","travelGroupBy","travelOrderBy","travelGroupByOrderByItem","travelLimit","travelTableReferences","TableReferences","travelTableReference","travelInnerCrossJoinTable","travelStraightJoinTable","travelLeftRightJoinTable","travelNaturalJoinTable","travelOnJoinCondition","travelUsingJoinCondition","travelPartitions","travelForOptIndexHint","travelIndexList","travelUseIndexHint","travelIgnoreIndexHint","travelForceIndexHint","travelTableFactor","travelUnion","travelSelectParenthesized","travelPlaceHolder","Symbol","module","exports","getRawTag","objectToString","symToStringTag","toStringTag","undefined","freeGlobal","g","objectProto","nativeObjectToString","toString","isOwn","tag","unmasked","e","result","freeSelf","root","Function","isArray","baseGetTag","isObjectLike","hasSticky","RegExp","sticky","isRegExp","isObject","reCapture","s","reUnion","regexps","map","regexpOrLiteral","obj","ignoreCase","global","multiline","source","pad","ruleOptions","include","defaultType","lineBreaks","fallback","shouldThrow","key","sort","a","b","toRules","spec","array","j","JSON","arrayToRules","object","keys","getOwnPropertyNames","thing","forEach","rule","objectToRules","defaultErrorRule","compileRules","hasStates","errorRule","fast","fastAllowed","unicodeFlag","groups","parts","shift","charCodeAt","unicode","pat","regexp","test","exec","fallbackRule","flags","suffix","checkStateGroup","Lexer","states","startState","reset","data","info","col","queuedToken","queuedText","queuedThrow","setState","save","re","eat","tokenToString","_getGroup","groupCount","queuedGroup","_token","group","charAt","lastIndex","matchNL","nl","size","formatError","iterator","LexerIterator","message","indexOf","firstDisplayedLine","max","lastDisplayedLine","lastLineDigits","String","displayedLines","string","numLines","position","idx","lastIndexOf","startPosition","substring","lastNLines","errorLines","lineNo","clone","has","tokenType","compile","start","all","$all","ruleMap","included","splice","newRules","newRule","fastKeys","freeze","keywords","isMap","Map","reverseMap","types","item","set","get","factory","Rule","symbols","postprocess","id","highestId","State","dot","reference","wantedBy","isComplete","Column","grammar","wants","scannable","completed","Grammar","byName","StreamLexer","fromCompiled","keepHistory","lexerState","column","predict","process","current","getSymbolShortDisplay","literal","withCursorAt","symbolSequence","nextState","child","build","children","node","reverse","finish","fail","nextColumn","w","complete","exp","nulls","copy","ParserStart","ParserRules","lastLineBreak","nextLineBreak","feed","chunk","err","reportLexerError","constructor","expect","isToken","reportError","results","lexerError","tokenDisplay","lexerMessage","reportErrorCommon","lastColumnIndex","lastColumn","expectantStates","filter","nextSymbol","displayStateStack","buildFirstStateStack","stateStack","symbolDisplay","getSymbolDisplay","lastDisplay","sameDisplayCount","display","getSymbolLongDisplay","visited","prevState","childVisited","childResult","restore","rewind","considerations","t","nearley","modules","installedModules","moduleId","m","d","getter","defineProperty","enumerable","mode","__esModule","ns","bind","property","unbox","doubleQuoted","box","track","tracking","trackingComments","lexerAny","moo_1","keywords_1","keywordsMap","sqlKeywords","toLowerCase","transform","caseInsensitiveKeywords","x","wordQuoted","eString","_","qparam","commentLine","commentFullOpen","commentFullClose","star","comma","space","int","float","lparen","rparen","lbracket","rbracket","semicolon","op_cast","op_colon","op_plus","op_eq","op_neq","op_membertext","op_member","op_minus","op_div","op_not_ilike","op_not_like","op_ilike","op_like","op_mod","op_exp","op_additive","op_compare","ops_others","codeblock","tok","commentFull","nested","comments","makeComment","trackingLoc","end","_location","comment","act","xs","ret","seek","doubleQuotedSym","unwrapNoBox","diff","uw","_a","AstDefaultMapper","arrayNilMap","assignChanged","astMapper","utils_1","orig","assign","changed","trimNullish","collection","mapper","val","withAccepts","modifierBuilder","instance","wrapped","super","SkipModifier","statement","alterTable","alterIndex","transaction","createIndex","createTable","truncateTable","delete","insert","with","withRecursive","selection","update","createExtension","tablespace","setGlobal","setTimezone","setNames","createSequence","alterSequence","drop","createEnum","alterEnum","createCompositeType","union","show","prepare","deallocate","createView","createMaterializedView","refreshMaterializedView","createSchema","raise","do","createFunction","dropFunction","values","NotSupported","never","query","select","ref","tableRef","dataType","returns","kind","columns","attributes","seq","change","as","expr","sets","returning","selectionColumn","_b","into","on","onConflict","exprs","ocdo","formatExprs","using","u","createColumn","likeTable","like","constraint","def","default","foreignTable","st","expressions","expression","changes","hasChanged","currentChange","tableAlteration","addColumn","addConstraint","alterColumn","renameTable","renameColumn","renameConstraint","dropColumn","dropConstraint","setTableOwner","inTable","alter","setColumnDefault","setColumnType","alterColumnSimple","alterColumnAddGenerated","inColumn","constraints","by","_in","in","fromTable","fromStatement","fromCall","y","nfrom","binary","unary","constant","arraySelect","cast","case","member","arrayIndex","ternary","valueKeyword","parameter","extract","callOverlay","callSubstring","lo","hi","operand","whens","withinGroupList","withinGroup","for","placing","proto","configurable","skipNext","impl","parent","__webpack_require__","intervalToString","normalizeInterval","buildInterval","unwrap","_c","_d","_e","_f","_g","_h","_j","mul","floor","ceil","nk","months","years","hours","minutes","seconds","milliseconds","sign","round","num","neg","vals","days","time","astVisitor","ast_mapper_1","Visitor","SkipVisitor","mapperProto","visitor","visitorBuilder","what","msg","depth","Date","__createBinding","k2","desc","getOwnPropertyDescriptor","writable","__exportStar","toSql","parseWithComments","parseIntervalLiteral","parseGeometricLiteral","parseArrayLiteral","parseFirst","parser_1","ast_visitor_1","to_sql_1","interval_builder_1","__importDefault","mod","nearley_1","main_ne_1","array_ne_1","geometric_ne_1","interval_ne_1","interval_iso_ne_1","lexer_1","sqlCompiled","arrayCompiled","geometricCompiled","intervalTextCompiled","intervalIsoCompiled","optEntry","entry","opts","doParse","_parse","parsed","locationTracking","asts","reg","startsWith","low","lexer_2","asName","asNameWithColumns","toStr","asLit","last","flatten","asStr","flattenStr","trim","fromEntries","kwSensitivity","sensitivity","notReservedKw","kw","rej","localeCompare","anyKw","kwSet","Set","setSeqOpts","defs","unboxed","add","parseFloat","parseInt","kw_primary","kw_unique","quoted_word","head","tail","kw_not","kw_with","kw_null","kw_array","asArray","config","arrayOf","kw_precision","kw_as","schema","kw_current_schema","kw_all","kw_analyse","kw_analyze","kw_and","kw_any","kw_asc","kw_asymmetric","kw_authorization","kw_binary","kw_both","kw_case","kw_cast","kw_check","kw_collate","kw_collation","kw_concurrently","kw_constraint","kw_create","kw_cross","kw_current_catalog","kw_current_date","kw_current_role","kw_current_time","kw_current_timestamp","kw_current_user","kw_default","kw_deferrable","kw_desc","kw_distinct","kw_do","kw_else","kw_end","kw_except","kw_false","kw_fetch","kw_for","kw_foreign","kw_freeze","kw_from","kw_full","kw_grant","kw_group","kw_having","kw_ilike","kw_in","kw_initially","kw_inner","kw_intersect","kw_into","kw_is","kw_isnull","kw_join","kw_lateral","kw_leading","kw_left","kw_like","kw_limit","kw_localtime","kw_localtimestamp","kw_natural","kw_notnull","kw_offset","kw_on","kw_only","kw_or","kw_order","kw_outer","kw_overlaps","kw_placing","kw_references","kw_returning","kw_right","kw_select","kw_session_user","kw_similar","kw_some","kw_symmetric","kw_table","kw_tablesample","kw_then","kw_to","kw_trailing","kw_true","kw_union","kw_user","kw_using","kw_variadic","kw_verbose","kw_when","kw_where","kw_window","_groupBy","_selectFor","selectFor","skip","columnNames","lateral","withOrdinality","distinct","order","op","opSchema","to","function","over","partitionBy","field","cols","ifNotExists","unlogged","locality","temporary","constraintName","localColumns","foreignColumns","reduce","onDelete","onUpdate","collate","verb","option","inherits","unique","concurrently","indexName","opclass","extension","version","variable","scope","format","level","isolationLevel","writeable","deferrable","overriding","_t","ifExists","only","behaviour","always","sequence","tables","identity","cascade","temp","owner","newName","newSchema","names","target","orReplace","recursive","parameters","checkOption","withData","specs","language","purity","code","leakproof","onNullInput","_tail","array_lexer_1","start_list","end_list","valueString","valueRaw","geometric_lexer_1","arg","lcurl","rcurl","path","closed","lcomp","rcomp","interval_lexer_1","elts","colon","interval_iso_lexer_1","T","P","Y","M","W","D","H","S","pg_escape_1","nm","ident","forceDoubleQuote","elems","addParen","first","visitGenerated","visitQualifiedName","cs","visitQualifiedNameAliased","visitOrderBy","visitSetVal","visitSeqOpts","incrementBy","minValue","maxValue","startWith","cache","cycle","ownedBy","visitQColumn","restart","tbl","visitOp","cname","updateExisting","Number","isInteger","cst","beg","appendConfig","ix","vlist","entries","tblCnt","f","locationOf","ANY","Comparator","comp","parseOptions","loose","debug","semver","COMPARATORLOOSE","COMPARATOR","TypeError","SemVer","er","cmp","intersects","Range","includePrerelease","includes","safeRe","SPACE_CHARACTERS","raw","formatted","parseRange","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","comparators","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","pr","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","compare","other","compareMain","comparePre","compareBuild","inc","release","identifierBase","base","isNaN","eq","neq","gt","gte","lt","lte","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","throwErrors","internalRe","constants","identifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","env","NODE_DEBUG","console","numeric","anum","bnum","firstKey","looseOption","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","makeSafeRegex","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","prev","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","__WEBPACK_EXTERNAL_MODULE__7644__","__WEBPACK_EXTERNAL_MODULE__3305__","__WEBPACK_EXTERNAL_MODULE__3545__","__WEBPACK_EXTERNAL_MODULE__7388__","__WEBPACK_EXTERNAL_MODULE__5980__","__WEBPACK_EXTERNAL_MODULE__2650__","__WEBPACK_EXTERNAL_MODULE__1177__","__webpack_module_cache__","cachedModule","__webpack_modules__","definition","globalThis","window","prop","FilterOperator","BuilderMode","List","Aggregate","Trend","QueryType","Table","Logs","TimeSeries","Traces","AggregateType","Sum","Average","Min","Max","Count","Any","ColumnHint","Time","LogLevel","LogMessage","LogLabels","TraceId","TraceSpanId","TraceParentSpanId","TraceServiceName","TraceOperationName","TraceDurationTime","TraceTags","TraceServiceTags","TraceStatusCode","TimeUnit","Seconds","Milliseconds","Microseconds","Nanoseconds","OrderByDirection","ASC","DESC","IsAnything","IsEmpty","IsNotEmpty","IsNull","IsNotNull","Equals","NotEquals","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","Like","NotLike","In","NotIn","WithInGrafanaTimeRange","OutsideGrafanaTimeRange","EditorType","SQL","Builder","defaultCHBuilderQuery","pluginVersion","editorType","rawSql","builderOptions","database","queryType","meta","getReplacementKey","isVariable","random","sqlToStatement","replaceVars","variableSql","replaceVariables","variableRegex","regExpArray","startIndex","replacementName","si","replaceMacroVariables","replaceFuncs","keywordRegex","replaceMacroFunctions","replaceParts","rfs","find","rft","rf","getTable","stm","tableName","AdHocFilter","setTargetTableFromQuery","_targetTable","adHocFilters","filters","isValid","warn","GraphDrawStyle","GraphDrawStyle2","StackingMode","StackingMode2","BarAlignment","BarAlignment2","SECOND","MINUTE","HOUR","LogLevelColor","critical","colors","warning","unknown","bootData","user","lightTheme","getLogVolumeFieldConfig","oneLevelDetected","color","displayNameFromDS","FieldColorModeId","Fixed","fixedColor","custom","drawStyle","Bars","barAlignment","Center","lineColor","pointColor","fillColor","lineWidth","fillOpacity","stacking","Normal","getTimeFieldRoundingClause","scopedVars","timeField","interval","__interval_ms","intervalMs","TIME_FIELD_ALIAS","DEFAULT_LOGS_ALIAS","LOG_LEVEL_TO_IN_CLAUSE","levels","allLevels","defaultLogsTable","defaultTraceTable","otel129","specUrl","logsTable","logColumnMap","logLevels","traceTable","traceColumnMap","traceDurationUnit","traceTimestampTableSuffix","getLatestVersion","getVersion","generateSql","hasTraceIdFilter","isTraceIdMode","traceId","generateTraceIdQuery","generateTraceSearchQuery","generateLogsQuery","generateSimpleTimeSeriesQuery","generateAggregateTimeSeriesQuery","generateTableQuery","queryParts","selectParts","getColumnByHint","escapeIdentifier","traceServiceName","traceOperationName","traceStartTime","traceDurationTime","timeUnit","getTraceDurationSelectSql","selectPartsSql","getTableIdentifier","filterParts","getFilters","getOrderBy","getLimit","concatQueryParts","traceSpanId","traceParentSpanId","convertTimeFieldToMilliseconds","traceTags","traceServiceTags","traceStatusCode","otelVersion","otel","applyTraceIdOptimization","otelEnabled","timestampTable","_options","logTime","logColumnHintsToAlias","getColumnIdentifier","logMessage","logLevel","logLabels","hint","hasLogMessageFilter","logMessageLike","columnsExcludingTimeColumn","selectNames","timeColumn","aggregateSelectParts","aggregates","agg","aggregateType","hasAggregates","hasGroupBy","groupByTime","isAggregateMode","colName","sep","escapeValue","columnIdentifier","orderByParts","hintedColumn","dir","builtFilters","mapKey","negate","isNullFilter","isBooleanFilter","isNumberFilter","isDateFilter","isDateFilterWithoutValue","isDateType","isStringFilter","isMultiFilter","unshift","builtFilter","isBooleanType","numberTypes","isNumberType","isStringType","stripTypeModifiers","logAliasToColumnHintsEntries","logAliasToColumnHints","pluginPackage","versionPattern","SemVersion","isGtOrEq","compared","comparable","isNumber","isVersionGtOrEq","isBuilderOptionsRunnable","mapQueryBuilderOptionsToGrafanaFormat","mapQueryTypeToGrafanaFormat","mapGrafanaFormatToQueryType","columnLabelToPlaceholder","label","Datasource","DataSourceWithBackend","getDataProvider","request","getSupportedSupplementaryQueryTypes","SupplementaryQueryType","LogsVolume","logsVolumeRequest","cloneDeep","intervalInfo","getIntervalInfo","__interval","hideFromInspector","targets","supplementaryQuery","getSupplementaryLogsVolumeQuery","datasource","Observable","observer","rawLogsVolume","LoadingState","Loading","queryResponse","subscription","isObservable","subscribe","aggregatedLogsVolume","levelFields","fields","totalLength","df","MutableDataFrame","addField","FieldType","number","aggregateRawLogsVolume","absoluteRange","valueOf","Done","dataQueryResponse","toDataFrame","unsubscribe","queryLogsVolume","logLevelColumn","llf","originalColumn","logVolumeSqlBuilderOptions","logVolumeSupplementaryQuery","refId","getSupplementaryQuery","metricFindQuery","frame","adHocFiltersStatus","AdHocFilterStatus","none","canUseAdhocFilters","chQuery","isString","runQuery","vectorator","ids","applyTemplateVariables","scoped","rawQuery","templateSrv","getTemplateSrv","skipAdHocFilter","getAdhocFilters","disabled","adHocCHVerReq","adHocFilter","applyConditionalAll","getVariables","templateVars","macro","macroIndex","getMacroArgs","templateVarParam","templateVar","phrase","modifyQuery","columnName","actionFrame","actionValue","lookupByAlias","lookupByName","lookupByLogsAlias","lookupByLogLabels","logLabelsFieldName","labels","dataFrameHasLogLabelWithName","nextFilters","filterType","nextOptions","argsIndex","bracketCount","lastArgEndIndex","argsSubstr","foundNode","getDefaultDatabase","settings","jsonData","defaultDatabase","getDefaultTable","defaultTable","getDefaultLogsDatabase","logs","getDefaultLogsTable","getDefaultLogsColumns","logsConfig","otelConfig","levelColumn","messageColumn","getLogsOtelVersion","logConfig","getDefaultTraceDatabase","traces","getDefaultTraceTable","getDefaultTraceColumns","traceConfig","traceIdColumn","spanIdColumn","operationNameColumn","parentSpanIdColumn","serviceNameColumn","durationColumn","startTimeColumn","tagsColumn","serviceTagsColumn","getTraceOtelVersion","getDefaultTraceDurationUnit","durationUnit","fetchDatabases","fetchData","fetchTables","db","mapColumn","fetchEntities","fetchFields","Boolean","DataFrameView","picklistValues","fullTableName","getAliasTable","targetDatabase","targetTable","matchedEntry","aliasTables","matchDatabase","matchTable","aliasDatabase","aliasTable","fetchColumns","fullAliasTableName","fetchColumnsFromAliasTable","fetchColumnsFromTable","getTimezone","localTimezoneInfo","timezone","getTimeZoneInfo","getTimeZone","now","ianaName","hide","pipe","res","req","traceIdQuery","traceLogsQuery","originalQuery","traceField","minimized","defaultColumns","openInNewWindow","app","CoreApp","Explore","links","title","targetBlank","url","internal","datasourceUid","uid","datasourceName","panelsState","spanId","transformQueryResponseWithTraceAndLogLinks","Promise","resolve","timeRange","getTagKeys","fetchTags","TagType","getTagValues","getTagSource","fetchTagValuesFromQuery","fetchTagValuesFromSchema","tagSource","ADHOC_VAR","isEmpty","verString","ver","enabled","getLogRowContext","row","showContextToggle","getLogRowContextUi","runContextQuery","instanceSettings","annotations","CertificationKey","hasCert","onChange","onClick","placeholder","Field","Input","width","Button","variant","style","marginLeft","TextArea","rows","required","Protocol","Native","Http","GenericConfigSection","description","isCollapsible","isInitiallyOpen","className","typography","spacing","useTheme2","isOpen","setIsOpen","useState","iconName","isSubSection","collapsibleButtonAriaLabel","styles","header","css","justifyContent","alignItems","margin","subtitle","fontWeight","fontWeightRegular","descriptionText","marginTop","marginBottom","bodySmall","secondary","content","div","h3","h6","IconButton","aria-label","ConfigSection","props","ConfigSubSection","DataSourceDescription","dataSourceName","docsLink","hasRequiredFields","theme","container","body","link","textDecoration","cx","href","rel","Divider","buildInfo","GrafanaDivider","borderTop","border","weak","components","Config","ConfigEditor","serverAddress","tooltip","serverPort","insecureNativePort","insecureHttpPort","secureNativePort","secureHttpPort","protocol","username","password","tlsSkipVerify","tlsClientAuth","tlsAuthWithCACert","tlsCACert","tlsClientCert","tlsClientKey","secure","secureSocksProxy","HttpHeadersConfig","headerNameLabel","headerNamePlaceholder","insecureHeaderValueLabel","secureHeaderValueLabel","secureLabel","addHeaderLabel","forwardGrafanaHeaders","AliasTableConfig","descriptionParts","addTableLabel","targetDatabaseLabel","targetDatabasePlaceholder","targetTableLabel","aliasDatabaseLabel","aliasDatabasePlaceholder","aliasTableLabel","DefaultDatabaseTableConfig","QuerySettingsConfig","dialTimeout","queryTimeout","validateSql","TracesConfig","parentSpanId","serviceName","operationName","startTime","durationTime","tags","serviceTags","LogsConfig","EditorTypeSwitcher","switcher","confirmText","dismissText","cannotConvert","expandBuilderButton","QueryTypeSwitcher","sqlTooltip","DatabaseSelect","empty","TableSelect","ColumnsEditor","OtelVersionSelect","LimitEditor","SqlPreview","AggregatesEditor","aliasLabel","aliasTooltip","addLabel","OrderByEditor","FilterEditor","mapKeyPlaceholder","GroupByEditor","LogsQueryBuilder","logTimeColumn","logMessageColumn","logLabelsColumn","liveView","logMessageFilter","clearButton","logLevelFilter","TimeSeriesQueryBuilder","simpleQueryModeLabel","aggregateQueryModeLabel","builderModeLabel","builderModeTooltip","TableQueryBuilder","TraceQueryBuilder","traceIdModeLabel","traceSearchModeLabel","traceModeLabel","traceModeTooltip","columnsSection","filtersSection","traceIdFilter","builder","timeseries","onDefaultDatabaseChange","onDefaultTableChange","allLabels","onDialTimeoutChange","onQueryTimeoutChange","onValidateSqlChange","Switch","role","onEnabledChange","selectedVersion","onVersionChange","wide","selectors","useEffect","useTheme","switchContainerStyle","padding","sm","height","formInputHeight","InlineFormLabel","GrafanaSwitch","currentTarget","checked","Select","menuPlacement","LabeledInput","onOtelEnabledChange","onOtelVersionChange","onTimeColumnChange","onLevelColumnChange","onMessageColumnChange","Common","check","wrapper","smallBtn","selectWrapper","inlineSelect","firstLabel","expand","subHeader","QueryEditor","inlineField","FormatSelector","formatSelector","VariablesEditor","durationUnitOptions","DurationUnitSelect","unit","inline","onTraceIdColumnChange","onSpanIdColumnChange","onOperationNameColumnChange","onParentSpanIdColumnChange","onServiceNameColumnChange","onDurationColumnChange","onDurationUnitChange","onStartTimeColumnChange","onTagsColumnChange","onServiceTagsColumnChange","tracesConfig","Components","CodeEditor","Expand","Format","AUTO","TABLE","TIME_SERIES","LOGS","TRACE","Types","SQLEditor","QueryBuilder","TYPES","LIST","AGGREGATE","TREND","DATABASE","FROM","SELECT","tooltipTable","tooltipAggregate","ALIAS","AddLabel","RemoveLabel","AGGREGATES","WHERE","GROUP_BY","ORDER_BY","LIMIT","TIME_FIELD","LOGS_VOLUME_TIME_FIELD","LOG_LEVEL_FIELD","PREVIEW","HttpHeaderConfig","headerEditor","addHeaderButton","removeHeaderButton","headerSecureSwitch","headerNameInput","headerValueInput","forwardGrafanaHeadersSwitch","aliasEditor","addEntryButton","removeEntryButton","targetDatabaseInput","targetTableInput","aliasDatabaseInput","aliasTableInput","LogMessageLikeInput","AggregateEditor","sectionLabel","itemWrapper","itemRemoveButton","addButton","multiSelectWrapper","TraceIdInput","secureFields","onHttpHeadersChange","configuredSecureHeaders","useConfiguredSecureHttpHeaders","headers","setHeaders","setForwardGrafanaHeaders","allSelectors","HttpHeaderEditor","isSecureConfigured","onHeaderChange","nextHeaders","updateHeader","onRemove","removeHeader","data-testid","icon","onForwardGrafanaHeadersChange","updateForwardGrafanaHeaders","setName","setValue","setSecure","setSecureConfigured","valueInput","SecretInput","isConfigured","onReset","onBlur","headerValueLabel","HorizontalGroup","secureJsonFields","useMemo","secureHeaders","onAliasTablesChange","setEntries","entryToUniqueKey","removeDuplicateEntries","duplicateKeys","span","br","AliasTableEditor","onEntryChange","nextEntries","updateEntry","removeEntry","setTargetDatabase","setTargetTable","setAliasDatabase","setAliasTable","normalizedName","getQueryOptionsFromSql","columnsAndAggregates","selectClauses","columnOrAggregate","selectCallFunc","getAggregatesFromAst","notFlag","getBinaryFilter","getRefFilter","getStringFilter","getIntFilter","getUnaryFilter","getCallFilter","getListFilter","getFiltersFromAst","ob","gb","confirmModalState","setConfirmModalState","cannotConvertModalState","setCannotConvertModalState","errorMessage","setErrorMessage","onEditorTypeChange","confirmed","queryOptionsFromSql","onConfirmEditorTypeChange","RadioButtonGroup","ConfirmModal","onConfirm","onDismiss","allColumns","selectedColumns","onSelectedColumnsChange","showAllOption","customColumns","setCustomColumns","allColumnNames","selectedColumnNames","columnNamesSet","getCustomColumns","MultiSelect","onOpenMenu","onCloseMenu","selected","customColumnNames","columnMap","currentColumnMap","excludeAllColumn","nextSelectedColumns","tableColumn","existingColumn","allowCustomValue","defaultFilterFn","ColumnSelect","selectedColumn","onColumnChange","columnFilterFn","columnHint","invalid","clearable","selectedColumnName","staleOption","labelStyle","isClearable","sortOptions","OrderByItem","columnOptions","orderByItem","updateOrderByItem","removeOrderByItem","orderByOptions","onOrderByChange","nextOrderBy","fieldLabel","fieldSpacer","getOrderByOptions","customValues","allOptions","isAggregateQuery","allValues","setLimit","valueAsNumber","onLimitChange","boolValues","filterOperators","standardTimeOptions","defaultNewFilter","FilterValueNumberItem","FilterValueSingleStringItem","defaultValue","FilterValueMultiStringItem","FilterValueEditor","onFilterChange","fieldsList","getOptions","matchedFilter","utils","onBoolFilterValueChange","onDateFilterValueChange","dateOptions","onStringFilterValueChange","onMultiFilterValueChange","removeFilter","isMapType","mapKeys","setKeys","ignore","fetchUniqueMapKeys","catch","ex","lastDatabase","useRef","lastTable","useUniqueMapKeys","mapKeyOptions","wrap","align","justify","newFilter","onFilterConditionChange","restrictToFields","getFields","fieldName","matchingField","filterData","onFilterNameChange","onFilterMapKeyChange","getFilterOperatorsByType","onFilterOperatorChange","FiltersEditor","onFiltersChange","addFilter","newFilters","columnFilterDateTime","columnFilterString","useBuilderOptionChanges","nextValue","setColumns","lastDbTable","dbTable","BuilderOptionsActionType","SetOptions","SetAllOptions","SetQueryType","SetDatabase","SetTable","SetOtelEnabled","SetOtelVersion","SetColumnByHint","SetBuilderMinimized","createAction","payload","createGenericAction","setOptions","setAllOptions","setOtelEnabled","setOtelVersion","setColumnByHint","reducer","actionFn","actions","mergeBuilderOptionsState","buildInitialState","nextQueryType","nextColumns","savedOptions","defaultOptions","builderOptionsDispatch","useColumns","isNewQuery","useIsNewQuery","builderState","labelsColumn","showConfigWarning","setConfigWarningOpen","onOptionChange","didSetDefaults","defaultDb","useLogDefaultsOnMount","didSetColumns","useOtelColumns","hasDefaultColumnConfigured","didSetDefaultTime","useDefaultTimeColumn","appliedDefaultFilters","defaultFilters","defaultOrderBy","useDefaultFilters","configWarning","Alert","severity","buttonContent","VerticalGroup","encodeURIComponent","ModeSwitch","labelA","labelB","allAggregateOptions","aggregate","updateAggregate","removeAggregate","setAlias","aggregateOptions","onAggregatesChange","nextAggregates","aggregatesItem","onGroupByChange","onDatabaseChange","databases","setDatabases","useDatabases","onTableChange","setTables","useTables","DatabaseTableSelect","sqlEditor","inputId","setInputId","isColumnsOpen","setColumnsOpen","isFiltersOpen","setFiltersOpen","durationTimeColumn","defaultDurationUnit","useTraceDefaultsOnMount","Collapse","collapsible","onToggle","generatedSql","MinimizedQueryViewer","setDatabase","setTable","setQueryType","configQueryType","fetchSuggestions","endsWith","detail","SchemaKind","VARIABLE","documentation","insertText","getVariableSuggestions","keyWords","normalized","fetchTableSuggestions","fetchDatabaseSuggestions","subparts","fetchFieldSuggestions","FIELD","allow","SqlEditor","sqlQuery","saveChanges","getSuggestions","suggestions","handleMount","editor","me","lang","updateOptions","fixedOverflowWidgets","scrollBeyondLastLine","monaco","languages","getLanguages","register","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","model","getWordUntilPosition","textUntilPosition","getValueInRange","startLineNumber","startColumn","endLineNumber","lineNumber","endColumn","registerSQL","getDomNode","updateHeight","contentHeight","getContentHeight","layout","onDidContentSizeChange","setupAutoSize","onKeyUp","bad","nextLine","startLine","endLine","startCol","endCol","validate","setModelMarkers","getValue","getModel","onSave","showMiniMap","showLineNumbers","onEditorDidMount","migrateV3QueryBuilderOptions","mapped","getV3QueryType","oldColumns","timeFieldType","logLevelField","oldAggregates","oldFilters","CHEditorByType","dispatch","useReducer","useBuilderOptionsState","queryKey","lastKey","lastEditorType","shouldSkipChanges","plugin","DataSourcePlugin","setConfigEditor","onOptionsChange","secureJsonData","hasTLSCACert","hasTLSClientCert","hasTLSClientKey","protocolOptions","appliedDefaults","v3ServerField","host","v3TimeoutField","useConfigDefaults","onTLSSettingsChange","onSwitchToggle","onCertificateChangeFactory","onResetClickFactory","onCustomSettingsChange","customSettings","setting","onLogsConfigChange","onTracesConfigChange","setCustomSettings","hasAdditionalSettings","location","enableSecureSocksProxy","defaultPort","portDescription","uidWarning","onUpdateDatasourceJsonDataOption","port","onPortChange","disabledOptions","onProtocolToggle","httpHeaders","secureHttpHeaderKeys","secureHttpHeaderValues","currentSecureJsonFields","tlsAuth","onUpdateDatasourceSecureJsonDataOption","featureToggles","versionGte","changeEvent","newSettings","setQueryEditor","savedQuery","onRunQuery","oldPluginVersion","oldQueryType","isV3CHQuery","builderQuery","rawSqlQuery","migrateV3CHQuery","migrateCHQuery","getAppEvents","DashboardLoadedEvent","dashboardId","orgId","grafanaVersion","queries","clickhouseQueries","pluginJson","q","clickhouse_plugin_version","clickhouseVersion","grafana_version","dashboard_id","org_id","sql_queries","sql_query_type_table","sql_query_type_logs","sql_query_type_timeseries","sql_query_type_traces","builder_queries","builder_query_type_table","builder_query_type_table_simple","builder_query_type_table_aggregate","builder_query_type_logs","builder_query_type_timeseries","builder_query_type_timeseries_simple","builder_query_type_timeseries_aggregate","builder_query_type_traces","builder_query_type_traces_search","builder_query_type_traces_id","builder_minimized_queries","builder_otel_queries","analyzeQueries","reportInteraction"],"sourceRoot":""}