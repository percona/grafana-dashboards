// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PluginTooltip Renders with right props 1`] = `
<PluginTooltip
  links={
    [
      {
        "text": "Some text",
        "url": "/test-url",
      },
    ]
  }
  text="test tooltip text"
>
  <Tooltip
    placement="topLeft"
    style={
      {
        "background": "deepskyblue",
      }
    }
    title={
      <React.Fragment>
        test tooltip text
         
        <br />
        <div>
          <a
            href="/test-url"
            rel="noopener noreferrer"
            style={
              {
                "color": "white",
                "textDecoration": "underline",
              }
            }
            target="_blank"
          >
            Some text
          </a>
          <br />
        </div>
      </React.Fragment>
    }
  >
    <ForwardRef(Tooltip)
      arrowContent={
        <span
          className="ant-tooltip-arrow-content"
        />
      }
      builtinPlacements={
        {
          "bottom": {
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              0,
              12,
            ],
            "overflow": {
              "adjustY": true,
              "shiftX": 40,
              "shiftY": true,
            },
            "points": [
              "tc",
              "bc",
            ],
          },
          "bottomLeft": {
            "autoArrow": false,
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              0,
              12,
            ],
            "overflow": {
              "adjustX": true,
              "adjustY": true,
            },
            "points": [
              "tl",
              "bl",
            ],
          },
          "bottomRight": {
            "autoArrow": false,
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              0,
              12,
            ],
            "overflow": {
              "adjustX": true,
              "adjustY": true,
            },
            "points": [
              "tr",
              "br",
            ],
          },
          "left": {
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              -12,
              0,
            ],
            "overflow": {
              "adjustX": true,
              "shiftX": true,
              "shiftY": 32,
            },
            "points": [
              "cr",
              "cl",
            ],
          },
          "leftBottom": {
            "autoArrow": false,
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              -12,
              0,
            ],
            "overflow": {
              "adjustX": true,
              "adjustY": true,
            },
            "points": [
              "br",
              "bl",
            ],
          },
          "leftTop": {
            "autoArrow": false,
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              -12,
              0,
            ],
            "overflow": {
              "adjustX": true,
              "adjustY": true,
            },
            "points": [
              "tr",
              "tl",
            ],
          },
          "right": {
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              12,
              0,
            ],
            "overflow": {
              "adjustX": true,
              "shiftX": true,
              "shiftY": 32,
            },
            "points": [
              "cl",
              "cr",
            ],
          },
          "rightBottom": {
            "autoArrow": false,
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              12,
              0,
            ],
            "overflow": {
              "adjustX": true,
              "adjustY": true,
            },
            "points": [
              "bl",
              "br",
            ],
          },
          "rightTop": {
            "autoArrow": false,
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              12,
              0,
            ],
            "overflow": {
              "adjustX": true,
              "adjustY": true,
            },
            "points": [
              "tl",
              "tr",
            ],
          },
          "top": {
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              0,
              -12,
            ],
            "overflow": {
              "adjustY": true,
              "shiftX": 40,
              "shiftY": true,
            },
            "points": [
              "bc",
              "tc",
            ],
          },
          "topLeft": {
            "autoArrow": false,
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              0,
              -12,
            ],
            "overflow": {
              "adjustX": true,
              "adjustY": true,
            },
            "points": [
              "bl",
              "tl",
            ],
          },
          "topRight": {
            "autoArrow": false,
            "dynamicInset": true,
            "htmlRegion": "visibleFirst",
            "offset": [
              0,
              -12,
            ],
            "overflow": {
              "adjustX": true,
              "adjustY": true,
            },
            "points": [
              "br",
              "tr",
            ],
          },
        }
      }
      destroyTooltipOnHide={false}
      motion={
        {
          "motionDeadline": 1000,
          "motionName": "ant-zoom-big-fast",
        }
      }
      mouseEnterDelay={0.1}
      mouseLeaveDelay={0.1}
      onVisibleChange={[Function]}
      overlay={
        <NoCompactStyle>
          <React.Fragment>
            test tooltip text
             
            <br />
            <div>
              <a
                href="/test-url"
                rel="noopener noreferrer"
                style={
                  {
                    "color": "white",
                    "textDecoration": "underline",
                  }
                }
                target="_blank"
              >
                Some text
              </a>
              <br />
            </div>
          </React.Fragment>
        </NoCompactStyle>
      }
      overlayClassName="css-dev-only-do-not-override-42nv3w"
      overlayInnerStyle={{}}
      overlayStyle={{}}
      placement="topLeft"
      prefixCls="ant-tooltip"
      showArrow={true}
      style={
        {
          "background": "deepskyblue",
        }
      }
      title={
        <React.Fragment>
          test tooltip text
           
          <br />
          <div>
            <a
              href="/test-url"
              rel="noopener noreferrer"
              style={
                {
                  "color": "white",
                  "textDecoration": "underline",
                }
              }
              target="_blank"
            >
              Some text
            </a>
            <br />
          </div>
        </React.Fragment>
      }
      visible={false}
    >
      <Trigger
        action={
          [
            "hover",
          ]
        }
        arrow={true}
        autoDestroy={false}
        builtinPlacements={
          {
            "bottom": {
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                0,
                12,
              ],
              "overflow": {
                "adjustY": true,
                "shiftX": 40,
                "shiftY": true,
              },
              "points": [
                "tc",
                "bc",
              ],
            },
            "bottomLeft": {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                0,
                12,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "tl",
                "bl",
              ],
            },
            "bottomRight": {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                0,
                12,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "tr",
                "br",
              ],
            },
            "left": {
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                -12,
                0,
              ],
              "overflow": {
                "adjustX": true,
                "shiftX": true,
                "shiftY": 32,
              },
              "points": [
                "cr",
                "cl",
              ],
            },
            "leftBottom": {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                -12,
                0,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "br",
                "bl",
              ],
            },
            "leftTop": {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                -12,
                0,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "tr",
                "tl",
              ],
            },
            "right": {
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                12,
                0,
              ],
              "overflow": {
                "adjustX": true,
                "shiftX": true,
                "shiftY": 32,
              },
              "points": [
                "cl",
                "cr",
              ],
            },
            "rightBottom": {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                12,
                0,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "bl",
                "br",
              ],
            },
            "rightTop": {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                12,
                0,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "tl",
                "tr",
              ],
            },
            "top": {
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                0,
                -12,
              ],
              "overflow": {
                "adjustY": true,
                "shiftX": 40,
                "shiftY": true,
              },
              "points": [
                "bc",
                "tc",
              ],
            },
            "topLeft": {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                0,
                -12,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "bl",
                "tl",
              ],
            },
            "topRight": {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                0,
                -12,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "br",
                "tr",
              ],
            },
          }
        }
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        onPopupVisibleChange={[Function]}
        popup={[Function]}
        popupAlign={{}}
        popupClassName="css-dev-only-do-not-override-42nv3w"
        popupMotion={
          {
            "motionDeadline": 1000,
            "motionName": "ant-zoom-big-fast",
          }
        }
        popupPlacement="topLeft"
        popupStyle={{}}
        popupVisible={false}
        prefixCls="ant-tooltip"
        style={
          {
            "background": "deepskyblue",
          }
        }
        title={
          <React.Fragment>
            test tooltip text
             
            <br />
            <div>
              <a
                href="/test-url"
                rel="noopener noreferrer"
                style={
                  {
                    "color": "white",
                    "textDecoration": "underline",
                  }
                }
                target="_blank"
              >
                Some text
              </a>
              <br />
            </div>
          </React.Fragment>
        }
        visible={false}
      >
        <ResizeObserver
          disabled={true}
          onResize={[Function]}
        >
          <SingleObserver
            disabled={true}
            key="rc-observer-key-0"
            onResize={[Function]}
          >
            <DomWrapper>
              <TriggerWrapper>
                <QuestionCircleFilled
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onPointerEnter={[Function]}
                  onPointerLeave={[Function]}
                  style={
                    {
                      "marginLeft": "5px",
                    }
                  }
                >
                  <AntdIcon
                    icon={
                      {
                        "icon": {
                          "attrs": {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": [
                            {
                              "attrs": {
                                "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "question-circle",
                        "theme": "filled",
                      }
                    }
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onPointerEnter={[Function]}
                    onPointerLeave={[Function]}
                    style={
                      {
                        "marginLeft": "5px",
                      }
                    }
                  >
                    <span
                      aria-label="question-circle"
                      className="anticon anticon-question-circle"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      role="img"
                      style={
                        {
                          "marginLeft": "5px",
                        }
                      }
                    >
                      <IconReact
                        icon={
                          {
                            "icon": {
                              "attrs": {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": [
                                {
                                  "attrs": {
                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "question-circle",
                            "theme": "filled",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="question-circle"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-question-circle"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z"
                            key="svg-question-circle-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </QuestionCircleFilled>
              </TriggerWrapper>
            </DomWrapper>
          </SingleObserver>
        </ResizeObserver>
        <Popup
          align={
            {
              "autoArrow": false,
              "dynamicInset": true,
              "htmlRegion": "visibleFirst",
              "offset": [
                0,
                -12,
              ],
              "overflow": {
                "adjustX": true,
                "adjustY": true,
              },
              "points": [
                "bl",
                "tl",
              ],
            }
          }
          arrow={{}}
          arrowPos={
            {
              "x": 0,
              "y": 0,
            }
          }
          autoDestroy={false}
          className="css-dev-only-do-not-override-42nv3w ant-tooltip-placement-topLeft"
          keepDom={false}
          maskMotion={null}
          motion={
            {
              "motionDeadline": 1000,
              "motionName": "ant-zoom-big-fast",
            }
          }
          offsetB={0}
          offsetR={0}
          offsetX={0}
          offsetY={0}
          onAlign={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onPointerEnter={[Function]}
          onPrepare={[Function]}
          onVisibleChanged={[Function]}
          open={false}
          popup={[Function]}
          portal={
            {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          prefixCls="ant-tooltip"
          ready={false}
          style={{}}
          target={
            <span
              aria-label="question-circle"
              class="anticon anticon-question-circle"
              role="img"
              style="margin-left: 5px;"
            >
              <svg
                aria-hidden="true"
                data-icon="question-circle"
                fill="currentColor"
                focusable="false"
                height="1em"
                viewBox="64 64 896 896"
                width="1em"
              >
                <path
                  d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z"
                />
              </svg>
            </span>
          }
          targetHeight={0}
          targetWidth={0}
        >
          <Portal
            autoDestroy={false}
            open={false}
          />
        </Popup>
      </Trigger>
    </ForwardRef(Tooltip)>
  </Tooltip>
</PluginTooltip>
`;
