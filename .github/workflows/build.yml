name: Grafana dashboards push checks

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Build grafana-dashboards
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable node_modules cache
        uses: percona-platform/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-

      - run: make prepare_release
      - run: make build_package

      - name: Upload Built interface
        uses: actions/upload-artifact@v2
        with:
          name: build-dist
          path: pmm-app/dist/
          if-no-files-found: error

      - name: Setup tmate session on failure
        if: ${{ failure() }}
        uses: percona-platform/action-tmate@v2

  e2e:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Run e2e tests and upload artifacts
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Download built packages
        uses: actions/download-artifact@v2
        with:
          name: build-dist
          path: pmm-app/dist/

      - name: Enable node_modules cache
        uses: percona-platform/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-

      - run: make prepare_release
      - run: make docker_clean
      - run: make e2e_local

      - name: Setup tmate session on failure
        if: ${{ failure() }}
        uses: percona-platform/action-tmate@v2

  code_coverage:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Generate and upload code coverage
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_GRAFANA_DASHBOARDS_TOKEN }}

      - name: Download built packages
        uses: actions/download-artifact@v2
        with:
          name: build-dist
          path: pmm-app/dist/

      - name: Enable node_modules cache
        uses: percona-platform/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-

      - run: make prepare_release
      - run: make generate_coverage

  upload_artifacts:
    name: Upload e2e testing artifacts
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - uses: actions/checkout@v2

      - name: Upload math result for job 1
        uses: actions/upload-artifact@v2
        with:
          path: pmm-app/tests/output/parallel_chunk*/*.png
